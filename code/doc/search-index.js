var searchIndex = JSON.parse('{\
"flow_impl":{"doc":"`flow_impl` is a trait that flow function implementations…","i":[[6,"RunAgain","flow_impl","Implementations should return a value of type `RunAgain`…",null,null],[17,"RUN_AGAIN","","Use `RUN_AGAIN` to indicate that a function can be…",null,null],[17,"DONT_RUN_AGAIN","","Use `DONT_RUN_AGAIN` to indicate that a function should…",null,null],[8,"Implementation","","An implementation runs with an array of inputs and returns…",null,null],[10,"run","","The `run` method is used to execute the implementation",0,[[]]]],"p":[[8,"Implementation"]]},\
"flow_impl_derive":{"doc":"`flow_impl_derive` is a derive macro that inserts code to…","i":[[24,"FlowImpl","flow_impl_derive","Implement the `FlowImpl` derive macro",null,null]],"p":[]},\
"flowc":{"doc":"`flowc` the the \\\"flow compiler\\\" that takes a hierarchical…","i":[[3,"Error","flowc","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[3,"Options","","",null,null],[12,"lib","","",1,null],[12,"url","","",1,null],[12,"flow_args","","",1,null],[12,"dump","","",1,null],[12,"skip_execution","","",1,null],[12,"debug_symbols","","",1,null],[12,"provided_implementations","","",1,null],[12,"output_dir","","",1,null],[12,"stdin_file","","",1,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Provider","","",2,null],[13,"Compiler","","",2,null],[13,"Io","","",2,null],[13,"Msg","","A convenient variant for String.",2,null],[5,"main","","",null,[[]]],[5,"run","","",null,[[],[["result",6],["string",3]]]],[5,"get_matches","","",null,[[],["argmatches",3]]],[5,"parse_args","","",null,[[["argmatches",3]],[["result",6],["options",3]]]],[0,"source_arg","","",null,null],[5,"get_output_dir","flowc::source_arg","",null,[[["url",3],["option",4]],[["result",6],["pathbuf",3]]]],[5,"make_writeable","","",null,[[["pathbuf",3]],[["result",6],["pathbuf",3]]]],[0,"lib_build","flowc","",null,null],[5,"build_lib","flowc::lib_build","Build a library from source and generate a manifest for it…",null,[[["options",3],["provider",8]],[["string",3],["result",6]]]],[5,"json_manifest_file","","",null,[[["pathbuf",3]],["pathbuf",3]]],[5,"rust_manifest_file","","",null,[[["pathbuf",3]],["pathbuf",3]]],[5,"write_lib_json_manifest","","",null,[[["librarymanifest",3],["pathbuf",3]],["result",6]]],[5,"write_lib_rust_manifest","","",null,[[["librarymanifest",3],["pathbuf",3]],["result",6]]],[5,"compile_implementations","","",null,[[["options",3],["librarymanifest",3],["provider",8]],["result",6]]],[0,"flow_compile","flowc","",null,null],[5,"check_root","flowc::flow_compile","",null,[[["flow",3]]]],[5,"compile_and_execute_flow","","",null,[[["options",3],["provider",8]],[["string",3],["result",6]]]],[5,"compile_supplied_implementations","","",null,[[["generationtables",3]],[["string",3],["result",6]]]],[5,"write_flow_manifest","","",null,[[["flow",3],["pathbuf",3],["generationtables",3]],[["result",6],["pathbuf",3]]]],[5,"get_executable_name","","",null,[[],["string",3]]],[5,"find_executable_path","","",null,[[],[["string",3],["result",6]]]],[5,"execute_flow","","",null,[[["options",3],["pathbuf",3]],[["string",3],["result",6]]]],[0,"compile_wasm","flowc","",null,null],[5,"compile_implementation","flowc::compile_wasm","",null,[[["function",3]],["result",6]]],[5,"run_cargo_build","","",null,[[["pathbuf",3]],[["string",3],["result",6]]]],[5,"get_paths","","",null,[[["function",3]],["result",6]]],[5,"out_of_date","","",null,[[["pathbuf",3]],["result",6]]],[6,"Result","flowc","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",3,[[],[["error",3],["result",4]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind",4]],["error",3]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[],["error",3]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",3],["error",8]],["error",3]]],[11,"kind","","Returns the kind of the error.",0,[[],["errorkind",4]]],[11,"iter","","Iterates over the error chain.",0,[[],["iter",3]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[],[["backtrace",3],["option",4]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[],["error",3]]],[11,"description","","A short description of the error. This method is identical…",0,[[]]],[11,"description","","A string describing the error kind.",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["errorkind",4]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["string",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["string",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"new","","",0,[[["state",3],["errorkind",4]],["error",3]]],[11,"from_kind","","",0,[[]]],[11,"with_chain","","",0,[[]]],[11,"kind","","",0,[[]]],[11,"iter","","",0,[[],["iter",3]]],[11,"chain_err","","",0,[[]]],[11,"backtrace","","",0,[[],[["backtrace",3],["option",4]]]],[11,"extract_backtrace","","",0,[[["error",8]],[["option",4],["internalbacktrace",3]]]]],"p":[[3,"Error"],[3,"Options"],[4,"ErrorKind"],[8,"ResultExt"]]},\
"flowclib":{"doc":"This is the rust `flow` Compiler Library. It can be linked…","i":[[3,"Error","flowclib","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Io","","",1,null],[13,"Url","","",1,null],[13,"Msg","","A convenient variant for String.",1,null],[0,"deserializers","","",null,null],[0,"deserializer_helper","flowclib::deserializers","",null,null],[5,"get_deserializer","flowclib::deserializers::deserializer_helper","",null,[[],[["string",3],["result",4],["deserializer",8]]]],[5,"get_accepted_extensions","","",null,[[]]],[5,"get_file_extension","","",null,[[],["option",4]]],[0,"dumper","flowclib","",null,null],[0,"dump_flow","flowclib::dumper","",null,null],[5,"dump_flow","flowclib::dumper::dump_flow","dump a flow definition that has been loaded to a file in…",null,[[["flow",3],["pathbuf",3],["provider",8]],[["string",3],["result",6]]]],[0,"dump_tables","flowclib::dumper","",null,null],[5,"dump_tables","flowclib::dumper::dump_tables","dump a flow\'s compiler tables that were constructed for…",null,[[["generationtables",3],["pathbuf",3]],[["string",3],["result",6]]]],[5,"dump_functions","","dump a flow\'s functions graph as a .dot file to visualize…",null,[[["generationtables",3],["flow",3],["pathbuf",3]],[["string",3],["result",6]]]],[0,"info","flowclib","Info module provides methods to get additional information…",null,null],[5,"version","flowclib::info","return the version number of the library as a string of…",null,[[]]],[0,"compiler","flowclib","Compile module that loads flow definition, compiles flows…",null,null],[0,"loader","flowclib::compiler","",null,null],[5,"load","flowclib::compiler::loader","Load a context process definition from `url`, recursively…",null,[[["provider",8]],[["result",6],["process",4]]]],[5,"load_metadata","","load library metadata from the given url using the…",null,[[["provider",8]],[["metadata",3],["result",6]]]],[8,"Deserializer","","All deserializers have to implement this trait for content…",null,null],[10,"deserialize","","",2,[[["option",4]],[["result",6],["process",4]]]],[10,"name","","",2,[[]]],[8,"Validate","","Many structs in the model implement the `Validate` method…",null,null],[10,"validate","","",3,[[],["result",6]]],[0,"compile","flowclib::compiler","",null,null],[5,"compile","flowclib::compiler::compile","Take a hierarchical flow definition in memory and compile…",null,[[["flow",3]],[["result",6],["generationtables",3]]]],[0,"generator","flowclib","",null,null],[0,"generate","flowclib::generator","",null,null],[3,"GenerationTables","flowclib::generator::generate","",null,null],[12,"connections","","",4,null],[12,"source_routes","","",4,null],[12,"destination_routes","","HashMap from \\\"route of the output of a function\\\" -->…",4,null],[12,"collapsed_connections","","HashMap from \\\"route of the input of a function\\\" -->…",4,null],[12,"functions","","",4,null],[12,"libs","","",4,null],[5,"create_manifest","","",null,[[["generationtables",3],["flow",3]],[["result",6],["manifest",3]]]],[11,"new","","",4,[[]]],[0,"model","flowclib","",null,null],[0,"name","flowclib::model","",null,null],[3,"Name","flowclib::model::name","",null,null],[8,"HasName","","",null,null],[10,"name","","",5,[[],["name",3]]],[10,"alias","","",5,[[],["name",3]]],[11,"map","","Map a function over the wrapped value, consuming it in the…",6,[[["fnmut",8]]]],[11,"map_ref","","Map a function over the wrapped value without consuming it.",6,[[["fnmut",8]]]],[11,"empty","","",6,[[]]],[0,"datatype","flowclib::model","",null,null],[3,"DataType","flowclib::model::datatype","",null,null],[8,"HasDataType","","",null,null],[10,"datatype","","",7,[[],["datatype",3]]],[11,"map","","Map a function over the wrapped value, consuming it in the…",8,[[["fnmut",8]]]],[11,"map_ref","","Map a function over the wrapped value without consuming it.",8,[[["fnmut",8]]]],[11,"valid","","",8,[[],["result",6]]],[11,"is_array","","",8,[[]]],[11,"is_generic","","",8,[[]]],[11,"array_of","","Determine if this data type is an array of the other",8,[[]]],[11,"within_array","","Get the data type the array holds",8,[[],["result",6]]],[11,"type_string","","Take a json data value and return the type string for it,…",8,[[["value",4]],["string",3]]],[11,"array_order","","Take a string description of a DataType and determine how…",8,[[],["result",6]]],[0,"route","flowclib::model","",null,null],[3,"Route","flowclib::model::route","",null,null],[12,"0","","",9,null],[4,"RouteType","","",null,null],[13,"Input","","",10,null],[13,"Output","","",10,null],[13,"Internal","","",10,null],[13,"Invalid","","",10,null],[8,"HasRoute","","",null,null],[10,"route","","",11,[[],["route",3]]],[10,"route_mut","","",11,[[],["route",3]]],[8,"SetRoute","","",null,null],[10,"set_routes_from_parent","","",12,[[["route",3]]]],[8,"SetIORoutes","","",null,null],[10,"set_io_routes_from_parent","","",13,[[["iotype",4],["route",3]]]],[11,"map","","Map a function over the wrapped value, consuming it in the…",9,[[["fnmut",8]]]],[11,"map_ref","","Map a function over the wrapped value without consuming it.",9,[[["fnmut",8]]]],[11,"map_mut","","Map a function over the wrapped value, potentially…",9,[[]]],[11,"sub_route_of","","`sub_route_of` returns an Option indicating if `self` is a…",9,[[["route",3]],[["option",4],["route",3]]]],[11,"insert","","Insert another Route at the front of this Route",9,[[["asref",8]]]],[11,"extend","","Extend a Route by appending another Route to the end,…",9,[[["route",3]]]],[11,"route_type","","",9,[[],["routetype",4]]],[11,"pop","","Return a route that is one level up, such that…",9,[[]]],[11,"without_trailing_array_index","","Return the io route without a trailing number (array…",9,[[]]],[0,"function","flowclib::model","",null,null],[3,"Function","flowclib::model::function","",null,null],[12,"inputs","","",14,null],[11,"new","","",14,[[["string",3],["option",4],["outputconnection",3],["ioset",6],["route",3],["vec",3],["name",3]]]],[11,"set_id","","",14,[[]]],[11,"get_id","","",14,[[]]],[11,"set_flow_id","","",14,[[]]],[11,"get_flow_id","","",14,[[]]],[11,"is_impure","","",14,[[]]],[11,"get_inputs","","",14,[[],["ioset",6]]],[11,"get_mut_inputs","","",14,[[],["ioset",6]]],[11,"get_outputs","","",14,[[],["ioset",6]]],[11,"add_output_route","","",14,[[["outputconnection",3]]]],[11,"get_output_connections","","",14,[[],["vec",3]]],[11,"get_implementation","","",14,[[]]],[11,"set_implementation","","",14,[[]]],[11,"get_source_url","","",14,[[]]],[11,"set_source_url","","",14,[[]]],[11,"set_alias","","",14,[[["name",3]]]],[11,"set_lib_reference","","",14,[[["string",3],["option",4]]]],[11,"get_lib_reference","","",14,[[],["option",4]]],[0,"flow","flowclib::model","",null,null],[3,"Flow","flowclib::model::flow","",null,null],[12,"name","","",15,null],[12,"process_refs","","",15,null],[12,"connections","","",15,null],[12,"description","","",15,null],[12,"version","","",15,null],[12,"authors","","",15,null],[12,"id","","",15,null],[12,"alias","","",15,null],[12,"source_url","","",15,null],[12,"route","","",15,null],[12,"subprocesses","","",15,null],[12,"lib_references","","",15,null],[11,"default_description","","",15,[[],["string",3]]],[11,"default_version","","",15,[[],["string",3]]],[11,"default_authors","","",15,[[],[["string",3],["vec",3]]]],[11,"default_email","","",15,[[],["string",3]]],[11,"set_alias","","",15,[[["name",3]]]],[11,"inputs","","",15,[[],["ioset",6]]],[11,"inputs_mut","","",15,[[],["ioset",6]]],[11,"outputs","","",15,[[],["ioset",6]]],[11,"get_route_and_type","","",15,[[["direction",4],["option",4],["route",3]],[["result",6],["io",3]]]],[11,"build_connections","","",15,[[],["result",6]]],[0,"process","flowclib::model","",null,null],[4,"Process","flowclib::model::process","",null,null],[13,"FlowProcess","","",16,null],[13,"FunctionProcess","","",16,null],[0,"process_reference","flowclib::model","",null,null],[3,"ProcessReference","flowclib::model::process_reference","",null,null],[12,"alias","","",17,null],[12,"source","","",17,null],[12,"initializations","","",17,null],[11,"set_alias","","if the ProcessRef does not specify an alias for the…",17,[[["name",3]]]],[0,"connection","flowclib::model","",null,null],[3,"Connection","flowclib::model::connection","",null,null],[12,"name","","",18,null],[12,"from","","",18,null],[12,"to","","",18,null],[12,"from_io","","",18,null],[12,"to_io","","",18,null],[12,"level","","",18,null],[4,"Direction","","",null,null],[13,"FROM","","",19,null],[13,"TO","","",19,null],[11,"compatible_types","","",18,[[["datatype",3]]]],[0,"io","flowclib::model","",null,null],[3,"IO","flowclib::model::io","",null,null],[4,"IOType","","",null,null],[13,"FunctionIO","","",20,null],[13,"FlowInput","","",20,null],[13,"FlowOutput","","",20,null],[6,"IOSet","","",null,null],[8,"Find","","",null,null],[10,"find_by_name","","",21,[[["option",4],["name",3]],[["result",6],["io",3]]]],[10,"find_by_route","","",21,[[["option",4],["route",3]],[["result",6],["io",3]]]],[11,"new","","",22,[[["into",8],["into",8],["datatype",3],["route",3]]]],[11,"flow_io","","",22,[[]]],[11,"io_type","","",22,[[],["iotype",4]]],[11,"set_flow_io","","",22,[[["iotype",4]]]],[11,"datatype","","",22,[[],["datatype",3]]],[11,"set_route","","",22,[[["route",3],["iotype",4]]]],[11,"set_datatype","","",22,[[["datatype",3]]]],[11,"get_initializer","","",22,[[],["option",4]]],[11,"set_initializer","","",22,[[["option",4]]]],[11,"set_initial_values","","",22,[[["option",4],["ioset",6]]]],[6,"Result","flowclib","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",23,[[],[["result",4],["error",3]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind",4]],["error",3]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[],["error",3]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",3],["error",8]],["error",3]]],[11,"kind","","Returns the kind of the error.",0,[[],["errorkind",4]]],[11,"iter","","Iterates over the error chain.",0,[[],["iter",3]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[],[["backtrace",3],["option",4]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[],["error",3]]],[11,"description","","A short description of the error. This method is identical…",0,[[]]],[11,"description","","A string describing the error kind.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","flowclib::generator::generate","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","flowclib::model::name","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","flowclib::model::datatype","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","flowclib::model::route","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","flowclib::model::function","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","flowclib::model::flow","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","flowclib::model::process","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","flowclib::model::process_reference","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","flowclib::model::connection","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","flowclib::model::io","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"validate","flowclib::model::name","",6,[[],["result",6]]],[11,"validate","flowclib::model::route","",9,[[],["result",6]]],[11,"validate","flowclib::model::function","",14,[[],["result",6]]],[11,"validate","flowclib::model::flow","",15,[[],["result",6]]],[11,"validate","flowclib::model::process_reference","",17,[[],["result",6]]],[11,"validate","flowclib::model::connection","",18,[[],["result",6]]],[11,"validate","flowclib::model::io","",22,[[],["result",6]]],[11,"validate","flowclib","",24,[[],["result",6]]],[11,"name","flowclib::model::function","",14,[[],["name",3]]],[11,"alias","","",14,[[],["name",3]]],[11,"name","flowclib::model::flow","",15,[[],["name",3]]],[11,"alias","","",15,[[],["name",3]]],[11,"name","flowclib::model::process","",16,[[],["name",3]]],[11,"alias","","",16,[[],["name",3]]],[11,"name","flowclib::model::process_reference","",17,[[],["name",3]]],[11,"alias","","",17,[[],["name",3]]],[11,"name","flowclib::model::io","",22,[[],["name",3]]],[11,"alias","","",22,[[],["name",3]]],[11,"datatype","","",22,[[],["datatype",3]]],[11,"route","flowclib::model::function","",14,[[],["route",3]]],[11,"route_mut","","",14,[[],["route",3]]],[11,"route","flowclib::model::flow","",15,[[],["route",3]]],[11,"route_mut","","",15,[[],["route",3]]],[11,"route","flowclib::model::process","",16,[[],["route",3]]],[11,"route_mut","","",16,[[],["route",3]]],[11,"route","flowclib::model::io","",22,[[],["route",3]]],[11,"route_mut","","",22,[[],["route",3]]],[11,"set_routes_from_parent","flowclib::model::function","",14,[[["route",3]]]],[11,"set_routes_from_parent","flowclib::model::flow","",15,[[["route",3]]]],[11,"set_io_routes_from_parent","flowclib","",24,[[["iotype",4],["route",3]]]],[11,"find_by_name","","",24,[[["option",4],["name",3]],[["result",6],["io",3]]]],[11,"find_by_route","","",24,[[["option",4],["route",3]],[["result",6],["io",3]]]],[11,"as_mut","flowclib::model::route","",9,[[],["string",3]]],[11,"as_ref","flowclib::model::name","",6,[[],["string",3]]],[11,"as_ref","flowclib::model::datatype","",8,[[],["string",3]]],[11,"as_ref","flowclib::model::route","",9,[[],["string",3]]],[11,"as_ref","","",9,[[]]],[11,"from","flowclib::model::name","",6,[[]]],[11,"from","","",6,[[["string",3]]]],[11,"from","","",6,[[["string",3]]]],[11,"from","","",6,[[["route",3]]]],[11,"from","flowclib::model::datatype","",8,[[]]],[11,"from","flowclib::model::route","",9,[[]]],[11,"from","","",9,[[["string",3]]]],[11,"from","","",9,[[["string",3]]]],[11,"from","","",9,[[["name",3]]]],[11,"from","flowclib","",0,[[["error",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["errorkind",4]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["string",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["string",3]]]],[11,"clone","flowclib::model::name","",6,[[],["name",3]]],[11,"clone","flowclib::model::datatype","",8,[[],["datatype",3]]],[11,"clone","flowclib::model::route","",9,[[],["route",3]]],[11,"clone","flowclib::model::function","",14,[[],["function",3]]],[11,"clone","flowclib::model::flow","",15,[[],["flow",3]]],[11,"clone","flowclib::model::process","",16,[[],["process",4]]],[11,"clone","flowclib::model::process_reference","",17,[[],["processreference",3]]],[11,"clone","flowclib::model::connection","",18,[[],["connection",3]]],[11,"clone","flowclib::model::io","",20,[[],["iotype",4]]],[11,"clone","","",22,[[],["io",3]]],[11,"default","flowclib::generator::generate","",4,[[],["generationtables",3]]],[11,"default","flowclib::model::name","",6,[[],["name",3]]],[11,"default","flowclib::model::datatype","",8,[[],["datatype",3]]],[11,"default","flowclib::model::route","",9,[[],["route",3]]],[11,"default","flowclib::model::function","",14,[[],["function",3]]],[11,"default","flowclib::model::flow","",15,[[],["flow",3]]],[11,"default","flowclib::model::process","",16,[[],["process",4]]],[11,"default","flowclib::model::io","",22,[[]]],[11,"eq","flowclib::model::name","",6,[[["name",3]]]],[11,"ne","","",6,[[["name",3]]]],[11,"eq","flowclib::model::datatype","",8,[[["datatype",3]]]],[11,"ne","","",8,[[["datatype",3]]]],[11,"eq","flowclib::model::route","",9,[[["route",3]]]],[11,"ne","","",9,[[["route",3]]]],[11,"eq","flowclib::model::io","",20,[[["iotype",4]]]],[11,"deref","flowclib::model::name","",6,[[]]],[11,"deref","flowclib::model::datatype","",8,[[]]],[11,"deref","flowclib::model::route","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"fmt","flowclib::model::name","",6,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::datatype","",8,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::route","",9,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::function","",14,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::flow","",15,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::process","",16,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::process_reference","",17,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::connection","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::io","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::name","",6,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::datatype","",8,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::route","",9,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::function","",14,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::flow","",15,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::process_reference","",17,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::connection","",18,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib::model::io","",22,[[["formatter",3]],["result",6]]],[11,"fmt","flowclib","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","flowclib::model::name","",6,[[]]],[11,"hash","flowclib::model::datatype","",8,[[]]],[11,"hash","flowclib::model::route","",9,[[]]],[11,"borrow","flowclib::model::name","",6,[[],["string",3]]],[11,"borrow","flowclib::model::datatype","",8,[[],["string",3]]],[11,"borrow","flowclib::model::route","",9,[[],["string",3]]],[11,"borrow_mut","","",9,[[],["string",3]]],[11,"description","flowclib","",0,[[]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"new","","",0,[[["errorkind",4],["state",3]],["error",3]]],[11,"from_kind","","",0,[[]]],[11,"with_chain","","",0,[[]]],[11,"kind","","",0,[[]]],[11,"iter","","",0,[[],["iter",3]]],[11,"chain_err","","",0,[[]]],[11,"backtrace","","",0,[[],[["backtrace",3],["option",4]]]],[11,"extract_backtrace","","",0,[[["error",8]],[["option",4],["internalbacktrace",3]]]],[11,"serialize","flowclib::generator::generate","",4,[[],["result",4]]],[11,"serialize","flowclib::model::name","",6,[[],["result",4]]],[11,"serialize","flowclib::model::datatype","",8,[[],["result",4]]],[11,"serialize","flowclib::model::route","",9,[[],["result",4]]],[11,"serialize","flowclib::model::function","",14,[[],["result",4]]],[11,"serialize","flowclib::model::flow","",15,[[],["result",4]]],[11,"serialize","flowclib::model::process","",16,[[],["result",4]]],[11,"serialize","flowclib::model::process_reference","",17,[[],["result",4]]],[11,"serialize","flowclib::model::connection","",18,[[],["result",4]]],[11,"serialize","flowclib::model::io","",20,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"deserialize","flowclib::model::name","",6,[[],["result",4]]],[11,"deserialize","flowclib::model::datatype","",8,[[],["result",4]]],[11,"deserialize","flowclib::model::route","",9,[[],["result",4]]],[11,"deserialize","flowclib::model::function","",14,[[],["result",4]]],[11,"deserialize","flowclib::model::flow","",15,[[],["result",4]]],[11,"deserialize","flowclib::model::process","",16,[[],["result",4]]],[11,"deserialize","flowclib::model::process_reference","",17,[[],["result",4]]],[11,"deserialize","flowclib::model::connection","",18,[[],["result",4]]],[11,"deserialize","flowclib::model::io","",20,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]]],"p":[[3,"Error"],[4,"ErrorKind"],[8,"Deserializer"],[8,"Validate"],[3,"GenerationTables"],[8,"HasName"],[3,"Name"],[8,"HasDataType"],[3,"DataType"],[3,"Route"],[4,"RouteType"],[8,"HasRoute"],[8,"SetRoute"],[8,"SetIORoutes"],[3,"Function"],[3,"Flow"],[4,"Process"],[3,"ProcessReference"],[3,"Connection"],[4,"Direction"],[4,"IOType"],[8,"Find"],[3,"IO"],[8,"ResultExt"],[6,"IOSet"]]},\
"flowide":{"doc":"The `flowide` is a prototype of an IDE for `flow` programs.","i":[[3,"UICONTEXT","flowide","",null,null],[12,"__private_field","","",0,null],[5,"resource","","",null,[[],["string",3]]],[5,"about_dialog","","",null,[[],["aboutdialog",3]]],[5,"open_action","","",null,[[["applicationwindow",3],["menuitem",3]]]],[5,"run_action","","",null,[[["menuitem",3]]]],[5,"compile_action","","",null,[[["menuitem",3]]]],[5,"menu_bar","","",null,[[["applicationwindow",3]]]],[5,"stdio","","",null,[[]]],[5,"flow_viewer","","",null,[[]]],[5,"manifest_viewer","","",null,[[]]],[5,"main_window","","",null,[[["applicationwindow",3],["menuitem",3],["accelgroup",3]],["widgetrefs",3]]],[5,"build_ui","","",null,[[["application",3]]]],[5,"set_panic_hook","","",null,[[]]],[5,"message","","",null,[[]]],[5,"main","","",null,[[],[["result",4],["string",3]]]],[0,"ide_runtime_client","","",null,null],[3,"IDERuntimeClient","flowide::ide_runtime_client","",null,null],[12,"args","","",1,null],[12,"image_buffers","","",1,null],[12,"display_metrics","","",1,null],[11,"new","","",1,[[]]],[11,"set_args","","",1,[[["string",3],["vec",3]]]],[0,"ui_context","flowide","",null,null],[3,"UIContext","flowide::ui_context","",null,null],[12,"loader","","",2,null],[12,"flow","","",2,null],[12,"flow_url","","",2,null],[12,"manifest","","",2,null],[12,"manifest_url","","",2,null],[12,"client","","",2,null],[11,"new","","",2,[[]]],[0,"actions","flowide","",null,null],[5,"manifest_url","flowide::actions","",null,[[],["string",3]]],[5,"compile_flow","","",null,[[]]],[5,"load_flow_from_url","","",null,[[],[["result",4],["flow",3],["string",3]]]],[5,"open_flow","","",null,[[["string",3]]]],[5,"set_manifest","","",null,[[["manifest",3]]]],[5,"open_manifest","","",null,[[["string",3]]]],[5,"set_args","","",null,[[["string",3],["vec",3]]]],[5,"run_manifest","","",null,[[["string",3],["vec",3]]]],[0,"cli_debug_client","flowide","",null,null],[0,"widgets","","Usage",null,null],[3,"WidgetRefs","flowide::widgets","",null,null],[12,"app_window","","",3,null],[12,"main_window","","",3,null],[12,"flow_buffer","","",3,null],[12,"manifest_buffer","","",3,null],[12,"stdout","","",3,null],[12,"stderr","","",3,null],[12,"compile_flow_menu","","",3,null],[12,"run_manifest_menu","","",3,null],[3,"TX","","This is the sender part of the above RX channel. All…",null,null],[12,"__private_field","","",4,null],[5,"init_storage","","Initializes the static storages. You must call this…",null,[[["widgetrefs",3]]]],[5,"do_in_gtk_eventloop","","Call this from non-gtk threads. The closure allows you to…",null,[[]]],[5,"handle_one_callback_in_gtk_thread","","",null,[[]]],[5,"init_storage_from_builder","","",null,[[["builder",3]]]],[6,"BoxedUiAction","","",null,null],[6,"FnAndEvent","","",null,null],[17,"DATA","","This variable is only populated in the gtk thread. The…",null,null],[17,"RX","","This variable is only populated in the gtk thread. The gtk…",null,null],[11,"app_window","","",3,[[],["applicationwindow",3]]],[11,"main_window","","",3,[[],["box",3]]],[11,"flow_buffer","","",3,[[],["textbuffer",3]]],[11,"manifest_buffer","","",3,[[],["textbuffer",3]]],[11,"stdout","","",3,[[],["textbuffer",3]]],[11,"stderr","","",3,[[],["textbuffer",3]]],[11,"compile_flow_menu","","",3,[[],["menuitem",3]]],[11,"run_manifest_menu","","",3,[[],["menuitem",3]]],[14,"upgrade_weak","flowide","upgrade weak reference or return",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","flowide::ide_runtime_client","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","flowide::ui_context","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","flowide::widgets","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",3,[[["builder",3]],["widgetrefs",3]]],[11,"clone","flowide::ide_runtime_client","",1,[[],["ideruntimeclient",3]]],[11,"deref","flowide","",0,[[],["arc",3]]],[11,"deref","flowide::widgets","",4,[[],["mutex",3]]],[11,"fmt","flowide::ide_runtime_client","",1,[[["formatter",3]],["result",6]]],[11,"initialize","flowide","",0,[[]]],[11,"initialize","flowide::widgets","",4,[[]]]],"p":[[3,"UICONTEXT"],[3,"IDERuntimeClient"],[3,"UIContext"],[3,"WidgetRefs"],[3,"TX"]]},\
"flowr":{"doc":"#![deny(missing_docs)] `flowr` is the flow runner. It…","i":[[3,"Error","flowr","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Provider","","",1,null],[13,"Runtime","","",1,null],[13,"Io","","",1,null],[13,"Msg","","A convenient variant for String.",1,null],[5,"main","","",null,[[]]],[5,"run","","",null,[[],["result",6]]],[5,"num_threads","","",null,[[["argmatches",3]]]],[5,"num_parallel_jobs","","",null,[[["argmatches",3]]]],[5,"get_matches","","",null,[[],["argmatches",3]]],[5,"parse_flow_url","","",null,[[["argmatches",3]],[["url",3],["result",6]]]],[5,"get_flow_args","","",null,[[["url",3],["argmatches",3]],[["string",3],["vec",3]]]],[0,"cli_debug_client","","",null,null],[3,"CLIDebugClient","flowr::cli_debug_client","",null,null],[17,"HELP_STRING","","",null,null],[11,"start","","",2,[[["debugclientconnection",3]]]],[11,"help","","",2,[[]]],[11,"parse_command","","",2,[[]]],[11,"get_user_command","","",2,[[],[["response",4],["result",6]]]],[11,"process_event","","",2,[[["event",4]],[["response",4],["result",6]]]],[0,"cli_runtime_client","flowr","",null,null],[3,"CLIRuntimeClient","flowr::cli_runtime_client","",null,null],[12,"args","","",3,null],[12,"image_buffers","","",3,null],[12,"display_metrics","","",3,null],[11,"new","","",3,[[["string",3],["vec",3]]]],[11,"start","","",3,[[["string",3],["runtimeclientconnection",3],["vec",3],["submission",3]],["result",6]]],[11,"capture_control_c","","",3,[[["runtimeclientconnection",3]]]],[11,"process_event","","",3,[[["event",4]],["response",4]]],[6,"Result","flowr","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",4,[[],[["result",4],["error",3]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind",4]],["error",3]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[],["error",3]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",3],["error",8]],["error",3]]],[11,"kind","","Returns the kind of the error.",0,[[],["errorkind",4]]],[11,"iter","","Iterates over the error chain.",0,[[],["iter",3]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[],[["backtrace",3],["option",4]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[],["error",3]]],[11,"description","","A short description of the error. This method is identical…",0,[[]]],[11,"description","","A string describing the error kind.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","flowr::cli_debug_client","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","flowr::cli_runtime_client","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","flowr","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["errorkind",4]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["string",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["string",3]]]],[11,"clone","flowr::cli_runtime_client","",3,[[],["cliruntimeclient",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","flowr","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"new","","",0,[[["errorkind",4],["state",3]],["error",3]]],[11,"from_kind","","",0,[[]]],[11,"with_chain","","",0,[[]]],[11,"kind","","",0,[[]]],[11,"iter","","",0,[[],["iter",3]]],[11,"chain_err","","",0,[[]]],[11,"backtrace","","",0,[[],[["backtrace",3],["option",4]]]],[11,"extract_backtrace","","",0,[[["error",8]],[["option",4],["internalbacktrace",3]]]]],"p":[[3,"Error"],[4,"ErrorKind"],[3,"CLIDebugClient"],[3,"CLIRuntimeClient"],[8,"ResultExt"]]},\
"flowrlib":{"doc":"Runtime library for flow execution. This will be linked…","i":[[3,"Error","flowrlib","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Io","","",1,null],[13,"Serde","","",1,null],[13,"Recv","","",1,null],[13,"Provider","","",1,null],[13,"Msg","","A convenient variant for String.",1,null],[0,"info","","`info` offers methods to get information about this library",null,null],[5,"version","flowrlib::info","Return the version number of the `flowrlib` library",null,[[]]],[0,"coordinator","flowrlib","`coordinator` is the module that coordinates the execution…",null,null],[3,"Submission","flowrlib::coordinator","A Submission is the struct used to send a flow to the…",null,null],[12,"max_parallel_jobs","","",2,null],[12,"job_timeout","","",2,null],[12,"debug","","",2,null],[3,"Coordinator","","The Coordinator is responsible for coordinating the…",null,null],[11,"new","","Create a new `Submission` of a `Flow` for execution with…",2,[[],["submission",3]]],[11,"server","","Start the Coordinator server either in a background thread…",3,[[["option",4]],["result",6]]],[11,"start","","Start the Coordinator - this will block the thread it is…",3,[[],["result",6]]],[0,"loader","flowrlib","`loader` is responsible for loading a flow from it\'s…",null,null],[3,"Loader","flowrlib::loader","A `Loader` is responsible for loading a `Flow` from it\'s…",null,null],[11,"new","","Create a new `Loader`",4,[[]]],[11,"get_lib_implementations","","",4,[[],["hashmap",3]]],[11,"load_manifest","","Load all the processes defined in a manifest, and then…",4,[[["provider",8]],[["manifest",3],["result",6]]]],[11,"resolve_implementations","","Resolve or \\\"find\\\" all the implementations of functions for…",4,[[["provider",8],["manifest",3]],[["string",3],["result",6]]]],[11,"add_lib","","Add a library to the run-time by adding it\'s…",4,[[["provider",8],["librarymanifest",3]],["result",6]]],[0,"client_server","flowrlib","",null,null],[3,"RuntimeClientConnection","flowrlib::client_server","",null,null],[3,"DebugClientConnection","","",null,null],[3,"RuntimeServerConnection","","",null,null],[3,"DebugServerConnection","","",null,null],[11,"new","","",5,[[["runtimeserverconnection",3]]]],[11,"start","","",5,[[],["result",6]]],[11,"client_recv","","Receive an event from the runtime server",5,[[],[["result",6],["event",4]]]],[11,"client_send","","",5,[[["response",4]],["result",6]]],[11,"new","","",6,[[["debugserverconnection",3]]]],[11,"start","","",6,[[],["result",6]]],[11,"client_recv","","Receive an Event from the debug server",6,[[],[["result",6],["debugevent",4]]]],[11,"client_send","","Send an Event to the debug server",6,[[["debugresponse",4]],["result",6]]],[11,"new","","",7,[[["option",4]]]],[11,"start","","",7,[[],["result",6]]],[11,"get_response","","",7,[[],[["result",6],["response",4]]]],[11,"send_event","","",7,[[["event",4]],[["result",6],["response",4]]]],[11,"new","","",8,[[["option",4]]]],[11,"start","","",8,[[],["result",6]]],[11,"get_response","","",8,[[],[["debugresponse",4],["result",6]]]],[11,"send_event","","",8,[[["debugevent",4]],["result",6]]],[0,"debug","flowrlib","\'debug\' defines structs passed between the Server and the…",null,null],[4,"Param","flowrlib::debug","Types of `Params` used in communications between the…",null,null],[13,"Wildcard","","A \\\"*\\\" style parameter - meaning will depend on the…",9,null],[13,"Numeric","","A positive integer was specified",9,null],[13,"Output","","A descriptor for the `Output` of a `Function` was specified",9,null],[13,"Input","","A descriptor for the `Inout` of a `Function` was specified",9,null],[13,"Block","","A description of a \\\"block\\\" (when one function is blocked…",9,null],[4,"Response","","A debugger Response sent by the debug_client to the debug…",null,null],[13,"Ack","","Acknowledge event processed correctly",10,null],[13,"Breakpoint","","Set a `breakpoint` - with an optional parameter",10,null],[13,"Continue","","`continue` execution of the flow",10,null],[13,"Delete","","`delete` an existing breakpoint - with an optional parameter",10,null],[13,"EnterDebugger","","`enter` the debugger at the next opportunity the runtime has",10,null],[13,"ExitDebugger","","`exit` the debugger and runtime",10,null],[13,"Inspect","","`inspect` the current state",10,null],[13,"List","","`list` existing breakpoints",10,null],[13,"Print","","`print` a function or functions state",10,null],[13,"RunReset","","`reset` flow execution back to the initial state",10,null],[13,"Step","","`step` forward in flow execution by executing one…",10,null],[13,"GetState","","Get the state of the `Flow`",10,null],[13,"GetFunctionState","","Get the state of a specific `Function`",10,null],[13,"Error","","An error on the client side",10,null],[13,"Invalid","","Invalid - used when deserialization goes wrong",10,null],[4,"Event","","A run-time event that the debugger communicates to the…",null,null],[13,"JobCompleted","","A `Job` ran to completion by a function - includes:…",11,null],[13,"EnteringDebugger","","Entering the debugger",11,null],[13,"ExitingDebugger","","The debugger/run-time is exiting",11,null],[13,"PriorToSendingJob","","The run-time is about to send a `Job` for execution - an…",11,null],[13,"BlockBreakpoint","","A breakpoint on a `Block` between two functions was…",11,null],[13,"DataBreakpoint","","A breakpoint on a `Value` being sent between two functions…",11,null],[13,"Panic","","A panic occurred executing a `Flows` `Job` - includes the…",11,null],[13,"JobError","","There was an error executing the Job",11,null],[13,"ExecutionStarted","","Execution of the flow has started",11,null],[13,"ExecutionEnded","","Execution of the flow has ended",11,null],[13,"Deadlock","","A check has detected that there is a deadlock between…",11,null],[13,"SendingValue","","A value is being sent from the output of one function to…",11,null],[13,"Error","","An error was detected - includes: A string describing the…",11,null],[13,"Message","","A message for display to the user of the debug_client",11,null],[13,"Resetting","","The run-time is resetting the status back to the initial…",11,null],[13,"WaitingForCommand","","Debugger is blocked waiting for a command before proceeding",11,null],[13,"Invalid","","Invalid - used when deserialization goes wrong",11,null],[0,"runtime","flowrlib","\'runtime\' defines structs passed between the Server and…",null,null],[4,"Event","flowrlib::runtime","A run-time Event sent from the run-time to a runtime_client",null,null],[13,"FlowStart","","A flow has started executing",12,null],[13,"FlowEnd","","A flow has stopped executing",12,null],[13,"Stdout","","A String of contents was sent to stdout",12,null],[13,"Stderr","","A String of contents was sent to stderr",12,null],[13,"GetStdin","","A Request to read from Stdin",12,null],[13,"GetLine","","A Request to read a line of characters from Stdin",12,null],[13,"GetArgs","","A Request to get the arguments for the flow",12,null],[13,"Write","","A Request to write a series of bytes to a file",12,null],[13,"PixelWrite","","A Request to write a pixel to an ImageBuffer",12,null],[13,"StdoutEOF","","A Request to snd EOF to Stdout",12,null],[13,"StderrEOF","","A Request to snd EOF to Stderr",12,null],[13,"Invalid","","Invalid - used when deserialization goes wrong",12,null],[4,"Response","","A `Response` from the runtime_client to the run-time",null,null],[13,"Ack","","Simple acknowledgement",13,null],[13,"Stdin","","A String read from Stdin",13,null],[13,"Line","","A line of text read from Stdin using readline",13,null],[13,"Args","","A Vector of Strings that are the flow\'s arguments",13,null],[13,"Error","","An Error occurred in the runtime_client",13,null],[13,"GetStdinEOF","","EOF was detected on input reading using Stdin",13,null],[13,"GetLineEOF","","EOF was detected on input reading Stdin using Readline",13,null],[13,"ClientExiting","","Client is exiting Event loop",13,null],[13,"ClientSubmission","","A submission from the client for execution",13,null],[13,"EnterDebugger","","Client requests that server enters the ddebugger at the…",13,null],[13,"Invalid","","Invalid - used when deserialization goes wrong",13,null],[0,"metrics","flowrlib","",null,null],[3,"Metrics","flowrlib::metrics","",null,null],[11,"new","","",14,[[]]],[11,"reset","","",14,[[]]],[11,"set_jobs_created","","",14,[[]]],[11,"increment_outputs_sent","","",14,[[]]],[11,"track_max_jobs","","",14,[[]]],[11,"default_start_time","","",14,[[],["instant",3]]],[6,"Result","flowrlib","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",15,[[],[["result",4],["error",3]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind",4]],["error",3]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[],["error",3]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",3],["error",8]],["error",3]]],[11,"kind","","Returns the kind of the error.",0,[[],["errorkind",4]]],[11,"iter","","Iterates over the error chain.",0,[[],["iter",3]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[],[["backtrace",3],["option",4]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[],["error",3]]],[11,"description","","A short description of the error. This method is identical…",0,[[]]],[11,"description","","A string describing the error kind.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","flowrlib::coordinator","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","flowrlib::loader","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","flowrlib::client_server","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","flowrlib::debug","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"send","","",10,[[["socket",3]],[["error",4],["result",4]]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"send","","",11,[[["socket",3]],[["error",4],["result",4]]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","flowrlib::runtime","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"send","","",12,[[["socket",3]],[["error",4],["result",4]]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"send","","",13,[[["socket",3]],[["error",4],["result",4]]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","flowrlib::metrics","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","flowrlib::runtime","",12,[[["message",3]]]],[11,"from","","",13,[[["message",3]]]],[11,"from","flowrlib::debug","",11,[[["message",3]]]],[11,"from","","",10,[[["message",3]]]],[11,"from","flowrlib","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["recverror",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["errorkind",4]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["string",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["string",3]]]],[11,"default","flowrlib::loader","",4,[[],["loader",3]]],[11,"eq","flowrlib::coordinator","",2,[[["submission",3]]]],[11,"ne","","",2,[[["submission",3]]]],[11,"eq","flowrlib::runtime","",13,[[["response",4]]]],[11,"ne","","",13,[[["response",4]]]],[11,"fmt","flowrlib::coordinator","",2,[[["formatter",3]],["result",6]]],[11,"fmt","flowrlib::runtime","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","flowrlib::metrics","",14,[[["formatter",3]],["result",6]]],[11,"fmt","flowrlib","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","flowrlib::metrics","",14,[[["formatter",3]],["result",6]]],[11,"fmt","flowrlib","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"new","","",0,[[["state",3],["errorkind",4]],["error",3]]],[11,"from_kind","","",0,[[]]],[11,"with_chain","","",0,[[]]],[11,"kind","","",0,[[]]],[11,"iter","","",0,[[],["iter",3]]],[11,"chain_err","","",0,[[]]],[11,"backtrace","","",0,[[],[["backtrace",3],["option",4]]]],[11,"extract_backtrace","","",0,[[["error",8]],[["option",4],["internalbacktrace",3]]]],[11,"serialize","flowrlib::coordinator","",2,[[],["result",4]]],[11,"serialize","flowrlib::debug","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","flowrlib::runtime","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","flowrlib::metrics","",14,[[],["result",4]]],[11,"deserialize","flowrlib::coordinator","",2,[[],["result",4]]],[11,"deserialize","flowrlib::debug","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","flowrlib::runtime","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","flowrlib::metrics","",14,[[],["result",4]]]],"p":[[3,"Error"],[4,"ErrorKind"],[3,"Submission"],[3,"Coordinator"],[3,"Loader"],[3,"RuntimeClientConnection"],[3,"DebugClientConnection"],[3,"RuntimeServerConnection"],[3,"DebugServerConnection"],[4,"Param"],[4,"Response"],[4,"Event"],[4,"Event"],[4,"Response"],[3,"Metrics"],[8,"ResultExt"]]},\
"flowrstructs":{"doc":"","i":[[3,"Error","flowrstructs","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Io","","",1,null],[13,"Serde","","",1,null],[13,"Recv","","",1,null],[13,"Provider","","",1,null],[13,"Msg","","A convenient variant for String.",1,null],[0,"lib_manifest","","`lib_manifest` defines the structs for specifying a…",null,null],[3,"LibraryManifest","flowrstructs::lib_manifest","`LibraryManifest` describes the contents of a Library that…",null,null],[12,"metadata","","`metadata` about a flow with author, version and usual…",2,null],[12,"locators","","the `locators` map a reference to a…",2,null],[4,"ImplementationLocator","","Used to describe where an implementation can be found,…",null,null],[13,"Native","","A `Native` implementation is a reference to a trait object…",3,null],[13,"Wasm","","A `Wasm` implementation is compiled to wasm and loaded to…",3,null],[17,"DEFAULT_LIB_JSON_MANIFEST_FILENAME","","The default name used for a Library Manifest file if none…",null,null],[17,"DEFAULT_LIB_RUST_MANIFEST_FILENAME","","",null,null],[11,"new","","Create a new, empty, `LibraryManifest` with the provided…",2,[[["metadata",3]]]],[11,"load","","`load` a library from the `source` url, using the…",2,[[["provider",8]],["result",6]]],[11,"add_to_manifest","","Add a function\'s implementation to the library, specifying…",2,[[]]],[0,"function","flowrstructs","`function` defines functions that form part of a flow",null,null],[3,"Function","flowrstructs::function","`Function` contains all the information needed about a…",null,null],[11,"new","","Create a new `function` with the specified `name`,…",4,[[["string",3],["input",3],["vec",3]]]],[11,"reset","","Reset a `Function` to initial state. Used by a debugger at…",4,[[]]],[11,"default_implementation","","A default `Function` - used in deserialization of a…",4,[[],[["arc",3],["implementation",8]]]],[11,"name","","Accessor for a `Functions` `name`",4,[[]]],[11,"id","","Accessor for a `Functions` `id`",4,[[]]],[11,"get_flow_id","","Accessor for a `Functions` `flow_id`",4,[[]]],[11,"init_inputs","","Initialize all of a `Functions` `Inputs` - as they may…",4,[[]]],[11,"implementation_location","","Accessor for a `Functions` `implementation_location`",4,[[]]],[11,"send","","write a value to a `Function`\'s input",4,[[["value",4]]]],[11,"send_iter","","write an array of values to a `Function`\'s input",4,[[]]],[11,"get_output_connections","","Accessor for a `Functions` `output_connections` field",4,[[],["vec",3]]],[11,"get_implementation","","Get a clone of the `Functions` `implementation`",4,[[],[["arc",3],["implementation",8]]]],[11,"set_implementation","","Set a `Functions` `implementation`",4,[[["arc",3],["implementation",8]]]],[11,"input_count","","Determine if the `Functions` `input` number `input_number`…",4,[[]]],[11,"input_set_count","","Returns how many inputs sets are available across all the…",4,[[]]],[11,"inputs","","Inspect the values of the `inputs` of a feature. Only used…",4,[[],["vec",3]]],[11,"take_input_set","","Read the values from the inputs and return them for use in…",4,[[],[["vec",3],["result",6]]]],[0,"output_connection","flowrstructs","`output_connection` defines a struct for a function\'s…",null,null],[3,"OutputConnection","flowrstructs::output_connection","`OutputConnection` contains information about a function\'s…",null,null],[12,"subroute","","`subroute` is the path of the output of a function - used…",5,null],[12,"function_id","","`function_id` is the id of the destination function of…",5,null],[12,"io_number","","`io_number` is the IO number the connection is connected…",5,null],[12,"flow_id","","`flow_id` is the flow_id of the target function",5,null],[12,"array_level_serde","","`array_order` defines how many levels of arrays of…",5,null],[12,"generic","","`generic` defines if the input accepts generic \\\"Value\\\"s",5,null],[12,"route","","`route` is the full route to the destination input",5,null],[4,"Conversion","","The `Conversion` enum defines what type of run-time…",null,null],[13,"WrapAsArray","","",6,null],[13,"ArraySerialize","","",6,null],[11,"new","","Create a new `OutputConnection`",5,[[["string",3],["option",4]]]],[11,"is_generic","","Does the destination IO accept generic \\\"Value\\\" types",5,[[]]],[0,"manifest","flowrstructs","`manifest` is the struct that specifies the manifest of…",null,null],[3,"MetaData","flowrstructs::manifest","`MetaData` about a `flow` that will be used in the flow\'s…",null,null],[12,"name","","The human readable `name` of a `flow`",7,null],[12,"version","","Semantic versioning version number of the flow",7,null],[12,"description","","A description for humans",7,null],[12,"authors","","The name of the people who authored the flow",7,null],[3,"Cargo","","`Cargo` meta-data that can be used as a source of meta-data",null,null],[12,"package","","We are only interested in the `package` part - as a source…",8,null],[3,"Manifest","","A `flows` `Manifest` describes it and describes all the…",null,null],[17,"DEFAULT_MANIFEST_FILENAME","","The default name used for a flow Manifest file if none is…",null,null],[11,"new","","Create a new manifest that can then be added to, and used…",9,[[["metadata",3]]]],[11,"add_function","","Add a run-time Function to the manifest for use in…",9,[[["function",3]]]],[11,"get_functions","","Get the list of functions in this manifest",9,[[],["vec",3]]],[11,"get_metadata","","Get the metadata structure for this manifest",9,[[],["metadata",3]]],[11,"get_lib_references","","get the list of all library references in this manifest",9,[[],["hashset",3]]],[11,"set_lib_references","","set the list of all library references in this manifest",9,[[["hashset",3]]]],[11,"add_lib_reference","","Add a new library reference (the name of a library) into…",9,[[]]],[11,"load","","Load, or Deserialize, a manifest from a `source` Url using…",9,[[["provider",8]],["result",6]]],[0,"input","flowrstructs","`input` defines the struct for inputs to functions in a flow",null,null],[3,"Input","flowrstructs::input","An `Input` to a `Function`.",null,null],[12,"initializer","","An optional `InputInitializer` associated with this input",10,null],[4,"InputInitializer","","An `Input` can be initialized in one of two ways with an…",null,null],[13,"Always","","A `ConstantInputInitializer` initializes an input…",11,null],[13,"Once","","A `OneTimeInputInitializer` initializes an `Input` once -…",11,null],[11,"new","","Create a new `Input` with an optional `InputInitializer`",10,[[["option",4]]]],[11,"reset","","reset the value of an `Input` - usually only used while…",10,[[]]],[11,"take","","Take first element from the Input",10,[[],[["result",6],["value",4]]]],[11,"init","","Initialize an input with the InputInitializer if it has…",10,[[]]],[11,"push","","Add a value to this `Input`",10,[[["value",4]]]],[11,"push_array","","Add an array of values to this `Input`, by pushing them…",10,[[]]],[11,"count","","Return true if the `Input` is empty or false otherwise",10,[[]]],[6,"Result","flowrstructs","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",12,[[],[["result",4],["error",3]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind",4]],["error",3]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[],["error",3]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",3],["error",8]],["error",3]]],[11,"kind","","Returns the kind of the error.",0,[[],["errorkind",4]]],[11,"iter","","Iterates over the error chain.",0,[[],["iter",3]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[],[["backtrace",3],["option",4]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[],["error",3]]],[11,"description","","A short description of the error. This method is identical…",0,[[]]],[11,"description","","A string describing the error kind.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","flowrstructs::lib_manifest","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","flowrstructs::function","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","flowrstructs::output_connection","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","flowrstructs::manifest","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","flowrstructs::input","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","flowrstructs","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["recverror",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["errorkind",4]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["string",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["string",3]]]],[11,"clone","flowrstructs::function","",4,[[],["function",3]]],[11,"clone","flowrstructs::output_connection","",6,[[],["conversion",4]]],[11,"clone","","",5,[[],["outputconnection",3]]],[11,"clone","flowrstructs::manifest","",7,[[],["metadata",3]]],[11,"clone","","",8,[[],["cargo",3]]],[11,"clone","","",9,[[],["manifest",3]]],[11,"clone","flowrstructs::input","",11,[[],["inputinitializer",4]]],[11,"clone","","",10,[[],["input",3]]],[11,"eq","flowrstructs::lib_manifest","",3,[[]]],[11,"eq","","",2,[[]]],[11,"eq","flowrstructs::output_connection","",6,[[["conversion",4]]]],[11,"eq","","",5,[[["outputconnection",3]]]],[11,"ne","","",5,[[["outputconnection",3]]]],[11,"eq","flowrstructs::manifest","",7,[[["metadata",3]]]],[11,"ne","","",7,[[["metadata",3]]]],[11,"eq","","",8,[[["cargo",3]]]],[11,"ne","","",8,[[["cargo",3]]]],[11,"fmt","flowrstructs::output_connection","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","flowrstructs::input","",11,[[["formatter",3]],["result",6]]],[11,"fmt","flowrstructs","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","flowrstructs::function","",4,[[["formatter",3]],["result",6]]],[11,"fmt","flowrstructs::output_connection","",5,[[["formatter",3]],["result",6]]],[11,"fmt","flowrstructs::input","",10,[[["formatter",3]],["result",6]]],[11,"fmt","flowrstructs","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"new","","",0,[[["state",3],["errorkind",4]],["error",3]]],[11,"from_kind","","",0,[[]]],[11,"with_chain","","",0,[[]]],[11,"kind","","",0,[[]]],[11,"iter","","",0,[[],["iter",3]]],[11,"chain_err","","",0,[[]]],[11,"backtrace","","",0,[[],[["backtrace",3],["option",4]]]],[11,"extract_backtrace","","",0,[[["error",8]],[["option",4],["internalbacktrace",3]]]],[11,"serialize","flowrstructs::lib_manifest","",3,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","flowrstructs::function","",4,[[],["result",4]]],[11,"serialize","flowrstructs::output_connection","",6,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","flowrstructs::manifest","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","flowrstructs::input","",11,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"deserialize","flowrstructs::lib_manifest","",3,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","flowrstructs::function","",4,[[],["result",4]]],[11,"deserialize","flowrstructs::output_connection","",6,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","flowrstructs::manifest","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","flowrstructs::input","",11,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]]],"p":[[3,"Error"],[4,"ErrorKind"],[3,"LibraryManifest"],[4,"ImplementationLocator"],[3,"Function"],[3,"OutputConnection"],[4,"Conversion"],[3,"MetaData"],[3,"Cargo"],[3,"Manifest"],[3,"Input"],[4,"InputInitializer"],[8,"ResultExt"]]},\
"flowsamples":{"doc":"","i":[[5,"main","flowsamples","",null,[[],["result",6]]],[5,"get_flowr","","",null,[[],[["string",3],["result",6]]]],[5,"run_sample","","",null,[[["path",3]],["result",6]]],[5,"args","","",null,[[["path",3]],[["result",6],["vec",3]]]]],"p":[]},\
"flowstdlib":{"doc":"","i":[[5,"get_manifest","flowstdlib","Return the `LibraryManifest` for the functions in the…",null,[[],["librarymanifest",3]]],[0,"control","","Control functions A Module with functions for controlling…",null,null],[0,"compare_switch","flowstdlib::control","A module with functions to compare data elements and…",null,null],[3,"CompareSwitch","flowstdlib::control::compare_switch","Compare two input values and output different the right…",null,null],[0,"join","flowstdlib::control","A module with functions for joining data",null,null],[3,"Join","flowstdlib::control::join","Control the flow of a piece of data by waiting for a…",null,null],[0,"tap","flowstdlib::control","A module with functions to control the flow of data based…",null,null],[3,"Tap","flowstdlib::control::tap","Control the flow of data (flow or disapear it) based on a…",null,null],[0,"route","flowstdlib::control","A module with functions to route data based on a control…",null,null],[3,"Route","flowstdlib::control::route","Route data to one or another based on a boolean control…",null,null],[0,"select","flowstdlib::control","A module with functions to select data on output on a…",null,null],[3,"Select","flowstdlib::control::select","Select which data to output, based on a boolean control…",null,null],[0,"index","flowstdlib::control","A module with functions to select a value to pass based on…",null,null],[3,"Index","flowstdlib::control::index","Pass thru a value based on the index of an item in the…",null,null],[0,"data","flowstdlib","Data functions ## Control (//flowstdlib/data) Some generic…",null,null],[0,"append","flowstdlib::data","A module that implements String concatenation",null,null],[3,"Append","flowstdlib::data::append","Append two strings",null,null],[0,"accumulate","flowstdlib::data","A module that implements accumulating an array from a…",null,null],[3,"Accumulate","flowstdlib::data::accumulate","Accumulate input values into an array upto the limit…",null,null],[0,"buffer","flowstdlib::data","A module that implements a data buffer",null,null],[3,"Buffer","flowstdlib::data::buffer","Takes a value on it\'s input and sends the same value on…",null,null],[0,"count","flowstdlib::data","A module that counts data passed thru it",null,null],[3,"Count","flowstdlib::data::count","Takes a value on it\'s input and sends the same value on…",null,null],[0,"duplicate","flowstdlib::data","A module that duplicates objects into an array of them",null,null],[3,"Duplicate","flowstdlib::data::duplicate","Takes a value on it\'s input and sends the same value…",null,null],[0,"duplicate_rows","flowstdlib::data","A module that duplicates the rows in an array",null,null],[3,"DuplicateRows","flowstdlib::data::duplicate_rows","Duplicate the rows of a matrix",null,null],[0,"enumerate","flowstdlib::data","A module that enumerates entries of an Array",null,null],[3,"Enumerate","flowstdlib::data::enumerate","Enumerate the elements of an Array",null,null],[0,"info","flowstdlib::data","A module with a function to get info about a Value",null,null],[3,"Info","flowstdlib::data::info","Output info about the input value",null,null],[0,"multiply_row","flowstdlib::data","A module that does matrix row multiplication",null,null],[3,"MultiplyRow","flowstdlib::data::multiply_row","Multiply two matrix rows to a product",null,null],[0,"ordered_split","flowstdlib::data","A module that splits a String into an Array of Strings",null,null],[3,"OrderedSplit","flowstdlib::data::ordered_split","Split a string into (possibly) its parts, based on a…",null,null],[0,"remove","flowstdlib::data","A module that removes elements from an array",null,null],[3,"Remove","flowstdlib::data::remove","Remove a value from a vector of values",null,null],[0,"sort","flowstdlib::data","A module with a function to sort values into an ordered…",null,null],[3,"Sort","flowstdlib::data::sort","Sort an Array of Numbers",null,null],[0,"split","flowstdlib::data","A module that splits a String into an Array of Strings",null,null],[3,"Split","flowstdlib::data::split","Split a string into (possibly) two parts and a possible…",null,null],[0,"transpose","flowstdlib::data","A module with a function for transposing a Matrix",null,null],[3,"Transpose","flowstdlib::data::transpose","Transpose a matricies rows and columns",null,null],[0,"zip","flowstdlib::data","A module that zips two sets of data into a set of tuples…",null,null],[3,"Zip","flowstdlib::data::zip","Takes two arrays of values and produce an array of tuples…",null,null],[0,"fmt","flowstdlib","Formatting functions ## Fmt (//flowstdlib/fmt) Functions…",null,null],[0,"reverse","flowstdlib::fmt","A module to reverse a `String`",null,null],[3,"Reverse","flowstdlib::fmt::reverse","Reverse a String",null,null],[0,"to_json","flowstdlib::fmt","A module to convert a `String` to its `Json` representation",null,null],[3,"ToJson","flowstdlib::fmt::to_json","Convert a String to Json",null,null],[0,"to_string","flowstdlib::fmt","A module to convert a `Json` value to a `String`",null,null],[3,"ToString","flowstdlib::fmt::to_string","Convert an input type to a String",null,null],[0,"img","flowstdlib","Imaging functions ## Img (//flowstdlib/img) Functions for…",null,null],[0,"format_png","flowstdlib::img","A module with a function to convert a stream of data into…",null,null],[3,"FormatPNG","flowstdlib::img::format_png","Format a series of bytes into a PNG image, for use in…",null,null],[0,"math","flowstdlib","Maths functions ## Math (//flowstdlib/math) Math Functions",null,null],[0,"compare","flowstdlib::math","A module with functions to compare data elements",null,null],[3,"Compare","flowstdlib::math::compare","Compare two input values and output different boolean…",null,null],[0,"add","flowstdlib::math","A module with a function to add two `Numbers`",null,null],[3,"Add","flowstdlib::math::add","Add two inputs to produce a new output",null,null],[0,"divide","flowstdlib::math","A module with a function to divide two `Numbers`",null,null],[3,"Divide","flowstdlib::math::divide","Divide one input by another, producing outputs for the…",null,null],[0,"multiply","flowstdlib::math","A module with a function to multiply two `Numbers`",null,null],[3,"Multiply","flowstdlib::math::multiply","Multiply one input by another",null,null],[0,"subtract","flowstdlib::math","A module with a function to subtract two `Numbers`",null,null],[3,"Subtract","flowstdlib::math::subtract","Subtract one input from another to produce a new output",null,null],[0,"sqrt","flowstdlib::math","A module with a function to calculate the sqare root of a…",null,null],[3,"Sqrt","flowstdlib::math::sqrt","Calculate the square root of a number",null,null],[11,"from","flowstdlib::control::compare_switch","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","flowstdlib::control::join","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","flowstdlib::control::tap","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","flowstdlib::control::route","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","flowstdlib::control::select","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","flowstdlib::control::index","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","flowstdlib::data::append","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","flowstdlib::data::accumulate","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","flowstdlib::data::buffer","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","flowstdlib::data::count","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","flowstdlib::data::duplicate","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","flowstdlib::data::duplicate_rows","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","flowstdlib::data::enumerate","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","flowstdlib::data::info","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","flowstdlib::data::multiply_row","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","flowstdlib::data::ordered_split","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","flowstdlib::data::remove","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","flowstdlib::data::sort","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","flowstdlib::data::split","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","flowstdlib::data::transpose","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","flowstdlib::data::zip","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","flowstdlib::fmt::reverse","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","flowstdlib::fmt::to_json","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","flowstdlib::fmt::to_string","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","flowstdlib::img::format_png","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","flowstdlib::math::compare","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","flowstdlib::math::add","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","flowstdlib::math::divide","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","flowstdlib::math::multiply","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","flowstdlib::math::subtract","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","flowstdlib::math::sqrt","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"fmt","flowstdlib::control::compare_switch","",0,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::control::join","",1,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::control::tap","",2,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::control::route","",3,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::control::select","",4,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::control::index","",5,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::append","",6,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::accumulate","",7,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::buffer","",8,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::count","",9,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::duplicate","",10,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::duplicate_rows","",11,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::enumerate","",12,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::info","",13,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::multiply_row","",14,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::ordered_split","",15,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::remove","",16,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::sort","",17,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::split","",18,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::transpose","",19,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::data::zip","",20,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::fmt::reverse","",21,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::fmt::to_json","",22,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::fmt::to_string","",23,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::img::format_png","",24,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::math::compare","",25,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::math::add","",26,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::math::divide","",27,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::math::multiply","",28,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::math::subtract","",29,[[["formatter",3]],["result",6]]],[11,"fmt","flowstdlib::math::sqrt","",30,[[["formatter",3]],["result",6]]],[11,"run","flowstdlib::control::compare_switch","",0,[[]]],[11,"run","flowstdlib::control::join","",1,[[]]],[11,"run","flowstdlib::control::tap","",2,[[]]],[11,"run","flowstdlib::control::route","",3,[[]]],[11,"run","flowstdlib::control::select","",4,[[]]],[11,"run","flowstdlib::control::index","",5,[[]]],[11,"run","flowstdlib::data::append","",6,[[]]],[11,"run","flowstdlib::data::accumulate","",7,[[]]],[11,"run","flowstdlib::data::buffer","",8,[[]]],[11,"run","flowstdlib::data::count","",9,[[]]],[11,"run","flowstdlib::data::duplicate","",10,[[]]],[11,"run","flowstdlib::data::duplicate_rows","",11,[[]]],[11,"run","flowstdlib::data::enumerate","",12,[[]]],[11,"run","flowstdlib::data::info","",13,[[]]],[11,"run","flowstdlib::data::multiply_row","",14,[[]]],[11,"run","flowstdlib::data::ordered_split","",15,[[]]],[11,"run","flowstdlib::data::remove","",16,[[]]],[11,"run","flowstdlib::data::sort","",17,[[]]],[11,"run","flowstdlib::data::split","",18,[[]]],[11,"run","flowstdlib::data::transpose","",19,[[]]],[11,"run","flowstdlib::data::zip","",20,[[]]],[11,"run","flowstdlib::fmt::reverse","",21,[[]]],[11,"run","flowstdlib::fmt::to_json","",22,[[]]],[11,"run","flowstdlib::fmt::to_string","",23,[[]]],[11,"run","flowstdlib::img::format_png","",24,[[]]],[11,"run","flowstdlib::math::compare","",25,[[]]],[11,"run","flowstdlib::math::add","",26,[[]]],[11,"run","flowstdlib::math::divide","",27,[[]]],[11,"run","flowstdlib::math::multiply","",28,[[]]],[11,"run","flowstdlib::math::subtract","",29,[[]]],[11,"run","flowstdlib::math::sqrt","",30,[[]]]],"p":[[3,"CompareSwitch"],[3,"Join"],[3,"Tap"],[3,"Route"],[3,"Select"],[3,"Index"],[3,"Append"],[3,"Accumulate"],[3,"Buffer"],[3,"Count"],[3,"Duplicate"],[3,"DuplicateRows"],[3,"Enumerate"],[3,"Info"],[3,"MultiplyRow"],[3,"OrderedSplit"],[3,"Remove"],[3,"Sort"],[3,"Split"],[3,"Transpose"],[3,"Zip"],[3,"Reverse"],[3,"ToJson"],[3,"ToString"],[3,"FormatPNG"],[3,"Compare"],[3,"Add"],[3,"Divide"],[3,"Multiply"],[3,"Subtract"],[3,"Sqrt"]]},\
"provider":{"doc":"A module to help parse command line arguments for flow…","i":[[3,"Error","provider","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Io","","",1,null],[13,"Easy","","",1,null],[13,"Msg","","A convenient variant for String.",1,null],[0,"content","","Content provider trait. It defines methods for for getting…",null,null],[0,"provider","provider::content","The Provider trait must be implemented by Providers of…",null,null],[3,"MetaProvider","provider::content::provider","The `MetaProvider` implements the `Provider` trait and…",null,null],[8,"Provider","","A content provider is responsible with interfacing with…",null,null],[10,"resolve_url","","Take a URL and uses it to determine a url where actual…",2,[[],["result",6]]],[10,"get_contents","","Fetches content from a URL. It resolves the URL internally…",2,[[],[["result",6],["vec",3]]]],[0,"file_provider","provider::content","The Content Provider for File contents",null,null],[3,"FileProvider","provider::content::file_provider","The `FileProvider` implements the `Provider` trait and…",null,null],[11,"find_file","","Passed a path to a directory, it searches for a file in…",3,[[["pathbuf",3]],[["string",3],["result",6]]]],[11,"file_by_extensions","","Given a path to a filename, try to find an existing file…",3,[[["pathbuf",3]],[["string",3],["result",6]]]],[0,"args","provider","Help take file/url strings from a command line and convert…",null,null],[5,"url_from_string","provider::args","Accept an optional string (URL or filename) and from it…",null,[[["url",3],["option",4]],[["result",6],["url",3]]]],[5,"cwd_as_url","","Provide the Current Working Directory (CWD) as a URL (with…",null,[[],[["result",6],["url",3]]]],[6,"Result","provider","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",4,[[],[["error",3],["result",4]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind",4]],["error",3]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[],["error",3]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",3],["error",8]],["error",3]]],[11,"kind","","Returns the kind of the error.",0,[[],["errorkind",4]]],[11,"iter","","Iterates over the error chain.",0,[[],["iter",3]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[],[["backtrace",3],["option",4]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[],["error",3]]],[11,"description","","A short description of the error. This method is identical…",0,[[]]],[11,"description","","A string describing the error kind.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","provider::content::provider","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","provider::content::file_provider","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"resolve_url","provider::content::provider","Takes a Url with a scheme of \\\"http\\\", \\\"https\\\", \\\"file\\\", or…",5,[[],["result",6]]],[11,"get_contents","","Takes a Url with a scheme of \\\"http\\\", \\\"https\\\" or \\\"file\\\".…",5,[[],[["result",6],["vec",3]]]],[11,"resolve_url","provider::content::file_provider","",3,[[],["result",6]]],[11,"get_contents","","",3,[[],[["result",6],["vec",3]]]],[11,"from","provider","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["errorkind",4]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["string",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["string",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"new","","",0,[[["errorkind",4],["state",3]],["error",3]]],[11,"from_kind","","",0,[[]]],[11,"with_chain","","",0,[[]]],[11,"kind","","",0,[[]]],[11,"iter","","",0,[[],["iter",3]]],[11,"chain_err","","",0,[[]]],[11,"backtrace","","",0,[[],[["backtrace",3],["option",4]]]],[11,"extract_backtrace","","",0,[[["error",8]],[["option",4],["internalbacktrace",3]]]]],"p":[[3,"Error"],[4,"ErrorKind"],[8,"Provider"],[3,"FileProvider"],[8,"ResultExt"],[3,"MetaProvider"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);