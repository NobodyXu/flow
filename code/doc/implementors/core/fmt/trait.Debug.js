(function() {var implementors = {};
implementors["flowc"] = [{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for ErrorKind","synthetic":false,"types":[]}];
implementors["flowclib"] = [{"text":"impl Debug for Name","synthetic":false,"types":[]},{"text":"impl Debug for DataType","synthetic":false,"types":[]},{"text":"impl Debug for Route","synthetic":false,"types":[]},{"text":"impl Debug for Function","synthetic":false,"types":[]},{"text":"impl Debug for Flow","synthetic":false,"types":[]},{"text":"impl Debug for Process","synthetic":false,"types":[]},{"text":"impl Debug for ProcessReference","synthetic":false,"types":[]},{"text":"impl Debug for Connection","synthetic":false,"types":[]},{"text":"impl Debug for Direction","synthetic":false,"types":[]},{"text":"impl Debug for IOType","synthetic":false,"types":[]},{"text":"impl Debug for IO","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for ErrorKind","synthetic":false,"types":[]}];
implementors["flowide"] = [{"text":"impl Debug for IDERuntimeClient","synthetic":false,"types":[]}];
implementors["flowr"] = [{"text":"impl Debug for CLIRuntimeClient","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for ErrorKind","synthetic":false,"types":[]}];
implementors["flowrlib"] = [{"text":"impl Debug for Submission","synthetic":false,"types":[]},{"text":"impl Debug for Event","synthetic":false,"types":[]},{"text":"impl Debug for Response","synthetic":false,"types":[]},{"text":"impl Debug for Metrics","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for ErrorKind","synthetic":false,"types":[]}];
implementors["flowrstructs"] = [{"text":"impl Debug for Conversion","synthetic":false,"types":[]},{"text":"impl Debug for OutputConnection","synthetic":false,"types":[]},{"text":"impl Debug for InputInitializer","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for ErrorKind","synthetic":false,"types":[]}];
implementors["flowstdlib"] = [{"text":"impl Debug for CompareSwitch","synthetic":false,"types":[]},{"text":"impl Debug for Join","synthetic":false,"types":[]},{"text":"impl Debug for Tap","synthetic":false,"types":[]},{"text":"impl Debug for Route","synthetic":false,"types":[]},{"text":"impl Debug for Select","synthetic":false,"types":[]},{"text":"impl Debug for Index","synthetic":false,"types":[]},{"text":"impl Debug for Append","synthetic":false,"types":[]},{"text":"impl Debug for Accumulate","synthetic":false,"types":[]},{"text":"impl Debug for Buffer","synthetic":false,"types":[]},{"text":"impl Debug for Count","synthetic":false,"types":[]},{"text":"impl Debug for Duplicate","synthetic":false,"types":[]},{"text":"impl Debug for DuplicateRows","synthetic":false,"types":[]},{"text":"impl Debug for Enumerate","synthetic":false,"types":[]},{"text":"impl Debug for Info","synthetic":false,"types":[]},{"text":"impl Debug for MultiplyRow","synthetic":false,"types":[]},{"text":"impl Debug for OrderedSplit","synthetic":false,"types":[]},{"text":"impl Debug for Remove","synthetic":false,"types":[]},{"text":"impl Debug for Sort","synthetic":false,"types":[]},{"text":"impl Debug for Split","synthetic":false,"types":[]},{"text":"impl Debug for Transpose","synthetic":false,"types":[]},{"text":"impl Debug for Zip","synthetic":false,"types":[]},{"text":"impl Debug for Reverse","synthetic":false,"types":[]},{"text":"impl Debug for ToJson","synthetic":false,"types":[]},{"text":"impl Debug for ToString","synthetic":false,"types":[]},{"text":"impl Debug for FormatPNG","synthetic":false,"types":[]},{"text":"impl Debug for Compare","synthetic":false,"types":[]},{"text":"impl Debug for Add","synthetic":false,"types":[]},{"text":"impl Debug for Divide","synthetic":false,"types":[]},{"text":"impl Debug for Multiply","synthetic":false,"types":[]},{"text":"impl Debug for Subtract","synthetic":false,"types":[]},{"text":"impl Debug for Sqrt","synthetic":false,"types":[]}];
implementors["provider"] = [{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for ErrorKind","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()