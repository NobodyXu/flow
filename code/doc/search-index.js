var searchIndex = JSON.parse('{\
"flow_impl_derive":{"doc":"<code>flow_impl_derive</code> is a derive macro that inserts code to …","t":[24],"n":["FlowImpl"],"q":["flow_impl_derive"],"d":["Implement the <code>FlowImpl</code> derive macro"],"i":[0],"f":[null],"p":[]},\
"flowclib":{"doc":"","t":[12,3,4,13,13,13,6,8,13,11,11,11,11,11,11,10,11,11,0,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,5,5,5,8,8,10,5,5,10,10,0,5,5,5,0,0,5,5,5,5,0,3,11,11,12,12,5,11,12,11,12,11,12,11,11,12,12,11,11,11,5,5,0,0,0,0,0,0,0,0,0,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,12,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,11,11,12,12,11,12,11,12,12,11,12,11,11,11,11,12,12,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,13,13,13,3,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,8,13,13,13,13,3,4,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Error","ErrorKind","Io","Msg","Provider","Result","ResultExt","Url","backtrace","backtrace","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","compiler","description","description","description","deserializers","dumper","extract_backtrace","find","find_by_name","find_by_route","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","generator","info","into","into","iter","iter","kind","kind","model","new","set_io_routes_from_parent","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate","with_boxed_chain","with_chain","with_chain","compile","compile_wasm","loader","compile","compile_implementation","compile_supplied_implementations","Deserializer","Validate","deserialize","load","load_metadata","name","validate","deserializer_helper","get_accepted_extensions","get_deserializer","get_file_extension","dump_flow","dump_tables","dump_flow","create_output_file","dump_functions","dump_tables","generate","GenerationTables","borrow","borrow_mut","collapsed_connections","connections","create_manifest","default","destination_routes","from","functions","into","libs","new","serialize","source_files","source_routes","try_from","try_into","type_id","write_flow_manifest","version","connection","datatype","flow","function","io","name","process","process_reference","route","Connection","Direction","FROM","TO","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compatible_types","deserialize","fmt","fmt","fmt","from","from","from","from_io","into","into","level","name","serialize","to","to_io","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate","DataType","HasDataType","array_of","array_order","as_ref","borrow","borrow","borrow_mut","clone","clone_into","datatype","default","deref","deserialize","eq","fmt","fmt","from","from","hash","into","is_array","is_generic","map","map_ref","ne","serialize","to_owned","to_string","try_from","try_into","type_id","type_string","valid","within_array","Flow","alias","alias","borrow","borrow_mut","build_connections","clone","clone_into","connections","default","deserialize","fmt","fmt","from","get_route_and_type","id","inputs","inputs","inputs_mut","into","lib_references","metadata","name","name","outputs","outputs","process_refs","route","route","route_mut","serialize","set_alias","set_routes_from_parent","source_url","subprocesses","to_owned","to_string","try_from","try_into","type_id","validate","Function","add_output_route","alias","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","fmt","from","get_flow_id","get_id","get_implementation","get_inputs","get_lib_reference","get_mut_inputs","get_output_connections","get_outputs","get_source_url","inputs","into","is_impure","name","new","route","route_mut","serialize","set_alias","set_flow_id","set_id","set_implementation","set_lib_reference","set_routes_from_parent","set_source_url","to_owned","to_string","try_from","try_into","type_id","validate","Find","FlowInput","FlowOutput","FunctionIO","IO","IOSet","IOType","alias","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","datatype","datatype","default","deserialize","deserialize","eq","find","find_by_name","find_by_route","flow_io","fmt","fmt","fmt","from","from","get_initializer","into","into","io_type","name","new","route","route_mut","serialize","serialize","set_datatype","set_flow_io","set_initial_values","set_initializer","set_route","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate","HasName","Name","alias","as_ref","borrow","borrow","borrow_mut","clone","clone_into","default","deref","deserialize","empty","eq","fmt","fmt","from","from","from","from","from","hash","into","map","map_ref","name","ne","serialize","to_owned","to_string","try_from","try_into","type_id","validate","FlowProcess","FunctionProcess","Process","alias","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","into","name","route","route_mut","serialize","to_owned","try_from","try_into","type_id","ProcessReference","alias","alias","borrow","borrow_mut","clone","clone_into","deserialize","fmt","fmt","from","initializations","into","name","serialize","set_alias","source","to_owned","to_string","try_from","try_into","type_id","validate","0","HasRoute","Input","Internal","Invalid","Output","Route","RouteType","SetIORoutes","SetRoute","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","eq","extend","fmt","fmt","from","from","from","from","from","from","hash","insert","into","into","map","map_mut","map_ref","ne","pop","route","route_mut","route_type","serialize","set_io_routes_from_parent","set_routes_from_parent","sub_route_of","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate","without_trailing_array_index"],"q":["flowclib","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowclib::compiler","","","flowclib::compiler::compile","flowclib::compiler::compile_wasm","","flowclib::compiler::loader","","","","","","","flowclib::deserializers","flowclib::deserializers::deserializer_helper","","","flowclib::dumper","","flowclib::dumper::dump_flow","flowclib::dumper::dump_tables","","","flowclib::generator","flowclib::generator::generate","","","","","","","","","","","","","","","","","","","","flowclib::info","flowclib::model","","","","","","","","","flowclib::model::connection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowclib::model::datatype","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowclib::model::flow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowclib::model::function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowclib::model::io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowclib::model::name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowclib::model::process","","","","","","","","","","","","","","","","","","","","","flowclib::model::process_reference","","","","","","","","","","","","","","","","","","","","","","","flowclib::model::route","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The kind of the error.","The Error type.","The kind of an error.","","A convenient variant for String.","","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","","Returns the backtrace associated with this error.","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","","Extends the error chain with a new entry.","This is the rust <code>flow</code> Compiler Library. It can be linked …","A short description of the error. This method is …","","A string describing the error kind.","","","","","","","","","","","","","","","","","","","","","","","Constructs an error from a kind, and generates a …","","Info module provides methods to get additional …","","","Iterates over the error chain.","","","Returns the kind of the error.","","","","","","","","","","","","","","Construct a chained error from another boxed error and a …","Constructs a chained error from another error and a kind, …","","","","","Take a hierarchical flow definition in memory and compile …","Compile a function provided in rust to wasm and modify …","For any function that provides an implementation - …","All deserializers have to implement this trait for …","Many structs in the model implement the <code>Validate</code> method …","","Load a <code>Flow</code> definition from a <code>Url</code>, recursively loading …","load library metadata from the given url using the …","","","","","","","","","Dump a human readable representation of loaded flow …","","dump a flow’s functions graph as a .dot file to …","Dump the compiler tables of a loaded flow in human …","","","","","HashMap from “route of the input of a function” –> …","","","","HashMap from “route of the output of a function” –> …","","","","","","","","","","","","Generate a manifest for the flow in JSON that can be used …","return the version number of the library as a string of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine if this data type is an array of the other","Take a string description of a DataType and determine how …","","","","","","","","","","","","","","","","","","","","Map a function over the wrapped value, consuming it in …","Map a function over the wrapped value without consuming …","","","","","","","","Take a json data value and return the type string for it, …","","Get the data type the array holds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map a function over the wrapped value, consuming it in …","Map a function over the wrapped value without consuming …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","if the ProcessRef does not specify an alias for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extend a Route by appending another Route to the end, …","","","","","","","","","","Insert another Route at the front of this Route","","","Map a function over the wrapped value, consuming it in …","Map a function over the wrapped value, potentially …","Map a function over the wrapped value without consuming …","","Return a route that is one level up, such that …","","","","","","","<code>sub_route_of</code> returns an Option indicating if <code>self</code> is a …","","","","","","","","","","Return the io route without a trailing number (array …"],"i":[1,0,0,2,2,2,0,0,2,1,1,1,2,1,2,3,1,1,0,1,1,2,0,0,1,4,4,4,1,1,2,2,1,1,1,1,1,1,1,2,2,2,2,1,1,0,0,1,2,1,1,1,1,0,1,4,1,1,2,1,2,1,2,1,2,4,1,1,1,0,0,0,0,0,0,0,0,5,0,0,5,6,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,9,8,9,8,9,9,9,9,9,9,8,9,8,9,9,9,8,9,9,9,9,9,9,9,9,8,9,8,9,8,9,0,0,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,0,0,0,15,14,15,14,15,14,15,14,15,15,15,15,14,15,14,16,16,16,15,14,15,15,14,15,15,14,15,15,15,15,15,15,14,15,15,15,15,15,15,14,15,15,14,15,14,15,14,15,15,0,0,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,17,18,18,18,18,18,18,18,18,19,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,0,22,22,22,22,0,0,0,0,21,21,21,22,21,21,22,21,21,21,21,21,21,21,21,21,21,21,21,22,21,21,21,21,21,21,21,22,21,21,21,21,21,21,23,23,21,21,24,25,21,21,21,22,21,22,21,22,21,21,21],"f":[null,null,null,null,null,null,null,null,null,[[],[["option",4],["backtrace",3]]],[[],[["option",4],["backtrace",3]]],[[]],[[]],[[]],[[]],[[],[["result",4],["error",3]]],[[]],[[],["error",3]],null,[[],["str",15]],[[],["str",15]],[[],["str",15]],null,null,[[["error",8]],[["internalbacktrace",3],["option",4]]],[[["route",3]],["bool",15]],[[["name",3],["option",4]],[["result",6],["io",3]]],[[["route",3],["option",4]],[["result",6],["io",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["parseerror",4]]],[[["str",15]]],[[["errorkind",4]]],[[["string",3]]],[[]],[[["error",3]]],[[["error",3]]],[[]],[[["error",3]]],[[["string",3]]],[[["str",15]]],[[]],[[["errorkind",4]],["error",3]],null,null,[[]],[[]],[[],["iter",3]],[[],["iter",3]],[[]],[[],["errorkind",4]],null,[[["state",3],["errorkind",4]],["error",3]],[[["iotype",4],["route",3]]],[[],[["option",4],["error",8]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[["box",3],["error",8]],["error",3]],[[],["error",3]],[[]],null,null,null,[[["flow",3]],[["result",6],["generationtables",3]]],[[["bool",15],["function",3],["hashset",3]],["result",6]],[[["generationtables",3],["bool",15],["hashset",3]],[["string",3],["result",6]]],null,null,[[["option",4],["str",15],["url",3]],[["result",6],["process",4]]],[[["libprovider",8],["hashset",3],["url",3]],[["result",6],["process",4]]],[[["libprovider",8],["url",3]],[["result",6],["metadata",3]]],[[],["str",15]],[[],["result",6]],null,[[]],[[["url",3]],[["string",3],["deserializer",8],["result",4]]],[[["url",3]],[["option",4],["str",15]]],null,null,[[["libprovider",8],["path",3],["flow",3],["bool",15]],["result",6]],[[["path",3],["str",15]],[["result",6],["file",3]]],[[["generationtables",3],["path",3],["flow",3]],["result",6]],[[["generationtables",3],["path",3]],["result",6]],null,null,[[]],[[]],null,null,[[["generationtables",3],["bool",15],["flow",3],["hashset",3],["url",3]],[["manifest",3],["result",6]]],[[],["generationtables",3]],null,[[]],null,[[]],null,[[]],[[],["result",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["generationtables",3],["bool",15],["flow",3],["path",3],["hashset",3]],[["result",6],["pathbuf",3]]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["connection",3]],[[]],[[["datatype",3]],["bool",15]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],null,null,[[],["result",4]],null,null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],null,null,[[],["bool",15]],[[],[["result",6],["i32",15]]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[],["datatype",3]],[[]],[[],["datatype",3]],[[],["datatype",3]],[[]],[[],["result",4]],[[["datatype",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["fnmut",8]]],[[["fnmut",8]]],[[["datatype",3]],["bool",15]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["value",4]],["string",3]],[[],["result",6]],[[],["result",6]],null,[[],["name",3]],null,[[]],[[]],[[],["result",6]],[[],["flow",3]],[[]],null,[[],["flow",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["direction",4],["route",3],["option",4]],[["result",6],["io",3]]],null,[[],["ioset",6]],null,[[],["ioset",6]],[[]],null,null,[[],["name",3]],null,[[],["ioset",6]],null,null,[[],["route",3]],null,[[],["route",3]],[[],["result",4]],[[["name",3]]],[[["route",3]]],null,null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],null,[[["outputconnection",3]]],[[],["name",3]],[[]],[[]],[[],["function",3]],[[]],[[],["function",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["str",15]],[[],["ioset",6]],[[],["option",4]],[[],["ioset",6]],[[],["vec",3]],[[],["ioset",6]],[[],["str",15]],null,[[]],[[],["bool",15]],[[],["name",3]],[[["str",15],["route",3],["usize",15],["option",4],["ioset",6],["bool",15],["name",3],["string",3],["outputconnection",3],["vec",3]]],[[],["route",3]],[[],["route",3]],[[],["result",4]],[[["name",3]]],[[["usize",15]]],[[["usize",15]]],[[["str",15]]],[[["string",3],["option",4]]],[[["route",3]]],[[["str",15]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],null,null,null,null,null,null,null,[[],["name",3]],[[]],[[]],[[]],[[]],[[],["iotype",4]],[[],["io",3]],[[]],[[]],[[],["datatype",3]],[[],["datatype",3]],[[]],[[],["result",4]],[[],["result",4]],[[["iotype",4]],["bool",15]],[[["route",3]],["bool",15]],[[["name",3],["option",4]],[["result",6],["io",3]]],[[["route",3],["option",4]],[["result",6],["io",3]]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["option",4]],[[]],[[]],[[],["iotype",4]],[[],["name",3]],[[["into",8],["route",3],["into",8],["datatype",3]]],[[],["route",3]],[[],["route",3]],[[],["result",4]],[[],["result",4]],[[["datatype",3]]],[[["iotype",4]]],[[["ioset",6],["hashmap",3]]],[[["option",4]]],[[["route",3],["iotype",4]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],null,null,[[],["name",3]],[[],["string",3]],[[]],[[],["string",3]],[[]],[[],["name",3]],[[]],[[],["name",3]],[[]],[[],["result",4]],[[],["bool",15]],[[["name",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]]],[[["route",3]]],[[["string",3]]],[[["string",3]]],[[]],[[]],[[["fnmut",8]]],[[["fnmut",8]]],[[],["name",3]],[[["name",3]],["bool",15]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],null,null,null,[[],["name",3]],[[]],[[]],[[],["process",4]],[[]],[[],["process",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["name",3]],[[],["route",3]],[[],["route",3]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["name",3]],null,[[]],[[]],[[],["processreference",3]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[],["name",3]],[[],["result",4]],[[["name",3]]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,[[],["string",3]],[[],["string",3]],[[],["str",15]],[[]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[]],[[],["route",3]],[[]],[[],["route",3]],[[]],[[]],[[],["result",4]],[[["route",3]],["bool",15]],[[["route",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["string",3]]],[[["name",3]]],[[]],[[["string",3]]],[[["str",15]]],[[]],[[["asref",8],["str",15]]],[[]],[[]],[[["fnmut",8]]],[[]],[[["fnmut",8]]],[[["route",3]],["bool",15]],[[]],[[],["route",3]],[[],["route",3]],[[],["routetype",4]],[[],["result",4]],[[["iotype",4],["route",3]]],[[["route",3]]],[[["route",3]],[["route",3],["option",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[]]],"p":[[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[6,"IOSet"],[8,"Deserializer"],[8,"Validate"],[3,"GenerationTables"],[4,"Direction"],[3,"Connection"],[3,"DataType"],[8,"HasDataType"],[3,"Flow"],[3,"Function"],[4,"IOType"],[3,"IO"],[8,"Find"],[8,"HasName"],[3,"Name"],[4,"Process"],[3,"ProcessReference"],[3,"Route"],[4,"RouteType"],[8,"HasRoute"],[8,"SetIORoutes"],[8,"SetRoute"]]},\
"flowcore":{"doc":"<code>flowcore</code> defines some core structs and traits used by …","t":[12,17,3,4,8,13,13,17,13,6,8,6,13,13,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,0,0,0,11,0,10,11,11,11,11,11,11,11,11,11,0,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,8,3,8,11,11,11,10,10,11,11,11,10,10,11,11,11,11,3,17,3,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,4,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,12,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,5],"n":["0","DONT_RUN_AGAIN","Error","ErrorKind","Implementation","Io","Msg","RUN_AGAIN","Recv","Result","ResultExt","RunAgain","Serde","Url","backtrace","backtrace","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","description","description","description","extract_backtrace","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","function","input","into","into","iter","iter","kind","kind","lib_manifest","lib_provider","manifest","new","output_connection","run","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","url_helper","with_boxed_chain","with_chain","with_chain","Function","borrow","borrow_mut","clone","clone_into","default_implementation","deserialize","fmt","from","get_flow_id","get_implementation","get_output_connections","id","implementation_location","init_inputs","input_count","input_set_count","inputs","into","name","new","reset","send","send_iter","serialize","set_implementation","take_input_set","to_owned","to_string","try_from","try_into","type_id","Always","Input","InputInitializer","Once","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","deserialize","deserialize","fmt","fmt","from","from","init","initializer","into","into","new","push","push_array","reset","serialize","serialize","take","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","DEFAULT_LIB_JSON_MANIFEST_FILENAME","DEFAULT_LIB_RUST_MANIFEST_FILENAME","ImplementationLocator","LibraryManifest","Native","Wasm","add_locator","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","eq","eq","from","from","into","into","load","locators","metadata","new","serialize","serialize","source_urls","try_from","try_from","try_into","try_into","type_id","type_id","LibProvider","MetaProvider","Provider","borrow","borrow_mut","from","get_contents","get_contents","get_contents","into","new","resolve_url","resolve_url","resolve_url","try_from","try_into","type_id","Cargo","DEFAULT_MANIFEST_FILENAME","Manifest","MetaData","add_function","add_lib_reference","authors","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","description","deserialize","deserialize","deserialize","eq","eq","fmt","from","from","from","get_functions","get_lib_references","get_metadata","get_source_urls","into","into","into","load","name","ne","ne","new","package","serialize","serialize","serialize","set_lib_references","set_source_urls","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","ArraySerialize","Conversion","OutputConnection","WrapAsArray","array_level_serde","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","flow_id","fmt","fmt","fmt","from","from","function_id","generic","into","into","io_number","is_generic","name","ne","new","route","serialize","serialize","subroute","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","url_from_string"],"q":["flowcore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowcore::function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowcore::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowcore::lib_manifest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowcore::lib_provider","","","","","","","","","","","","","","","","","flowcore::manifest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowcore::output_connection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flowcore::url_helper"],"d":["The kind of the error.","Use <code>DONT_RUN_AGAIN</code> to indicate that a function should not …","The Error type.","The kind of an error.","An implementation runs with an array of inputs and …","","A convenient variant for String.","Use <code>RUN_AGAIN</code> to indicate that a function can be executed …","","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","Implementations should return a value of type <code>RunAgain</code> to …","","","Returns the backtrace associated with this error.","","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","Extends the error chain with a new entry.","","A short description of the error. This method is …","","A string describing the error kind.","","","","","","","","","","","","","","","","","","Constructs an error from a kind, and generates a …","","<code>function</code> defines functions that form part of a flow","<code>input</code> defines the struct for inputs to functions in a flow","","","","Iterates over the error chain.","","Returns the kind of the error.","<code>lib_manifest</code> defines the structs for specifying a Library…","<code>lib_provider</code> is used to resolve library references of the …","<code>manifest</code> is the struct that specifies the manifest of …","","<code>output_connection</code> defines a struct for a function’s …","The <code>run</code> method is used to execute the implementation","","","","","","","","","","Utility functions related to Urls Help take file/url …","Construct a chained error from another boxed error and a …","","Constructs a chained error from another error and a kind, …","<code>Function</code> contains all the information needed about a …","","","","","A default <code>Function</code> - used in deserialization of a <code>Manifest</code>","","","","Accessor for a <code>Functions</code> <code>flow_id</code>","Get a clone of the <code>Functions</code> <code>implementation</code>","Accessor for a <code>Functions</code> <code>output_connections</code> field","Accessor for a <code>Functions</code> <code>id</code>","Accessor for a <code>Functions</code> <code>implementation_location</code>","Initialize all of a <code>Functions</code> <code>Inputs</code> - as they may have …","Determine if the <code>Functions</code> <code>input</code> number <code>input_number</code> is …","Returns how many inputs sets are available across all the …","Inspect the values of the <code>inputs</code> of a feature. Only used …","","Accessor for a <code>Functions</code> <code>name</code>","Create a new <code>function</code> with the specified <code>name</code>, <code>route</code>, …","Reset a <code>Function</code> to initial state. Used by a debugger at …","write a value to a <code>Function</code>’s input","write an array of values to a <code>Function</code>’s input","","Set a <code>Functions</code> <code>implementation</code>","Read the values from the inputs and return them for use …","","","","","","A <code>ConstantInputInitializer</code> initializes an input “…","An <code>Input</code> to a <code>Function</code>.","An <code>Input</code> can be initialized in one of two ways with an …","A <code>OneTimeInputInitializer</code> initializes an <code>Input</code> once - at …","","","","","","","","","Return true if the <code>Input</code> is empty or false otherwise","","","","","","","Initialize an input with the InputInitializer if it has …","An optional <code>InputInitializer</code> associated with this input","","","Create a new <code>Input</code> with an optional <code>InputInitializer</code>","Add a value to this <code>Input</code>","Add an array of values to this <code>Input</code>, by pushing them one …","reset the value of an <code>Input</code> - usually only used while …","","","Take first element from the Input","","","","","","","","","","The default name used for a Library  Manifest file if …","The default name used for a Rust Library Manifest if none …","Used to describe where an implementation can be found, …","<code>LibraryManifest</code> describes the contents of a Library that …","A <code>Native</code> implementation is a reference to a trait object …","A <code>Wasm</code> implementation is compiled to wasm and loaded to a …","Add a function’s implementation locator (location of …","","","","","","","","","","","","","<code>load</code> a <code>LibraryManifest</code> from the <code>source</code> url, using the …","the <code>locators</code> map a reference to a function/implementation …","<code>metadata</code> about a flow with author, version and usual …","Create a new, empty, <code>LibraryManifest</code> with the provided …","","","source_files is a list of source files (location relative …","","","","","","","A content provider is responsible with interfacing with …","The <code>MetaProvider</code> implements the <code>Provider</code> trait and based …","A content provider is responsible with interfacing with …","","","","Fetches content from a URL. It resolves the URL …","Fetches content from a URL. It resolves the URL …","Takes a Url with a scheme of “http”, “https” or …","","Create a new <code>MetaProvider</code> initializing it with a search …","Take a URL and uses it to determine a url where actual …","Take a URL and uses it to determine a url where actual …","Takes a Url with a scheme of “http”, “https”, “…","","","","<code>Cargo</code> meta-data that can be used as a source of meta-data","The default name used for a flow Manifest file if none is …","A <code>flows</code> <code>Manifest</code> describes it and describes all the …","<code>MetaData</code> about a <code>flow</code> that will be used in the flow’s …","Add a run-time Function to the manifest for use in …","Add a new library reference (the name of a library) into …","The name of the people who authored the flow","","","","","","","","","","","","","","A description for humans","","","","","","","","","","Get the list of functions in this manifest","get the list of all library references in this manifest","Get the metadata structure for this manifest","Get the list of source files used in the flow","","","","Load, or Deserialize, a manifest from a <code>source</code> Url using …","The human readable <code>name</code> of a <code>flow</code>","","","Create a new manifest that can then be added to, and used …","We are only interested in the <code>package</code> part - as a source …","","","","set the list of all library references in this manifest","set the list of all source urls used in the flow","","","","","","","","","","","","","Semantic versioning version number of the flow","Serialize an Array, sending each element as a separate …","The <code>Conversion</code> enum defines what type of run-time …","<code>OutputConnection</code> contains information about a function’…","Take value and send it wrapped in an array","<code>array_order</code> defines how many levels of arrays of …","","","","","","","","","","","","","<code>flow_id</code> is the flow_id of the target function","","","","","","<code>function_id</code> is the id of the destination function of this …","<code>generic</code> defines if the input accepts generic “Value“s","","","<code>io_number</code> is the IO number the connection is connected to …","Does the destination IO accept generic “Value” types","","","Create a new <code>OutputConnection</code>","<code>route</code> is the full route to the destination input","","","<code>subroute</code> is the path of the output of a function - used …","","","","","","","","","","Accept an optional string (URL or filename) and from it …"],"i":[1,0,0,0,0,2,2,0,2,0,0,0,2,2,1,1,1,2,1,2,3,1,1,1,1,2,1,1,1,2,2,1,1,1,1,1,1,1,1,2,2,2,2,1,1,0,0,1,2,1,1,1,1,0,0,0,1,0,4,1,1,2,1,2,1,2,1,2,0,1,1,1,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,0,0,6,6,7,6,7,6,7,6,7,7,6,7,6,7,6,7,7,7,6,7,7,7,7,7,6,7,7,6,7,7,6,7,6,7,6,7,0,0,0,0,8,8,9,8,9,8,9,8,9,8,9,8,9,8,9,9,9,9,9,8,9,9,8,9,8,9,8,9,0,0,0,10,10,10,11,12,10,10,10,11,12,10,10,10,10,0,0,0,0,13,13,14,14,15,13,14,15,13,14,15,13,14,15,13,14,14,14,15,13,14,15,14,14,15,13,13,13,13,13,14,15,13,13,14,14,15,13,15,14,15,13,13,13,14,15,13,14,15,13,14,15,13,14,15,13,14,16,0,0,16,17,16,17,16,17,16,17,16,17,16,17,16,17,17,16,17,17,16,17,17,17,16,17,17,17,17,17,17,17,16,17,17,16,17,17,16,17,16,17,16,17,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["backtrace",3]]],[[],[["option",4],["backtrace",3]]],[[]],[[]],[[]],[[]],[[],[["result",4],["error",3]]],[[],["error",3]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["error",8]],[["internalbacktrace",3],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["string",3]]],[[["str",15]]],[[["errorkind",4]]],[[["recverror",3]]],[[["error",3]]],[[["error",3]]],[[["parseerror",4]]],[[]],[[["string",3]]],[[]],[[["str",15]]],[[["error",3]]],[[["errorkind",4]],["error",3]],[[]],null,null,[[]],[[]],[[],["iter",3]],[[],["iter",3]],[[]],[[],["errorkind",4]],null,null,null,[[["errorkind",4],["state",3]],["error",3]],null,[[]],[[],[["error",8],["option",4]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["box",3],["error",8]],["error",3]],[[]],[[],["error",3]],null,[[]],[[]],[[],["function",3]],[[]],[[],[["arc",3],["implementation",8]]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[],[["arc",3],["implementation",8]]],[[],["vec",3]],[[],["usize",15]],[[],["str",15]],[[["bool",15]],["bool",15]],[[["usize",15]],["usize",15]],[[],["usize",15]],[[],["vec",3]],[[]],[[],["str",15]],[[["vec",3],["input",3],["bool",15],["string",3],["usize",15],["into",8]]],[[]],[[["usize",15],["value",4]]],[[["usize",15]]],[[],["result",4]],[[["arc",3],["implementation",8]]],[[],[["vec",3],["result",6]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["inputinitializer",4]],[[],["input",3]],[[]],[[]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["bool",15],["usize",15]],["bool",15]],null,[[]],[[]],[[["option",4]]],[[["value",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],[["value",4],["result",6]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[["str",15]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[["libprovider",8],["url",3]],["result",6]],null,null,[[["metadata",3]]],[[],["result",4]],[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[["url",3]],[["result",6],["vec",3]]],[[["url",3]],[["result",6],["vec",3]]],[[["url",3]],[["result",6],["vec",3]]],[[]],[[["simpath",3]]],[[["str",15],["url",3]],[["result",6],["url",3]]],[[["str",15],["url",3]],["result",6]],[[["str",15],["url",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[["function",3]]],[[["url",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["metadata",3]],[[],["cargo",3]],[[],["manifest",3]],[[]],[[]],[[]],[[],["metadata",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["metadata",3]],["bool",15]],[[["cargo",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["vec",3]],[[],["hashset",3]],[[],["metadata",3]],[[],["hashset",3]],[[]],[[]],[[]],[[["libprovider",8],["url",3]],["result",6]],null,[[["metadata",3]],["bool",15]],[[["cargo",3]],["bool",15]],[[["metadata",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["hashset",3]]],[[["hashset",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["conversion",4]],[[],["outputconnection",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["conversion",4]],["bool",15]],[[["outputconnection",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],null,[[],["bool",15]],null,[[["outputconnection",3]],["bool",15]],[[["bool",15],["string",3],["usize",15],["i32",15]]],null,[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["option",4],["str",15],["url",3]],[["result",6],["url",3]]]],"p":[[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"Implementation"],[3,"Function"],[4,"InputInitializer"],[3,"Input"],[4,"ImplementationLocator"],[3,"LibraryManifest"],[3,"MetaProvider"],[8,"Provider"],[8,"LibProvider"],[3,"Manifest"],[3,"MetaData"],[3,"Cargo"],[4,"Conversion"],[3,"OutputConnection"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};