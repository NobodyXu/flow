language: rust

matrix:
  include:
  - os: linux
    rust: nightly # in order to run grcov for coverage measurement
  - os: osx
    osx_image: xcode12.2 # request macOS 10.15.7
    rust: stable

env:
  global:
    - FLOW_LIB_PATH=$TRAVIS_BUILD_DIR,$TRAVIS_BUILD_DIR/flowr/src/lib

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libzmq3-dev
      - libdw-dev # Required by kcov for code coverage
      - libssl-dev
      - binutils-dev # Required by kcov for code coverage
      - libbfd-dev # Required by kcov for code coverage
      - graphviz # Required to build graphs for the book for gh_pages
  homebrew:
    packages:
      - zmq

before_install: |
    make config
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      cargo install grcov
      rustup component add llvm-tools-preview
    fi

# On Mac, build package by package to avoid 50min limit on a command's execution
script: |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export RUSTFLAGS="-Zinstrument-coverage"
      LLVM_PROFILE_FILE="flow-%p-%m.profraw" cargo build -p flowc # required for tests to pass
      cargo clippy -- -D warnings
      LLVM_PROFILE_FILE="flow-%p-%m.profraw" cargo build
      LLVM_PROFILE_FILE="flow-%p-%m.profraw" cargo test
      grcov . --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
      bash <(curl -s https://codecov.io/bash) -f lcov.info
      rm -f lcov.info
    else
      echo "Building flowc that is required by other package tests"
      cargo build -p flowc
      echo "Testing workspace packages individually"
      cargo test -p flowc
      cargo test -p flowr
      cargo test -p flowcore
      cargo test -p flow_impl_derive
      cargo test -p flowstdlib
      cargo test -p flowsamples
    fi

after_success: |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      cargo doc --no-deps --target-dir=target/html/code
      mdbook build
      # cleanup things we don't want deployed to gh_pages
      find target/html -name target -type d | xargs rm -rf {}
      find target/html -name .idea | xargs rm -rf {}
      find target/html -name \*.iml | xargs rm -rf {}
      find target/html -name .git | xargs rm -rf {}
      find target/html -name Cargo.toml | xargs rm -rf {}
      find target/html -name manifest.json | xargs rm -rf {}
      find target/html -name test.err | xargs rm -rf {}
      find target/html -name test.input | xargs rm -rf {}
      find target/html -name test.arguments | xargs rm -rf {}
      find target/html -name test.output | xargs rm -rf {}
      find target/html -name expected.output | xargs rm -rf {}
      find target/html -name flow.toml | xargs rm -rf {}
      find target/html -name \*.rs | xargs rm -rf {}
      find target/html -name \*.dump | xargs rm -rf {}
      find target/html -name \*.dot | xargs rm -rf {}
      find target/html -name \*.wasm | xargs rm -rf {}
      find target/html -name \*.lock  | xargs rm -rf {}
      cd target/html && rm -f Makefile .crates.toml .DS_Store .mdbookignore .travis.yml codecov.yml
      rm -rf target/html/flowc/tests/test-flows
      rm -rf target/html/flowc/tests/test-libs
      rm -rf target/html/code/debug
      find target/html -depth -type d -empty -delete
    fi

# Only deploy the docs on linux builds of master branch with stable rust
deploy:
  provider: pages
  cleanup: false
  github-token: $GITHUB_PAGES_TOKEN
  local-dir: target/html
  keep_history: true
  allow_empty_commit: true # Avoid deploy fail on empty commit if nothing has changed (CRON builds)
  on:
    branch: master
    condition: $TRAVIS_OS_NAME == "linux"

notifications:
  email:
  - andrew@mackenzie-serres.net
