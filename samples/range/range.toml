# IO declarations
[[input]]
name = "start"
type = "Number"

[[input]]
name = "limit"
type = "Number"

[[output]]
name = "series"
type = "Number"

[[output]]
name = "min"
type = "Number"

[[output]]
name = "max"
type = "Number"

[[output]]
name = "done"
type = "Bool"

# IO taps
[[value]]
name = "start-signal"
type = "Bool"
init = true

[[function]]
alias = "limit-gate"
source = "lib://flowstdlib/control/tap.toml"

[[function]]
alias = "start-gate"
source = "lib://flowstdlib/control/tap.toml"

[[connection]]
from = "value/start-signal"
to = "function/limit-gate/control"

[[connection]]
from = "input/limit"
to = "function/limit-gate/data"

[[connection]]
from = "value/start-signal"
to = "function/start-gate/control"

[[connection]]
from = "input/start"
to = "function/start-gate/data"


# A store for the limit value that always refreshes itself, so it's value is always available
[[value]]
name = "limit-store"
type = "Number"
static = true

[[connection]]
from = "function/limit-gate"
to = "value/limit-store"

[[connection]]
from = "function/start-gate"
to = "flow/pilte/in"

# pass if less than or equal, add one and loop
[[flow]]
alias = "pilte"
source = "pass_if_lte.toml"

[[function]]
alias = "add"
source = "lib://flowstdlib/math/add.toml"

[[connection]]
from = "value/limit-store"
to = "flow/pilte/max"

[[connection]]
from = "flow/pilte/passed"
to = "output/series"

[[connection]]
from = "flow/pilte/passed"
to = "function/add/i1"

[[value]]
name = "one"
type = "Number"
init = 1
static = true

[[connection]]
from = "value/one"
to = "function/add/i2"

[[connection]]
from = "function/add"
to = "flow/pilte/in"

[[connection]]
from = "input/start"
to = "output/min"

[[value]]
name = "range-done"
type = "Bool"
init = true
static = true

[[function]]
alias = "when-done"
source = "lib://flowstdlib/control/tap.toml"

[[connection]]
from = "value/range-done"
to = "function/when-done/data"

[[connection]]
from = "flow/pilte/blocked"
to = "function/when-done/control"

[[connection]]
from = "function/when-done"
to = "output/done"

# re-open the input gates for another value to loop on
[[connection]]
from = "function/when-done"
to = "value/start-signal"


[[connection]]
from = "input/limit"
to = "output/max"