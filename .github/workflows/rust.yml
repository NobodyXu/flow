name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule: # Build every day at 5PM UTC
    - cron: '0 17 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ linux, macos, windows ]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable

    steps:
    - uses: actions/checkout@v2

    - name: Cache Cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-stable-cargo-registry-

    - name: SetupEnvVars
      run: echo "FLOW_LIB_PATH=$GITHUB_WORKSPACE,$GITHUB_WORKSPACE/flowr/src/lib" >> "$GITHUB_ENV"

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt, clippy

    - name: InstallDependencies
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get -y install libzmq3-dev graphviz
        fi
        rustup target add wasm32-unknown-unknown

    - name: Build-flowc
      run: cargo build -p flowc

    - name: FlowcCompileFlowstdlib
      run: cargo run -p flowc -- -l flowstdlib

    - name: Clippy
      run: cargo clippy -- -D warnings

    - name: ConfigureCoverage
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          cargo install grcov
          rustup component add llvm-tools-preview
          echo RUSTFLAGS="-Zinstrument-coverage" >> "$GITHUB_ENV"
          echo LLVM_PROFILE_FILE="flow-%p-%m.profraw" >> "$GITHUB_ENV"
        fi

    - name: Build
      run: |
        cargo build

    - name: Run tests
      run: |
        cargo test

    - name: UploadCoverage
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          grcov . --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
          bash <(curl -s https://codecov.io/bash) -f lcov.info
          rm -f lcov.info
        fi

    - name: Docs
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          cargo install mdbook
          cargo install mdbook-linkcheck
          make docs
          make trim-docs
        fi

    - name: DeployGHPages
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: gh-pages
        folder: target/html