flow = "check if prime"

# Inputs and Outputs
[[input]]
name = "candidate"
type = "Number"

[[output]]
name = "prime"
type = "Number"

# Generate a series of possible divisors of the candidate, from 2 up to candidate
[[process]]
alias = "lowest-divisor"
source = "lib://flowstdlib/data/buffer.toml"
input.default = {constant = 2}

[[process]]
alias = "divisor-sequence"
source = "lib://flowstdlib/math/sequence.toml"

[[connection]]
from = "process/lowest-divisor"
to = "process/divisor-sequence/start"

[[connection]]
from = "input/candidate"
to = "process/divisor-sequence/end"


# divide the candidate by the divisor
[[process]]
alias = "divide"
source = "lib://flowstdlib/math/divide.toml"

[[connection]]
from = "process/divisor-sequence/sequence"
to = "process/divide/divisor"

[[connection]]
from = "process/divisor-sequence/max"
to = "process/divide/dividend"

# debug
[[connection]]
from = "process/divide/remainder"
to = "output/prime"


#check if the remainder is equal to 0
#[[process]]
#alias = "zero"
#source = "lib://flowstdlib/data/buffer.toml"
#input.default = {constant = 0}

#[[process]]
#alias = "zero_remainder"
#source = "lib://flowstdlib/control/compare.toml"

#[[connection]]
#from = "value/zero"
#to = "process/zero_remainder/left"

#[[connection]]
#from = "process/divide/remainder"
#to = "process/zero_remainder/right"


# if the remainder was 0 then let the value pass to output
#[[process]]
#alias = "tap"
#source = "lib://flowstdlib/control/tap.toml"

#[[connection]]
#from = "process/zero_remainder/equal"
#to = "process/tap/control"

#[[connection]]
#from = "process/divide/dividend"
#to = "process/tap/data"

# TODO AMD
#[[connection]]
#from = "process/tap"
#to = "process/to_string"