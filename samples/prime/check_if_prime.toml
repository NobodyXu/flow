name = "check if prime"

# Inputs and Outputs
[[input]]
name = "candidate"
type = "Number"

[[output]]
name = "prime"
type = "Number"

[[output]]
name = "done"
type = "Bool"


# Generate a series of possible divisors of the candidate, from 1 up to the candidate
[[value]]
name = "lowest-divisor"
type = "Number"
init = 1

[[connection]]
from = "value/lowest-divisor"
to = "flow/divisor-range/start"

[[connection]]
from = "input/candidate"
to = "flow/divisor-range/limit"

[[flow]]
alias = "divisor-range"
source = "../range/range.toml"

[[connection]]
from = "flow/divisor-range/done"
to = "output/done"

######################################


# TODO ADM Debugging - shortcut and just output all the divisors generated
[[connection]]
from = "flow/divisor-range/series"
to = "output/prime"


######################################


# divide the candidate by the divisor
#[[function]]
#alias = "divide"
#source = "lib://flowstdlib/math/divide.toml"

#[[connection]]
#from = "flow/divisor-range/max"
#to = "function/divide/dividend"

#[[connection]]
#from = "flow/divisor-range/series"
# to = "function/divide/divisor"


#check if the remainder is equal to 0
#[[value]]
#name = "zero"
#type = "Number"
#init = 0
#static = true

#[[function]]
#alias = "zero_remainder"
#source = "lib://flowstdlib/control/compare.toml"

#[[connection]]
#from = "value/zero"
#to = "function/zero_remainder/left"

#[[connection]]
#from = "function/divide/remainder"
#to = "function/zero_remainder/right"


# if the remainder was 0 then let the value pass to output
#[[function]]
#alias = "tap"
#source = "lib://flowstdlib/control/tap.toml"

#[[connection]]
#from = "function/zero_remainder/equal"
#to = "function/tap/control"

#[[connection]]
#from = "function/divide/dividend"
#to = "function/tap/data"

# TODO AMD
#[[connection]]
#from = "function/tap"
#to = "function/to_string"