var searchIndex = JSON.parse('{\
"flowc":{"doc":"<code>flowc</code> is a “flow compiler” that takes a hierarchical …","t":"DDLLLLMMMLAMLLMALLFFMLLMAMFFMMMMFMLLFAMMLLLLLLMMNNDENNGINNLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFF","n":["Options","RunnerSpec","borrow","borrow","borrow_mut","borrow_mut","compile_only","context_root","debug_symbols","deserialize","errors","execution_metrics","extract_context","extract_context","flow_args","flow_compile","from","from","get_lib_search_path","get_matches","graphs","into","into","lib","lib_build","lib_dirs","load_runner_spec","main","name","native_only","optimize","output_dir","parse_args","provided_implementations","recreate_context","recreate_context","run","source_arg","source_url","stdin_file","try_from","try_from","try_into","try_into","type_id","type_id","verbosity","wasm_execution","Compiler","Core","Error","ErrorKind","Io","Msg","Result","ResultExt","Toml","Url","backtrace","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","description","description","description","extract_context","extract_context","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","into","into","iter","iter","kind","kind","provide","recreate_context","recreate_context","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_boxed_chain","with_chain","with_chain","compile_and_execute_flow","execute_flow","make_writeable","build_lib","check_manifest_status","compile_flows","compile_functions","copy_definition_to_output_dir","copy_docs","get_output_dir"],"q":[[0,"flowc"],[48,"flowc::errors"],[113,"flowc::flow_compile"],[116,"flowc::lib_build"],[122,"flowc::source_arg"]],"d":["information from the parsing of the command line options, …","","","","","","","","","","Contains Error types that other modules in this crate will …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","For the lib provider, libraries maybe installed in …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","used to compile a flow library from source","","","","","","","","","","","","","","","","","","","","","","","","","","The Error type.","The kind of an error.","","A convenient variant for String.","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","","Returns the backtrace associated with this error.","","Exits a function early with an error","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","","Extends the error chain with a new entry.","A short description of the error. This method is identical …","","A string describing the error kind.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Constructs an error from a kind, and generates a backtrace.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterates over the error chain.","","Returns the kind of the error.","","","","","","","","","","","","","","Construct a chained error from another boxed error and a …","Constructs a chained error from another error and a kind, …","","Compile a flow, maybe run it","","","Build a library from source and generate a manifest for it …","","","","","","Determine the output directory to use for generation on …"],"i":[0,0,10,2,10,2,10,10,10,2,0,10,10,2,10,0,10,2,0,0,10,10,2,10,0,10,0,0,2,10,10,10,0,10,10,2,0,0,10,10,10,2,10,2,10,2,10,10,17,17,0,0,17,17,0,0,17,17,12,12,0,12,17,12,17,36,12,12,12,12,17,12,17,12,12,17,17,12,12,12,12,12,12,12,12,12,17,17,17,17,12,12,12,17,12,12,12,12,12,12,17,12,12,17,12,17,12,17,12,17,12,12,12,0,0,0,0,0,0,0,0,0,0],"f":[0,0,[[]],[[]],[[]],[[]],0,0,0,[1,[[3,[2]]]],0,0,[[]],[[]],0,0,[[]],[[]],[[[5,[4]]],[[7,[6]]]],[[],8],0,[[]],[[]],0,0,0,[9,[[7,[2]]]],[[]],0,0,0,0,[8,[[7,[10]]]],0,[[]],[[]],[[],7],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,[12,[[14,[13]]]],[12,[[14,[13]]]],0,[[]],[[]],[[]],[[]],[15,[[3,[12]]]],[[12,15],12],[[12,15],12],[12,16],[12,16],[17,16],[[]],[[]],[[12,18],19],[[12,18],19],[[17,18],19],[[17,18],19],[20,12],[4,12],[16,12],[21,12],[22,12],[23,12],[24,12],[17,12],[[]],[16,17],[[]],[12,17],[4,17],[[],12],[17,12],[[]],[[]],[12,25],[12,25],[12,17],[12],[26],[[]],[[]],[12,[[14,[27]]]],[[],4],[[],4],[[],3],[[],3],[[],3],[[],3],[[],11],[[],11],[[[28,[27]],[29,[17]]],12],[[[0,[27,30]],[29,[17]]],12],[[[0,[27,30]],29],12],[[10,31,4],7],[[9,10,4],7],[32,7],[[10,31],7],[[32,33,34],7],[[32,10,34,31],[[7,[33]]]],[[32,10,34,31],[[7,[33]]]],[[9,9],[[7,[33]]]],[[32,10],[[7,[33]]]],[[35,[14,[16]]],[[7,[32]]]]],"c":[],"p":[[8,"Deserializer"],[3,"RunnerSpec"],[4,"Result"],[3,"String"],[15,"slice"],[3,"Simpath"],[6,"Result"],[3,"ArgMatches"],[3,"Path"],[3,"Options"],[3,"TypeId"],[3,"Error"],[3,"Backtrace"],[4,"Option"],[8,"FnOnce"],[15,"str"],[4,"ErrorKind"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Error"],[3,"Error"],[3,"Error"],[4,"ParseError"],[3,"Iter"],[3,"Demand"],[8,"Error"],[3,"Box"],[8,"Into"],[8,"Send"],[8,"Provider"],[3,"PathBuf"],[15,"i32"],[3,"LibraryManifest"],[3,"Url"],[8,"ResultExt"]]},\
"flowcore":{"doc":"<code>flowcore</code> defines core structs and traits used by other …","t":"RIRGAAAAAAKAAADLLLLLLLLLDLLLLLLLLLAIKFKDENNGINNLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLAAAAAAAAAAAAAAAAAADENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDDRIRRRRLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLMLLLLLLMMLLLMLLLLMLMLLLMMLMLMMLMLLLLMMLLLLLLDRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLDLLMLLMLLLLMLLMLLLLLLLLLLLLLLLMMMLLMLMLMMLMLLLLLLLMMLLLLLLNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLINNNNDGELLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRREDNNLLLLLLLLLLLLLLLLLMLMLMLLLMLLLLLLLLLDMLLLLLMLLLLLLLLMLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLLIDKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLNENNDENLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLDLMLLLLLLLLMLLLLMLLLLLLNNIDEIINLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLKKLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLMLLLLLLLLMMMLLLLLLLIKIKKF","n":["DONT_RUN_AGAIN","Implementation","RUN_AGAIN","RunAgain","content","deserializers","errors","meta_provider","model","provider","run","url_helper","file_provider","http_provider","FileProvider","borrow","borrow_mut","from","get_contents","into","resolve_url","try_from","try_into","type_id","HttpProvider","borrow","borrow_mut","from","get_contents","into","resolve_url","try_from","try_into","type_id","deserializer","Deserializer","deserialize","get_deserializer","name","Error","ErrorKind","Io","Msg","Result","ResultExt","Serde","Url","backtrace","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","clone","clone_into","description","description","description","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","into","into","iter","iter","kind","kind","provide","serialize","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_boxed_chain","with_chain","with_chain","MetaProvider","borrow","borrow_mut","from","get_contents","into","new","resolve_url","try_from","try_into","type_id","connection","datatype","flow_definition","flow_manifest","function_definition","input","io","lib_manifest","metadata","metrics","name","output_connection","process","process_reference","route","runtime_function","submission","validation","Connection","Direction","FROM","TO","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","connect","default","deserialize","fmt","fmt","fmt","from","from","from","from_io","from_io_mut","into","into","level","name","new","serialize","to","to_io","to_io_mut","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate","ARRAY_TYPE","BOOLEAN_TYPE","DataType","DataTypeList","GENERIC_TYPE","HasDataTypes","NULL_TYPE","NUMBER_TYPE","OBJECT_TYPE","STRING_TYPE","array_order","array_type","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","compatible_types","datatypes","default","deref","deserialize","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","get_hash","hash","into","into","is_array","is_array_of","is_generic","partial_cmp","serialize","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","valid","value_array_order","value_type","FlowDefinition","alias","alias","borrow","borrow_mut","build_connections","clone","clone_into","config","connections","context_references","default","default_url","deserialize","docs","fmt","fmt","from","get_docs","id","inputs","inputs","inputs_mut","into","is_runnable","lib_references","metadata","name","name","outputs","outputs","process_refs","route","route","route_mut","serialize","set_alias","set_routes_from_parent","source_url","subprocesses","to_owned","to_string","try_from","try_into","type_id","validate","Cargo","DEFAULT_MANIFEST_FILENAME","FlowManifest","add_context_reference","add_function","add_lib_reference","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","functions","get_context_references","get_functions","get_lib_references","get_metadata","get_source_urls","into","into","load","new","package","serialize","serialize","set_context_references","set_lib_references","set_source_urls","take_functions","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","FunctionDefinition","add_output_connection","alias","alias","borrow","borrow_mut","build_type","camel_case","clone","clone_into","config","context_reference","default","deserialize","docs","fmt","fmt","from","get_context_reference","get_docs","get_flow_id","get_id","get_implementation","get_inputs","get_lib_reference","get_mut_inputs","get_output_connections","get_outputs","get_source","get_source_url","implementation","impure","inputs","into","is_impure","lib_reference","name","name","new","output_connections","outputs","route","route","route_mut","serialize","set_flow_initializer","set_id","set_implementation","set_routes_from_parent","set_source","source","source_url","to_owned","to_string","try_from","try_into","type_id","validate","Always","Input","InputInitializer","Once","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_value","init","into","into","is_empty","name","new","reset","serialize","serialize","take","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Find","FlowInput","FlowOutput","FunctionInput","FunctionOutput","IO","IOSet","IOType","alias","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","datatypes","datatypes","default","default","deserialize","deserialize","eq","equivalent","equivalent","find_by_subroute","find_by_subroute","flow_io","fmt","fmt","fmt","from","from","function_io","get_flow_initializer","get_initializer","into","into","io_type","name","new","new_named","route","route_mut","serialize","serialize","set_datatypes","set_flow_initializer","set_initializer","set_io_routes_from_parent","set_io_type","set_route","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate","validate","DEFAULT_LIB_JSON_MANIFEST_FILENAME","DEFAULT_LIB_RUST_MANIFEST_FILENAME","ImplementationLocator","LibraryManifest","Native","RelativePath","add_locator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","from","from","into","into","lib_url","load","locators","manifest_filename","metadata","new","serialize","serialize","source_urls","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_json","MetaData","authors","borrow","borrow_mut","clone","clone_into","default","description","deserialize","eq","equivalent","equivalent","fmt","from","from","into","name","serialize","to_owned","try_from","try_into","type_id","version","Metrics","borrow","borrow_mut","clone","clone_into","default_start_time","deserialize","eq","equivalent","equivalent","fmt","fmt","from","increment_outputs_sent","into","new","reset","serialize","set_jobs_created","to_owned","to_string","track_max_jobs","try_from","try_into","type_id","HasName","Name","alias","as_ref","borrow","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deserialize","empty","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","get_hash","hash","into","name","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","validate","ArraySerialize","Conversion","Input","Output","OutputConnection","Source","WrapAsArray","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","destination","destination_flow_id","destination_id","destination_io_number","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","get_hash","hash","into","into","into","new","serialize","serialize","serialize","source","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","FlowProcess","FunctionProcess","Process","alias","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","into","name","route","route_mut","serialize","to_owned","try_from","try_into","type_id","ProcessReference","alias","alias","borrow","borrow_mut","clone","clone_into","deserialize","fmt","fmt","from","initializations","into","name","serialize","set_alias","source","to_owned","to_string","try_from","try_into","type_id","validate","FlowInput","FlowOutput","HasRoute","Route","RouteType","SetIORoutes","SetRoute","SubProcess","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","deserialize","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","from","from","from","from","from","from","get_hash","hash","insert","into","into","is_array_selector","partial_cmp","pop","route","route_mut","serialize","set_io_routes_from_parent","set_routes_from_parent","sub_route_of","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate","without_trailing_array_index","RuntimeFunction","borrow","borrow_mut","can_run","clone","clone_into","deserialize","eq","equivalent","equivalent","fmt","fmt","from","get_flow_id","get_implementation_location","get_implementation_url","get_output_connections","id","implementation_location","init","init_inputs","input","input_count","input_set_count","inputs","into","name","new","reset","route","send","serialize","set_implementation_url","take_input_set","to_owned","to_string","try_from","try_into","type_id","Submission","borrow","borrow_mut","clone","clone_into","debug_enabled","deserialize","eq","equivalent","equivalent","fmt","fmt","from","into","job_timeout","manifest","max_parallel_jobs","new","serialize","to_owned","to_string","try_from","try_into","type_id","Validate","validate","Provider","get_contents","resolve_url","url_from_string"],"q":[[0,"flowcore"],[12,"flowcore::content"],[14,"flowcore::content::file_provider"],[24,"flowcore::content::http_provider"],[34,"flowcore::deserializers"],[35,"flowcore::deserializers::deserializer"],[39,"flowcore::errors"],[101,"flowcore::meta_provider"],[112,"flowcore::model"],[130,"flowcore::model::connection"],[169,"flowcore::model::datatype"],[226,"flowcore::model::flow_definition"],[272,"flowcore::model::flow_manifest"],[324,"flowcore::model::function_definition"],[382,"flowcore::model::input"],[429,"flowcore::model::io"],[493,"flowcore::model::lib_manifest"],[534,"flowcore::model::metadata"],[557,"flowcore::model::metrics"],[582,"flowcore::model::name"],[619,"flowcore::model::output_connection"],[687,"flowcore::model::process"],[707,"flowcore::model::process_reference"],[730,"flowcore::model::route"],[792,"flowcore::model::runtime_function"],[831,"flowcore::model::submission"],[855,"flowcore::model::validation"],[857,"flowcore::provider"],[860,"flowcore::url_helper"]],"d":["Use <code>DONT_RUN_AGAIN</code> to indicate that a function should not …","A function’s implementation must implement this trait …","Use <code>RUN_AGAIN</code> to indicate that a function can be executed …","Implementations should return a value of type <code>RunAgain</code> to …","contains the file and http content provider implementations","a set of serializers to read definition files from various …","contains Error that other modules in this crate will …","is used to resolve library references of the type “lib://…","defines many of the core data structures used across …","is a trait definition that providers of content must …","The <code>run</code> method is used to execute the function’s …","Utility functions related to Urls","The Content Provider for File contents","The Content Provider for Http contents","The <code>FileProvider</code> implements the <code>Provider</code> trait and takes …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","The <code>HttpProvider</code> implements the <code>Provider</code> trait and takes …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Helper function used to get a deserializer for a given …","All deserializers have to implement this trait for content …","Deserialize the supplied <code>content</code> that was loaded from <code>url</code> …","Return a Deserializer based on the file extension of the …","Return the name of the serializer implementing this trait","The Error type.","The kind of an error.","","A convenient variant for String.","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","","Returns the backtrace associated with this error.","","Exits a function early with an error","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","Extends the error chain with a new entry.","","","","A short description of the error. This method is identical …","","A string describing the error kind.","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Constructs an error from a kind, and generates a backtrace.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates over the error chain.","","Returns the kind of the error.","","","","","","","","","","","","","Construct a chained error from another boxed error and a …","Constructs a chained error from another error and a kind, …","","The <code>MetaProvider</code> implements the <code>Provider</code> trait and based …","","","Returns the argument unchanged.","Takes a Url with a scheme of “http”, “https” or “…","Calls <code>U::from(self)</code>.","Create a new <code>MetaProvider</code> initializing it with:","Takes a Url with a scheme of “http”, “https”, “…","","","","<code>connection</code> defines the connection between one process …","<code>datatype</code> specifies the type of data permitted on a input, …","<code>flow</code> is the definition of an entire flow, including …","<code>flow_manifest</code> is the struct that specifies the manifest of …","<code>function</code> defines a function in a flow or library","<code>input</code> defines the struct for inputs to functions in a flow","<code>io</code> is the object used to define a process’s inputs or …","<code>lib_manifest</code> defines the structs for specifying a Library…","<code>metadata</code> defined structs for flow meta data","<code>metrics</code> defines a struct for runtime execution metrics","<code>name</code> is used to name various objects in the flow model","<code>output_connection</code> defines a struct for a function’s …","<code>process</code> is a generic definition of a <code>function</code> or a <code>flow</code> so …","<code>process_reference</code> is an object used within a flow to …","<code>route</code> defines a location in the hierarchy of a flow and …","Definition of <code>RuntimeFunction</code> structure","<code>submission</code>defines a struct for submitting flows for …","Traits used for the validation of Model structs","<code>Connection</code> defines a connection between the output of one …","<code>Direction</code> defines whether a <code>Connection</code> is coming from an …","The <code>Connection</code> is <code>FROM</code> this IO to another","The <code>Connection</code> is <code>TO</code> this IO from another","","","","","","","Connect the <code>from_io</code> to the <code>to_io</code> inside a flow at level …","","","","","","Returns the argument unchanged.","Return the <code>from</code> Route specified in this connection","Returns the argument unchanged.","Return a reference to the from_io","Return a mutable reference to the from_io","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get at what level in the flow hierarchy this connection …","Return the name","Create a new Route with <code>from_route</code> as the source <code>Route</code> and …","","Return the <code>to</code> Route specified in this connection","Return a reference to the to_io","Return a mutable reference to the to_io","","","","","","","","","","Json “array” data type","Json “boolean” data type","Datatype is just a string defining what data type is being …","A set of datatypes","Generic type is represented as an empty string","Trait that is used on multiple objects to get their data …","Json “null” data type","Json “number” data type","Json “object” data type (a Map in other languages)","Json “string” data type","Determine how deeply nested in arrays this data type is. …","Return Option of the data type the array holds, or None if …","","","","","","","","","","For a set of output types to be compatible with a …","Return a reference to the datatype of the object …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return if this datatype is an array or not","Determine if this data type is an array of the <code>second</code> type","Return true if this datatype is generic (not specified at …","","","","","","","","","","","","Determine if a datatype specified in a flow is a valid …","Determine how deeply nested in arrays this Value is. Not …","Return the <code>DataType</code> for a Json <code>Value</code>, including nested …","<code>FlowDefinition</code> defines (at compile time) a parent or child …","","When the same process is used multiple times within a …","","","Iterate over all the connections defined in the flow, and …","","","Configure a flow with additional information after it is …","<code>connections</code> within this flow, from flow input or to flow …","<code>context_references</code> is the set of context functions used in …","","Return a default value for a Url as part of a flow","","Name of any docs file associated with this Flow","","","Returns the argument unchanged.","Get the name of any associated docs file","flows are assigned a numeric <code>id</code> in the hierarchy","Get a reference to the set of inputs this flow defines","<code>inputs</code> that this flow defines","Get a mutable reference to the set of inputs this flow …","Calls <code>U::from(self)</code>.","Check if the flow can be run (it could be a sub-flow not a …","<code>lib_references</code> is the set of library references used in …","<code>metadata</code> about flow author, versions etc","","<code>name</code> given to this flow","Get a reference to the set of outputs this flow defines","<code>outputs</code> that this flow defines","Set of sub-processes referenced (used) in this flow","","<code>route</code> defines the location in the hierarchy of flows where …","","","Set the alias of this flow to the supplied Name","","<code>source_url</code> is the url of the file/resource where this flow …","<code>subprocesses</code> are the loaded definition of the processes …","","","","","","","<code>Cargo</code> meta-data that can be used as a source of meta-data","The default name used for a flow Manifest file if none is …","A <code>flows</code> <code>Manifest</code> describes it and describes all the …","Add a new context reference (the name of a library) into …","Add a run-time Function to the manifest for use in …","Add a new library reference (the name of a library) into …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the list of functions in this manifest","get the list of all context references in this manifest","Get the list of functions in this manifest","get the list of all library references in this manifest","Get the metadata structure for this manifest","Get the list of source files used in the flow","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Load, or Deserialize, a manifest from a <code>source</code> Url using …","Create a new manifest that can then be added to, and used …","We are only interested in the <code>package</code> part - as a source …","","","set the list of all context references in this manifest","set the list of all library references in this manifest","set the list of all source urls used in the flow","Take the vector of functions out of this manifest","","","","","","","","","","<code>FunctionDefinition</code> defines a Function (compile time) that …","Add a connection from this function to another","","As a function can be used multiple times in a single flow, …","","","Type of build used to compile Function’s implementation …","Convert a FunctionDefinition filename into the name of the …","","","Configure a function with additional information after it …","Is the function a context function and where is it found","","","Name of any docs file associated with this Function","","","Returns the argument unchanged.","Get the context reference of this function","Get the name of any associated docs file","Get the id of the low this function is a part of  ","Get the id of this function","Get a reference to the implementation of this function","Get a reference to the set of inputs of this function","Get the lib reference of this function","Get a mutable reference to the set of inputs of this …","Get a reference to the set of output connections from this …","Get a reference to the set of outputs this function …","Get the name of the source file relative to the function …","Get the source url for the file where this function was …","Implementation is the relative path from the lib root to …","Is this an impure function that interacts with the …","The set of inputs this function has","Calls <code>U::from(self)</code>.","Return true if this function is impure or not","Is the function being used part of a library and where is …","","<code>Name</code> of the function","Create a new function - used mainly for testing as …","The output connections from this function to other …","The set of outputs this function generates when executed","","the <code>route</code> in the flow hierarchy where this function is …","","","Set a flow initializer on the specified input","Set the id of this function","Set the implementation location of this function","","Set the source field of the function","Name of the source file for the function implementation","<code>source_url</code> is where this function definition was read from","","","","","","","A <code>ConstantInputInitializer</code> initializes an input “…","An <code>Input</code> to a <code>RuntimeFunction</code>","An <code>Input</code> can be initialized in one of two ways with an …","A <code>OneTimeInputInitializer</code> initializes an <code>Input</code> once - at …","","","","","","","","","Return the total number of values queued up, across all …","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Get the Value of the initializer","Initialize an input with the InputInitializer if it has …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if there are no more values available from …","Return the name of the input","Create a new <code>Input</code> with an optional <code>InputInitializer</code>","Reset the an <code>Input</code> - clearing all received values (only …","","","Take the first element from the Input and return it.","","","","","","","","","","<code>Find</code> trait is implemented by a number of object types to …","The IO is the input to a Flow","The IO is the output of a Flow","The IO is an input of a Function","The IO is an output of a Function","<code>IO</code> contains information about the Input or Output of a …","An <code>IOSet</code> is a set of IOs belonging to a function or a flow","<code>IOType</code> defines what type of IO this is","","","","","","","","","","Return a reference to the data type this IO generates or …","","","","","","","","","Find IO using it’s sub-Route","","Is this IO an input or an output of a Flow?","","","","Returns the argument unchanged.","Returns the argument unchanged.","Is this IO an input or an output of a Function?","Get a reference to the flow propagated input initializer …","Get a reference to the input initializer of this IO","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a reference to the IOType of this IO","","Create a new <code>IO</code> with a specific datatype and at a specific …","Create a new <code>IO</code> with a specific datatype and at a specific …","","","","","Set the datatypes of this IO","Set the flow input initializer of this IO","Set the input initializer of this IO","","Set the IO type","Set the route where this IO resides in the flow hierarchy","","","","","","","","","","","","The default name used for a Library  Manifest file if none …","The default name used for a Rust Library Manifest if none …","<code>ImplementationLocator</code> describes where an implementation …","<code>LibraryManifest</code> describes the contents of a Library that …","A <code>Native</code> - A reference to a trait object statically linked …","A path indicating where the implementation file is located …","Add a locator to the <code>LibraryManifest</code> to allow resolving “…","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","the Url that this library implements","load a <code>LibraryManifest</code> from <code>lib_manifest_url</code>, using …","the <code>locators</code> map a lib reference to a <code>ImplementationLocator</code>…","Given an output directory, return a PathBuf to the json …","<code>metadata</code> about a flow with author, version and usual fields","Create a new, empty, <code>LibraryManifest</code> with the provided …","","","source_files is a map of: Key: lib reference for functions …","","","","","","","","","Generate a manifest for the library in JSON","<code>MetaData</code> about a <code>flow</code> that will be used in the flow’s …","The name of the people who authored the flow","","","","","","A description for humans","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The human readable <code>name</code> of a <code>flow</code>","","","","","","Semantic versioning version number of the flow","<code>Metrics</code> stacks a number of statistics on flow execution …","","","","","Return the start time for flow execution - used for …","","","","","","","Returns the argument unchanged.","Increment the tracker for the number of output values sent …","Calls <code>U::from(self)</code>.","Create a new <code>Metrics</code> struct","Reset the values of a <code>Metrics</code> struct back to their initial …","","Set the number of jobs created in <code>Metrics</code> to the <code>jobs</code> value","","","Keep track of the maximum jobs that are executing in …","","","","Trait implemented by objects that have a Name","<code>Name</code> is a String that names various types of objects","Return a reference to the alias (also a Name type) of the …","","","","","","","","","","","Return true if the Name is empty","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Return a reference to the name of the struct implementing …","","","","","","","","","Serialize an Array, sending each element as a separate …","The <code>Conversion</code> enum defines what type of run-time …","A copy of the input value used to calculate the job who’…","A subroute of an output of a function - used as JSON …","<code>OutputConnection</code> contains information about a function’s …","This specifies the <code>Source</code> of an <code>OutputConnection</code> which can …","Take value and send it wrapped in an array","","","","","","","","","","","","","","","","","<code>destination</code> is the full route to the destination input","<code>flow_id</code> is the flow_id of the target function","id of the destination function of this <code>OutputConnection</code>","<code>io_number</code> is the IO number the connection is connected to …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>OutputConnection</code>","","","","Source of the value that should be forwarded","","","","","","","","","","","","","","","The process is actually a <code>Flow</code>","The process is actually a <code>Function</code>","Process is an enum that may contain a Flow or a Function","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","A <code>ProcessReference</code> is the struct used in a <code>Flow</code> to refer …","","A reference may have an alias - this is used when multiple …","","","","","","","","Returns the argument unchanged.","When a process is references, each reference can set …","Calls <code>U::from(self)</code>.","","","if the ProcessRef does not specify an alias for the …","Relative or absolute source of the referenced process","","","","","","","The route refers to an Input of a Flow","The Route refers to the Output of a Flow","A trait implemented by objects that have Routes","A <code>Route</code> is a String that refers to a particular location …","A <code>Route</code> can be of various Types","structs with IOs will be able to have the IOs routes set …","Some structs with Routes will be able to have their route …","The route specifies a sub-process of a flow (Input or …","","","","","","","","","","","","","","","","","","","","","Extend a Route by appending another Route to the end, …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Insert another Route at the front of this Route","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the route selects an element from an array","","Return a route that is one level up, such that …","Return a reference to the Route of the struct that …","Return a mutable reference to the Route of the struct that …","","Set the route and IO type of IOs in this struct based on …","Set the routes in fields of this struct based on the route …","<code>sub_route_of</code> returns an <code>Option&lt;Route</code>&gt; indicating if <code>self</code> …","","","","","","","","","","Return the io route without a trailing number (array …","<code>RuntimeFunction</code> contains all the information needed about …","","","Can this function run? Either because: - it has input sets …","","","","","","","","","Returns the argument unchanged.","Accessor for a <code>RuntimeFunction</code> <code>flow_id</code>","Get a reference to the implementation_location","Get a reference to the implementation_url","Accessor for a <code>RuntimeFunction</code> <code>output_connections</code> field","Accessor for a <code>RuntimeFunction</code> <code>id</code>","Accessor for a <code>RuntimeFunction</code> <code>implementation_location</code>","Initialize the function to be ready to be called during …","Initialize <code>Inputs</code> that have <code>InputInitializers</code> on them","Inspect the value of the <code>input</code> of a <code>RuntimeFunction</code>.","Determine if the <code>RuntimeFunction</code> <code>input</code> number <code>input_number</code> …","Returns how many inputs sets are available across all the …","Inspect the values of the <code>inputs</code> of a <code>RuntimeFunction</code>","Calls <code>U::from(self)</code>.","Accessor for a <code>RuntimeFunction</code> <code>name</code>","Create a new <code>RuntimeFunction</code> with the specified <code>name</code>, <code>route</code>…","Reset a <code>Function</code> to initial state. Used by a debugger at …","Accessor for a <code>RuntimeFunction</code> <code>route</code>","Send a value or array of values to the specified input of …","","Set the implementation_location, as an absolute Url …","Read the values from the inputs and return them for use in …","","","","","","A <code>Submission</code> is the struct used to send a flow to the …","","","","","Whether debugging is enabled or not for the flow","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The Duration to wait before timing out when waiting for …","The FlowManifest loaded from the manifest_url","An optional maximum number of jobs you want …","Create a new <code>Submission</code> of a flow for execution with the …","","","","","","","Many structs in the model implement the <code>Validate</code> method …","Validate that a deserialized model data structure is valid …","A content provider is responsible with interfacing with …","Fetches content from a URL. It resolves the URL internally …","Take a URL and uses it to determine a url where actual …","Accept an optional string (URL or filename) and from it …"],"i":[0,0,0,0,0,0,0,0,0,0,78,0,0,0,0,4,4,4,4,4,4,4,4,4,0,11,11,11,11,11,11,11,11,11,0,0,13,0,13,0,0,18,18,0,0,18,18,15,15,0,15,18,15,18,79,15,15,15,15,15,15,18,15,15,15,18,18,15,15,15,15,15,15,15,18,18,18,18,15,15,15,18,15,15,15,15,15,15,15,15,15,18,15,18,15,18,15,18,15,15,15,0,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,35,38,35,38,35,35,35,35,35,35,35,38,35,35,38,35,35,35,38,35,35,35,35,35,35,35,35,35,35,38,35,38,35,38,35,0,0,0,0,0,0,0,0,0,0,41,41,41,45,41,41,45,41,41,41,41,41,80,41,41,41,41,41,41,45,41,41,45,41,41,41,41,41,45,41,41,41,41,41,41,41,45,41,45,41,45,41,45,41,41,41,41,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,55,55,55,57,55,57,55,57,55,57,55,57,55,57,55,57,57,55,55,55,55,57,55,55,55,55,55,55,55,57,55,55,55,57,57,55,55,55,55,55,57,55,55,57,55,57,55,57,55,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,52,0,0,52,52,63,52,63,52,63,52,63,63,52,63,52,63,52,52,63,63,52,63,63,52,63,63,52,63,52,63,63,63,63,63,52,63,63,52,63,63,52,63,52,63,52,63,0,64,64,64,64,0,0,0,36,64,36,64,36,64,36,64,36,36,36,64,36,64,36,64,64,64,81,54,36,64,36,36,64,36,36,36,36,64,36,36,36,36,36,36,36,64,36,36,36,36,54,36,36,64,36,36,64,36,64,36,64,36,54,36,0,0,0,0,66,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,65,65,65,65,65,65,66,65,65,66,65,66,65,66,65,66,65,65,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,82,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,82,40,40,40,40,40,40,40,40,70,0,71,71,0,0,70,70,71,62,70,71,62,70,71,62,70,71,62,71,70,71,62,62,62,62,62,70,71,62,70,70,71,71,62,62,70,71,71,62,62,70,71,62,71,71,70,71,62,62,70,71,62,62,70,71,62,71,62,70,71,62,70,71,62,70,71,62,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,74,0,0,0,0,0,74,39,39,39,39,39,74,39,39,74,39,39,39,39,39,39,39,39,74,39,39,39,39,39,74,39,39,39,39,39,74,39,39,39,39,74,39,39,39,83,83,39,84,85,39,39,39,39,74,39,74,39,74,39,39,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,86,0,60,60,0],"f":[0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],3],0,0,0,0,[[]],[[]],[[]],[[4,5],[[3,[[7,[6]]]]]],[[]],[[4,5,8,[2,[8]]],3],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[11,5],[[3,[[7,[6]]]]]],[[]],[[11,5,8,[2,[8]]],3],[[],9],[[],9],[[],10],0,0,[[8,[12,[5]]],3],[5,[[3,[[14,[13]]]]]],[[],8],0,0,0,0,0,0,0,0,[15,[[12,[16]]]],[15,[[12,[16]]]],0,[[]],[[]],[[]],[[]],[17,[[9,[15]]]],[[15,17],15],[[15,17],15],[15,15],[[]],[15,8],[15,8],[18,8],[19,[[9,[15]]]],[[15,20],21],[[15,20],21],[[18,20],21],[[18,20],21],[22,15],[23,15],[24,15],[18,15],[8,15],[25,15],[[]],[8,18],[15,18],[[]],[23,18],[[],15],[18,15],[[]],[[]],[15,26],[15,26],[15],[15,18],[27],[[15,28],9],[15,[[12,[29]]]],[[]],[[],23],[[],23],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[[14,[29]],[30,[18]]],15],[[[0,[29,31]],[30,[18]]],15],[[[0,[29,31]],30],15],0,[[]],[[]],[[]],[[32,5],[[3,[[7,[6]]]]]],[[]],[[33,34],32],[[32,5,8,[2,[8]]],3],[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[35,35],[[]],[[35,36,36,37],3],[[],35],[19,[[9,[35]]]],[[35,20],21],[[35,20],21],[[38,20],21],[[]],[35,39],[[]],[35,36],[35,36],[[]],[[]],[35,37],[35,40],[[[30,[39]],[30,[39]]],35],[[35,28],9],[35,[[7,[39]]]],[35,36],[35,36],[[]],[[],23],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[35,3],0,0,0,0,0,0,0,0,0,0,[41,42],[41,[[12,[41]]]],[41,23],[[]],[[]],[41,23],[[]],[[]],[41,41],[[]],[[41,41],43],[[[2,[41]],[2,[41]],39],3],[[],[[7,[41]]]],[[],41],[41],[19,[[9,[41]]]],[[41,41],44],[[],44],[[],44],[[45,20],21],[[41,20],21],[[41,20],21],[[]],[[]],[8,41],[23,41],[[[0,[46,47]],48],49],[[41,50]],[[]],[[]],[41,44],[[41,41],44],[41,44],[[41,41],[[12,[43]]]],[[41,28],9],[[]],[[],23],[[],23],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[41,3],[1,42],[1,41],0,[51,40],0,[[]],[[]],[[51,37],3],[51,51],[[]],[[51,5,39,40,37,[53,[23,52]]],3],0,0,[[],51],[[],5],[19,[[9,[51]]]],0,[[51,20],21],[[51,20],21],[[]],[51,8],0,[51,54],0,[51,54],[[]],[51,44],0,0,[51,40],0,[51,54],0,0,[51,39],0,[51,39],[[51,28],9],[[51,40]],[[51,39]],0,0,[[]],[[],23],[[],9],[[],9],[[],10],[51,3],0,0,0,[[55,5]],[[55,56]],[[55,5]],[[]],[[]],[[]],[[]],[57,57],[55,55],[[]],[[]],[19,[[9,[57]]]],[19,[[9,[55]]]],[[57,57],44],[[55,55],44],[[],44],[[],44],[[],44],[[],44],[[55,20],21],[[55,20],21],[[]],[[]],[55,[[7,[56]]]],[55,[[58,[5]]]],[55,[[7,[56]]]],[55,[[58,[5]]]],[55,59],[55,[[53,[23,5]]]],[[]],[[]],[[60,5],3],[59,55],0,[[57,28],9],[[55,28],9],[[55,[58,[5]]]],[[55,[58,[5]]]],[[55,[53,[23,5]]]],[55,[[7,[56]]]],[[]],[[]],[[],23],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,[[61,62]],[61,40],0,[[]],[[]],0,[8,23],[61,61],[[]],[[61,5,5,39,40,37,[12,[5]],[53,[23,52]]],3],0,[[],61],[19,[[9,[61]]]],0,[[61,20],21],[[61,20],21],[[]],[61,[[12,[5]]]],[61,8],[61,37],[61,37],[61,8],[61,54],[61,[[12,[5]]]],[61,54],[61,[[7,[62]]]],[61,54],[61,8],[61,5],0,0,0,[[]],[61,44],0,[61,40],0,[[40,44,23,40,54,54,5,39,[12,[5]],[12,[5]],[7,[62]],37,37],61],0,0,[61,39],0,[61,39],[[61,28],9],[[61,37,[12,[52]]],3],[[61,37]],[[61,8]],[[61,39]],[[61,8]],0,0,[[]],[[],23],[[],9],[[],9],[[],10],[61,3],0,0,0,0,[[]],[[]],[[]],[[]],[52,52],[63,63],[[]],[[]],[63,37],[19,[[9,[52]]]],[19,[[9,[63]]]],[[52,52],44],[[63,63],44],[[],44],[[],44],[[],44],[[],44],[[52,20],21],[[63,20],21],[[63,20],21],[[]],[36,63],[[]],[52,1],[[63,44,44],44],[[]],[[]],[63,44],[63,8],[[[30,[40]],42,44,[12,[52]],[12,[52]]],63],[63],[[52,28],9],[[63,28],9],[63,[[3,[1]]]],[[]],[[]],[[],23],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,[36,40],[[]],[[]],[[]],[[]],[64,64],[36,36],[[]],[[]],[36,[[7,[41]]]],[36,[[7,[41]]]],[[],64],[[],36],[19,[[9,[64]]]],[19,[[9,[36]]]],[[64,64],44],[[],44],[[],44],[39,[[3,[36]]]],[[54,39],[[3,[36]]]],[36,44],[[64,20],21],[[36,20],21],[[36,20],21],[[]],[[]],[36,44],[36,[[12,[52]]]],[36,[[12,[52]]]],[[]],[[]],[36,64],[36,40],[[[7,[41]],[30,[39]]],36],[[[7,[41]],[30,[39]],[30,[40]]],36],[36,39],[36,39],[[64,28],9],[[36,28],9],[[36,[2,[41]]]],[[36,[12,[52]]],3],[[36,[12,[52]]],3],[[54,39,64]],[[36,64]],[[36,39,64]],[[]],[[]],[[],23],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[54,3],[36,3],0,0,0,0,0,0,[[65,8,8,8],3],[[]],[[]],[[]],[[]],[66,66],[65,65],[[]],[[]],[19,[[9,[66]]]],[19,[[9,[65]]]],[[66,66],44],[[65,65],44],[[]],[[]],[[]],[[]],0,[[60,5],3],0,[67,34],0,[[5,59],65],[[66,28],9],[[65,28],9],0,[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[65,67],3],0,0,[[]],[[]],[59,59],[[]],[[],59],0,[19,[[9,[59]]]],[[59,59],44],[[],44],[[],44],[[59,20],21],[[]],[51,59],[[]],0,[[59,28],9],[[]],[[],9],[[],9],[[],10],0,0,[[]],[[]],[68,68],[[]],[[],69],[19,[[9,[68]]]],[[68,68],44],[[],44],[[],44],[[68,20],21],[[68,20],21],[[]],[68],[[]],[37,68],[68],[[68,28],9],[[68,37]],[[]],[[],23],[[68,37]],[[],9],[[],9],[[],10],0,0,[[],40],[40,23],[[]],[40,23],[[]],[40,40],[[]],[[40,40],43],[[],40],[40],[19,[[9,[40]]]],[40,44],[[40,40],44],[[],44],[[],44],[[40,20],21],[[40,20],21],[8,40],[23,40],[40,40],[23,40],[39,40],[[]],[[[0,[46,47]],48],49],[[40,50]],[[]],[[],40],[[40,40],[[12,[43]]]],[[40,28],9],[[]],[[],23],[[],9],[[],9],[[],10],[40,3],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[70,70],[71,71],[62,62],[[]],[[]],[[]],[[],71],[19,[[9,[70]]]],[19,[[9,[71]]]],[19,[[9,[62]]]],0,0,0,0,[[70,70],44],[[71,71],44],[[62,62],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[70,20],21],[[71,20],21],[[71,20],21],[[62,20],21],[[62,20],21],[[]],[[]],[[]],[[[0,[46,47]],48],49],[[71,50]],[[]],[[]],[[]],[[71,37,37,37,23,23],62],[[70,28],9],[[71,28],9],[[62,28],9],0,[[]],[[]],[[]],[[],23],[[],23],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,[72,40],[[]],[[]],[72,72],[[]],[19,[[9,[72]]]],[[72,20],21],[[]],[[]],[72,40],[72,39],[72,39],[[72,28],9],[[]],[[],9],[[],9],[[],10],0,[73,40],0,[[]],[[]],[73,73],[[]],[19,[[9,[73]]]],[[73,20],21],[[73,20],21],[[]],0,[[]],[73,40],[[73,28],9],[[73,40]],0,[[]],[[],23],[[],9],[[],9],[[],10],[73,3],0,0,0,0,0,0,0,0,[39,23],[39,23],[39,8],[39,23],[[]],[[]],[39,23],[[]],[[]],[39,39],[[]],[[39,39],43],[[],39],[39],[39],[19,[[9,[39]]]],[[39,39],44],[[74,74],44],[[],44],[[],44],[[39,39],39],[[39,20],21],[[39,20],21],[[74,20],21],[40,39],[23,39],[8,39],[23,39],[[]],[[]],[[[0,[46,47]],48],49],[[39,50]],[[39,[75,[8]]],39],[[]],[[]],[39,44],[[39,39],[[12,[43]]]],[39],[[],39],[[],39],[[39,28],9],[[39,64]],[39],[[39,39],[[12,[39]]]],[[]],[[],23],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[39,3],[39],0,[[]],[[]],[56,44],[56,56],[[]],[19,[[9,[56]]]],[[56,56],44],[[],44],[[],44],[[56,20],21],[[56,20],21],[[]],[56,37],[56,8],[56,5],[56,[[7,[62]]]],[56,37],[56,8],[56],[[56,44,44]],[[56,37],[[12,[63]]]],[[56,37],37],[56,37],[56,[[7,[63]]]],[[]],[56,8],[[[30,[23]],[30,[23]],[30,[23]],[7,[63]],37,37,[2,[62]],44],56],[56],[56,8],[[56,37,1],44],[[56,28],9],[[56,5],3],[56,[[3,[[7,[1]]]]]],[[]],[[],23],[[],9],[[],9],[[],10],0,[[]],[[]],[76,76],[[]],0,[19,[[9,[76]]]],[[76,76],44],[[],44],[[],44],[[76,20],21],[[76,20],21],[[]],[[]],0,0,0,[[55,[12,[37]],[12,[77]],44],76],[[76,28],9],[[]],[[],23],[[],9],[[],9],[[],10],0,[[],3],0,[5,[[3,[[7,[6]]]]]],[[5,8,[2,[8]]],3],[[5,[12,[8]]],[[3,[5]]]]],"c":[],"p":[[4,"Value"],[15,"slice"],[6,"Result"],[3,"FileProvider"],[3,"Url"],[15,"u8"],[3,"Vec"],[15,"str"],[4,"Result"],[3,"TypeId"],[3,"HttpProvider"],[4,"Option"],[8,"Deserializer"],[3,"Box"],[3,"Error"],[3,"Backtrace"],[8,"FnOnce"],[4,"ErrorKind"],[8,"Deserializer"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"String"],[4,"ParseError"],[3,"Error"],[3,"Iter"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[8,"Into"],[8,"Send"],[3,"MetaProvider"],[3,"Simpath"],[3,"PathBuf"],[3,"Connection"],[3,"IO"],[15,"usize"],[4,"Direction"],[3,"Route"],[3,"Name"],[3,"DataType"],[15,"i32"],[4,"Ordering"],[15,"bool"],[3,"DataTypeList"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[3,"FlowDefinition"],[4,"InputInitializer"],[3,"BTreeMap"],[6,"IOSet"],[3,"FlowManifest"],[3,"RuntimeFunction"],[3,"Cargo"],[3,"BTreeSet"],[3,"MetaData"],[8,"Provider"],[3,"FunctionDefinition"],[3,"OutputConnection"],[3,"Input"],[4,"IOType"],[3,"LibraryManifest"],[4,"ImplementationLocator"],[3,"Path"],[3,"Metrics"],[3,"Instant"],[4,"Conversion"],[4,"Source"],[4,"Process"],[3,"ProcessReference"],[4,"RouteType"],[8,"AsRef"],[3,"Submission"],[3,"Duration"],[8,"Implementation"],[8,"ResultExt"],[8,"HasDataTypes"],[8,"Find"],[8,"HasName"],[8,"HasRoute"],[8,"SetIORoutes"],[8,"SetRoute"],[8,"Validate"]]},\
"flowmacro":{"doc":"<code>flow_function</code> is a <code>proc_macro_attribute</code> macro that wraps a …","t":"X","n":["flow_function"],"q":[[0,"flowmacro"]],"d":["The <code>flow_function</code> macro definition"],"i":[0],"f":[0],"c":[],"p":[]},\
"flowrcli":{"doc":"<code>flowr</code> is a command line flow runner for running <code>flow</code> …","t":"AFFFAFFAFFFFFFFFFFAAAAAAAADMLLLLLLMLLLLLMLLLMLLLLLLDRRLLMLLLLLMLLLLLLLMLMLLLLLLLLLDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMLLLLLLLLLLLLLLLLRDDRHRLLLLLLLLFLLFLLLLLLLLLLMMLLLLLLLLLLLNNNENNENNNDNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLNNNNENNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLAAFAAADLLLLLLLLLMLLLLAADLLLLLLLLLMLLLLDLLLLLLLLLMLLLLADLLLLLLLLLMLLLLAAAADLLLLLLLLLMLLLLDLLLLLLLLLMLLLLDLLLLLLLLLMLLLLDLLLLLLLLLMLLLLDENNNGINNLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["cli","client","client_and_coordinator","client_only","context","coordinator","coordinator_only","errors","get_bind_addresses","get_connect_addresses","get_flow_args","get_four_ports","get_lib_search_path","get_matches","main","num_threads","parse_flow_url","run","cli_client","cli_debug_client","cli_debug_handler","cli_submission_handler","connections","coordinator_message","debug_message","test_helper","CliRuntimeClient","args","borrow","borrow_mut","clone","clone_into","deref","deref_mut","display_metrics","drop","event_loop","flush_image_buffers","fmt","from","image_buffers","init","into","new","override_args","process_coordinator_message","to_owned","try_from","try_into","type_id","vzip","CliDebugClient","FLOWR_HISTORY_FILENAME","HELP_STRING","borrow","borrow_mut","connection","debug_client_loop","deref","deref_mut","display_state","drop","editor","from","function_list","get_server_command","get_user_command","help","init","into","last_command","new","override_args","parse_breakpoint_spec","parse_command","parse_inspect_spec","parse_optional_int","process_server_message","try_from","try_into","type_id","vzip","CliDebugHandler","block_breakpoint","blocks","borrow","borrow_mut","debug_server_connection","debugger_error","debugger_exiting","debugger_resetting","deref","deref_mut","drop","execution_ended","execution_starting","flow_unblock_breakpoint","from","function_list","function_states","get_command","init","input","into","job_breakpoint","job_completed","job_error","message","outputs","panic","run_state","send_breakpoint","start","try_from","try_into","type_id","vzip","CLISubmissionHandler","borrow","borrow_mut","coordinator_connection","coordinator_is_exiting","deref","deref_mut","drop","flow_execution_ended","flow_execution_starting","from","init","into","new","should_enter_debugger","try_from","try_into","type_id","vzip","wait_for_submission","COORDINATOR_SERVICE_NAME","ClientConnection","CoordinatorConnection","DEBUG_SERVICE_NAME","DONT_WAIT","WAIT","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","discover_service","drop","drop","enable_service_discovery","from","from","init","init","into","into","new","new","receive","receive","requester","responder","send","send","send_and_receive_response","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Ack","Args","ClientExiting","ClientMessage","ClientSubmission","CoordinatorExiting","CoordinatorMessage","EnterDebugger","Error","FileContents","FileMetaData","FlowEnd","FlowStart","GetArgs","GetLine","GetLineEof","GetStdin","GetStdinEof","Invalid","Invalid","Line","PixelWrite","Read","Stderr","StderrEof","Stdin","Stdout","StdoutEof","Write","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","into","into","into","into_resettable","into_resettable","is_dir","is_file","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BlockBreakpoint","BlockState","DataBreakpoint","Deadlock","DebugServerMessage","EnteringDebugger","Error","ExecutionEnded","ExecutionStarted","ExitingDebugger","FlowUnblockBreakpoint","FunctionStates","Functions","InputState","Invalid","JobCompleted","JobError","Message","OutputState","OverallState","Panic","PriorToSendingJob","Resetting","SendingValue","WaitingForCommand","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","from","from","init","into","into_resettable","serialize","to_string","try_from","try_into","type_id","vzip","args","file","get_manifest","image","stdio","get","Get","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","run","server_connection","try_from","try_into","type_id","vzip","file_read","file_write","FileRead","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","run","server_connection","try_from","try_into","type_id","vzip","FileWrite","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","run","server_connection","try_from","try_into","type_id","vzip","image_buffer","ImageBuffer","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","run","server_connection","try_from","try_into","type_id","vzip","readline","stderr","stdin","stdout","Readline","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","run","server_connection","try_from","try_into","type_id","vzip","Stderr","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","run","server_connection","try_from","try_into","type_id","vzip","Stdin","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","run","server_connection","try_from","try_into","type_id","vzip","Stdout","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","run","server_connection","try_from","try_into","type_id","vzip","Error","ErrorKind","FlowCore","Io","Msg","Result","ResultExt","Runtime","Url","backtrace","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","deref","deref","deref_mut","deref_mut","description","description","description","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","init","init","into","into","iter","iter","kind","kind","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_boxed_chain","with_chain","with_chain"],"q":[[0,"flowrcli"],[18,"flowrcli::cli"],[26,"flowrcli::cli::cli_client"],[51,"flowrcli::cli::cli_debug_client"],[82,"flowrcli::cli::cli_debug_handler"],[117,"flowrcli::cli::cli_submission_handler"],[137,"flowrcli::cli::connections"],[178,"flowrcli::cli::coordinator_message"],[275,"flowrcli::cli::debug_message"],[318,"flowrcli::context"],[323,"flowrcli::context::args"],[324,"flowrcli::context::args::get"],[339,"flowrcli::context::file"],[341,"flowrcli::context::file::file_read"],[356,"flowrcli::context::file::file_write"],[371,"flowrcli::context::image"],[372,"flowrcli::context::image::image_buffer"],[387,"flowrcli::context::stdio"],[391,"flowrcli::context::stdio::readline"],[406,"flowrcli::context::stdio::stderr"],[421,"flowrcli::context::stdio::stdin"],[436,"flowrcli::context::stdio::stdout"],[451,"flowrcli::errors"]],"d":["provides the <code>context functions</code> for interacting with the …","Start the clients that talks to the coordinator","Start a Coordinator in a background thread, then start a …","Start only a client in the calling thread. Discover the …","Include the module that implements the context functions","Create a new <code>Coordinator</code>, pre-load any libraries in native …","Start just a Coordinator in the calling thread.","provides Error that other modules in this crate will …","","","Set environment variable with the args this will not be …","","For the lib provider, libraries maybe installed in …","Parse the command line arguments using clap","Main for flowr binary - call <code>run()</code> and print any error …","Determine the number of threads to use to execute flows","Parse the command line arguments passed onto the flow …","Run <code>flowr</code>. After setting up logging and parsing the …","","","","","message_queue implementation of the communications between …","runtime_messages is the enum for the different messages …","‘debug’ defines structs passed between the Server and …","","","","","","","","","","","","Enter a loop where we receive events as a client and …","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Create a new runtime client","","","","","","","","","","","","","","Main debug client loop where events are received, …","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","Create a new debug client accepting the debug connection","","","","","","","","","","","A debug handler for interacting between the CLI client and …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A SubmissionHandler to allow submitting flows for …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new Submission handler using the connection …","","","","","","","Use this to discover the coordinator service by name","<code>ClientConnection</code> stores information related to the …","CoordinatorConnection store information about the …","Use this to discover the debug service by name","Do NOT WAIT for a message to arrive when performing a …","WAIT for a message to arrive when performing a receive()","","","","","","","","","Try to discover a particular service by name","","","Start a background thread that sends out beacons for …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new connection between client and Coordinator","Create a new Coordinator side of the client/coordinator …","Receive a CoordinatorMessage from the Coordinator","Receive a Message sent from the client to the Coordinator","","","Send a CoordinatorMessage to the Coordinator","Send a Message from the Coordinator to the Client but don…","Send a Message from the Coordinator to the Client and wait …","","","","","","","","","** These messages are used to implement the context …","A Vector of Strings that are the flow’s arguments from …","** This message is just internal to the client and not …","A Message from the a client to the Coordinator","** These messages are used to implement the …","Coordinator is exiting, with a result (OK, or Err)","An Message sent from the runtime server to a runtime_client","Client requests that server enters the ddebugger at the …","An Error occurred in the runtime_client","Contents read from a file","A simple struct with File MetaData for passing from Client …","A flow has stopped executing","** These messages are used to implement the …","A Request to get the arguments for the flow","A Request to read a line of characters from Stdin, with a …","EOF was detected on input reading Stdin using Readline","A Request to read from Stdin","EOF was detected on input reading using Stdin","Invalid - used when deserialization goes wrong","Invalid - used when deserialization goes wrong","A line of text read from Stdin using readline from Stdin …","A Request to write a pixel to an ImageBuffer","A Request to read bytes from a file","A String of contents was sent to stderr","A Request to snd EOF to Stderr","A String read from Stdin on Client, sent to the Server","** These messages are used to implement the context …","A Request to snd EOF to Stdout","A Request to write a series of bytes to a file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Was the Path inspected a directory or not","Was the Path inspected a file or not","","","","","","","","","","","","","","","","","","","","","A breakpoint on a <code>Block</code> between two functions was …","One or more Blocks","A breakpoint on a <code>Value</code> being sent between two functions …","A check has detected that there is a deadlock between …","A Message sent from the debugger to a debug_client","Entering the debugger","An error was detected - includes: A string describing the …","Execution of the flow has ended","Execution of the flow has started","The debugger/run-time is exiting","A breakpoint on a <code>Flow</code> that was busy going idle (and …","The state of a function","A list of all functions","The state of an Input - optional values on it","Invalid - used when deserialization goes wrong","A <code>Job</code> ran to completion by a function","There was an error executing the Job","A message for display to the user of the debug_client","The state of an Output - list of connections","The overall state","A panic occurred executing a <code>Flows</code> <code>Job</code> -  includes the …","The run-time is about to send a <code>Job</code> for execution","The run-time is resetting the status back to the initial …","A value is being sent from the output of one function to …","Debugger is blocked waiting for a command before proceeding","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Return a <code>LibraryManifest</code> for the context functions","","","The <code>get</code> module to get the flows command line arguments","<code>Implementation</code> struct for the <code>get</code> function","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","It holds a reference to the runtime client in order to Get …","","","","","the <code>file_read</code> module to take care of reading files for a …","the <code>file_write</code> module to take care of writing files for a …","<code>Implementation</code> struct for the <code>file_read</code> function","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","It holds a reference to the runtime client in order to get …","","","","","<code>Implementation</code> struct for the <code>file_write</code> function","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","It holds a reference to the runtime client in order to get …","","","","","A module with functions for writing images","<code>Implementation</code> struct for the <code>image_buffer</code> function","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","It holds a reference to the runtime client in order to …","","","","","the <code>readline</code> module to allow a flow to read lines from …","the <code>stderr</code> module to allow a flow to send to the stderr …","the <code>stdin</code> module to allow a flow to get from the stdin …","the <code>stdout</code> module to allow a flow to send to the stdout …","<code>Implementation</code> struct for the <code>readline</code> function","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","It holds a reference to the runtime client in order to …","","","","","<code>Implementation</code> struct for the <code>Stderr</code> function","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","It holds a reference to the runtime client in order to …","","","","","<code>Implementation</code> struct for the <code>Stdin</code> function","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","It holds a reference to the runtime client in order to …","","","","","<code>Implementation</code> struct for the <code>Stdout</code> function","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","It holds a reference to the runtime client in order to …","","","","","The Error type.","The kind of an error.","","","A convenient variant for String.","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","","Returns the backtrace associated with this error.","","Exits a function early with an error","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","Extends the error chain with a new entry.","","","","","","A short description of the error. This method is identical …","","A string describing the error kind.","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Constructs an error from a kind, and generates a backtrace.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterates over the error chain.","","","Returns the kind of the error.","","","","","","","","","","","","","Construct a chained error from another boxed error and a …","","Constructs a chained error from another error and a kind, …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,0,3,8,3,8,3,8,3,8,0,3,8,0,3,8,3,8,3,8,3,8,3,8,3,8,3,8,8,3,8,3,8,3,8,3,8,19,19,19,0,19,18,0,19,19,19,0,18,18,18,18,19,18,19,18,19,19,18,18,18,18,19,18,18,18,18,44,19,18,44,19,18,44,19,18,44,19,18,44,19,18,44,19,18,44,19,18,44,19,44,44,44,44,18,18,44,19,19,18,18,44,19,19,18,44,19,18,44,19,18,19,44,44,18,44,19,18,44,19,18,19,18,44,19,18,44,19,18,44,19,18,44,19,29,29,29,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,60,60,60,0,0,60,60,57,57,0,57,60,57,60,70,57,57,57,60,57,60,57,57,60,57,60,57,57,60,60,57,57,57,57,57,57,57,57,60,60,60,60,57,57,57,60,57,60,57,57,57,57,57,57,57,60,57,60,57,60,57,60,57,60,57,57,57],"f":[0,[[1,2,3,4,5],6],[[7,2,4,1,4],6],[[1,2,4,5],6],0,[[7,2,4,8,8,4],6],[[7,2,4],6],0,[[]],[[]],[[1,9],[[11,[10]]]],[[],6],[[[12,[10]]],[[6,[2]]]],[[],1],[[]],[1,7],[1,[[6,[9]]]],[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[13,13],[[]],[7],[7],0,[7],[[13,3],6],[13],[[13,14],15],[[]],0,[[],7],[[]],[[[11,[10]],[17,[[16,[[11,[10]]]]]],4],13],0,[[13,18],19],[[]],[[],20],[[],20],[[],21],[[]],0,0,0,[[]],[[]],0,[22],[7],[7],[23],[7],0,[[]],[[[11,[24]]]],[[22,25,[26,[[11,[10]]]]],[[26,[27]]]],[[22,7],[[6,[27]]]],[[]],[[],7],[[]],0,[[3,[17,[[16,[[11,[10]]]]]]],22],0,[[[26,[[11,[10]]]]],[[26,[28]]]],[[22,10],6],[[[26,[[11,[10]]]]],[[26,[27]]]],[[[26,[[11,[10]]]]],[[26,[7]]]],[[22,29],[[6,[27]]]],[[],20],[[],20],[[],21],[[]],0,[[30,31]],[[30,[11,[31]]]],[[]],[[]],0,[[30,10]],[30],[30],[7],[7],[7],[30],[30],[[30,7]],[[]],[[30,[12,[24]]]],[[30,24,[11,[32]]]],[[30,23],[[6,[27]]]],[[],7],[[30,33]],[[]],[[30,34,24,[11,[32]]]],[[30,34]],[[30,34]],[[30,10]],[[30,[11,[35]]]],[[30,23,10]],[[30,23]],[[30,25,7,25,36,7,25,25,7]],[30],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],0,[[37,6],6],[7],[7],[7],[[37,23,38],6],[37,6],[[]],[[],7],[[]],[[[17,[[16,[8]]]]],37],[37,[[6,[4]]]],[[],20],[[],20],[[],21],[[]],[37,[[6,[[26,[39]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[5,25],[[6,[10]]]],[7],[7],[[5,25,5],6],[[]],[[]],[[],7],[[],7],[[]],[[]],[25,[[6,[3]]]],[[25,5],[[6,[8]]]],[3,[[6,[[0,[[40,[10]],41]]]]]],[[8,42],[[6,[[0,[[40,[10]],41]]]]]],0,0,[[3,[0,[[43,[10]],41]]],6],[[8,[0,[[43,[10]],41]]],6],[[8,[0,[[43,[10]],41]]],[[6,[[0,[[40,[10]],41]]]]]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[18,18],[44,44],[19,19],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[45,[[20,[18]]]],[45,[[20,[44]]]],[45,[[20,[19]]]],[7],[7],[7],[[44,44],4],[[],4],[[],4],[[],4],[[18,14],15],[[18,14],15],[[44,14],15],[[19,14],15],[[19,14],15],[10,18],[[]],[[]],[[]],[10,19],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],[[46,[10]]]],[[],[[46,[10]]]],0,0,[[18,47],20],[[44,47],20],[[19,47],20],[[]],[[]],[[]],[[],10],[[],10],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[7],[7],[45,[[20,[29]]]],[7],[[29,14],15],[[]],[10,29],[[],7],[[]],[[],[[46,[10]]]],[[29,47],20],[[],10],[[],20],[[],20],[[],21],[[]],0,0,[[[17,[[16,[8]]]]],[[6,[48]]]],0,0,0,0,[[]],[[]],[7],[7],[7],[[]],[[],7],[[]],[[49,[12,[36]]],6],0,[[],20],[[],20],[[],21],[[]],0,0,0,[[]],[[]],[7],[7],[7],[[]],[[],7],[[]],[[50,[12,[36]]],6],0,[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[7],[7],[7],[[]],[[],7],[[]],[[51,[12,[36]]],6],0,[[],20],[[],20],[[],21],[[]],0,0,[[]],[[]],[7],[7],[7],[[]],[[],7],[[]],[[52,[12,[36]]],6],0,[[],20],[[],20],[[],21],[[]],0,0,0,0,0,[[]],[[]],[7],[7],[7],[[]],[[],7],[[]],[[53,[12,[36]]],6],0,[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[7],[7],[7],[[]],[[],7],[[]],[[54,[12,[36]]],6],0,[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[7],[7],[7],[[]],[[],7],[[]],[[55,[12,[36]]],6],0,[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[7],[7],[7],[[]],[[],7],[[]],[[56,[12,[36]]],6],0,[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,[57,[[26,[58]]]],[57,[[26,[58]]]],0,[[]],[[]],[[]],[[]],[59,[[20,[57]]]],[[57,59],57],[[57,59],57],[7],[7],[7],[7],[57,25],[57,25],[60,25],[7],[7],[[57,14],15],[[57,14],15],[[60,14],15],[[60,14],15],[25,57],[61,57],[60,57],[10,57],[62,57],[[]],[63,57],[64,57],[25,60],[[]],[57,60],[10,60],[60,57],[[],57],[[],7],[[],7],[[]],[[]],[57,65],[57,65],[57],[57,60],[66],[57,[[26,[67]]]],[[],10],[[],10],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],[[[68,[67]],[43,[60]]],57],[[[0,[67,69]],43],57],[[[0,[67,69]],[43,[60]]],57]],"c":[],"p":[[3,"ArgMatches"],[3,"Simpath"],[3,"ClientConnection"],[15,"bool"],[15,"u16"],[6,"Result"],[15,"usize"],[3,"CoordinatorConnection"],[3,"Url"],[3,"String"],[3,"Vec"],[15,"slice"],[3,"CliRuntimeClient"],[3,"Formatter"],[6,"Result"],[3,"Mutex"],[3,"Arc"],[4,"CoordinatorMessage"],[4,"ClientMessage"],[4,"Result"],[3,"TypeId"],[3,"CliDebugClient"],[3,"RunState"],[3,"RuntimeFunction"],[15,"str"],[4,"Option"],[4,"DebugCommand"],[4,"BreakpointSpec"],[4,"DebugServerMessage"],[3,"CliDebugHandler"],[3,"Block"],[4,"State"],[3,"Input"],[3,"Job"],[3,"OutputConnection"],[4,"Value"],[3,"CLISubmissionHandler"],[3,"Metrics"],[3,"Submission"],[8,"From"],[8,"Display"],[15,"i32"],[8,"Into"],[3,"FileMetaData"],[8,"Deserializer"],[4,"Resettable"],[8,"Serializer"],[3,"LibraryManifest"],[3,"Get"],[3,"FileRead"],[3,"FileWrite"],[3,"ImageBuffer"],[3,"Readline"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Error"],[3,"Backtrace"],[8,"FnOnce"],[4,"ErrorKind"],[3,"Error"],[3,"Error"],[4,"ParseError"],[3,"Error"],[3,"Iter"],[3,"Demand"],[8,"Error"],[3,"Box"],[8,"Send"],[8,"ResultExt"]]},\
"flowrclib":{"doc":"This is the rust <code>flow</code> Compiler Library. It can be linked …","t":"AAAAAAAADLLMFLMMLLMLLMFLMLLLLMMLLLFENLLLLLLLLFFLLLLAAFFFDENNNNGINLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFFF","n":["compiler","dumper","errors","generator","info","compile","compile_wasm","parser","CompilerTables","borrow","borrow_mut","collapsed_connections","compile","connection_to","connections","context_functions","create_routes_table","default","destination_routes","extract_context","from","functions","get_paths","into","libs","new","recreate_context","serialize","sort_functions","source_files","sources","try_from","try_into","type_id","compile_implementation","LibType","RustLib","borrow","borrow_mut","eq","equivalent","equivalent","extract_context","from","into","parse","parse_metadata","recreate_context","try_from","try_into","type_id","flow_to_dot","functions_to_dot","dump_flow","generate_svgs","dump_functions","Error","ErrorKind","GlobWalk","Io","Msg","Provider","Result","ResultExt","Url","backtrace","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","description","description","description","extract_context","extract_context","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","into","into","iter","iter","kind","kind","provide","recreate_context","recreate_context","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_boxed_chain","with_chain","with_chain","generate","create_manifest","write_flow_manifest","version"],"q":[[0,"flowrclib"],[5,"flowrclib::compiler"],[8,"flowrclib::compiler::compile"],[34,"flowrclib::compiler::compile_wasm"],[35,"flowrclib::compiler::parser"],[51,"flowrclib::dumper"],[53,"flowrclib::dumper::flow_to_dot"],[55,"flowrclib::dumper::functions_to_dot"],[56,"flowrclib::errors"],[119,"flowrclib::generator"],[120,"flowrclib::generator::generate"],[122,"flowrclib::info"]],"d":["reads flow definitions into memory, flattens and connects …","used to output a human readable version of the model and …","contains errors::Error that other modules in this crate …","takes care of generating the flow’s manifest (for later …","provides methods to get information about this version of …","Compile is responsible for connecting outputs to inputs …","<code>compile_wasm</code> has helper functions to compile WASM …","Loader is responsible for parsing flow definitions from …","CompilerTables are built from the flattened and connected …","","","HashMap from “route of the input of a function” –&gt; …","Take a hierarchical flow definition in memory and compile …","Return an optional connection found to a destination input","The set of connections between functions in the compiled …","The set of context functions used by a flow, from their …","Construct two look-up tables that can be used to find the …","","Map from “route of the output of a function” –&gt; …","","Returns the argument unchanged.","The set of functions left in a flow after it has been …","Calculate the paths to the source file of the …","Calls <code>U::from(self)</code>.","The set of libraries used by a flow, from their Urls","Create a new set of <code>CompilerTables</code> for use in compiling a …","","","consistently order the functions so each compile produces …","The list of source files that were used in the flow …","Map of sources of values and what route they are connected …","","","","Compile a function’s implementation to wasm and modify …","<code>LibType</code> describes what format the Flow Library is written …","<code>RustLib</code> indicates that the library is written in rust with …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Load a <code>Flow</code> definition from a <code>Url</code>, recursively loading all …","load library metadata from the given url using the …","","","","","Module to dump a flow, or functions to .dot files of …","Module to output the graph of functions after compilation","Create a .dot format directed graph of a loaded flow …","Generate SVG files from any .dot file found below the …","Create a directed graph named after the flow, showing all …","The Error type.","The kind of an error.","","","A convenient variant for String.","","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","","Returns the backtrace associated with this error.","Exits a function early with an error","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","","Extends the error chain with a new entry.","","A short description of the error. This method is identical …","A string describing the error kind.","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Constructs an error from a kind, and generates a backtrace.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterates over the error chain.","","","Returns the kind of the error.","","","","","","","","","","","","","Construct a chained error from another boxed error and a …","","Constructs a chained error from another error and a kind, …","Module to generate a flow’s manifest from the compiler …","Paths in the manifest are relative to the location of the …","Generate a manifest for the flow in JSON that can be used …","return the version number of the library as a string of …"],"i":[0,0,0,0,0,0,0,0,0,7,7,7,0,7,7,7,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,7,0,0,17,17,17,17,17,17,17,17,17,0,0,17,17,17,17,0,0,0,0,0,0,0,25,25,25,25,0,0,25,21,21,0,21,25,21,25,39,21,21,21,21,25,21,25,21,21,25,25,21,21,21,21,21,21,21,21,25,25,25,25,21,21,21,25,21,21,21,21,21,21,25,21,21,25,21,25,21,25,21,25,21,21,21,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[1,2,3,3,[6,[4,5]]],[[8,[7]]]],[[7,9],[[11,[10]]]],0,0,[7],[[],7],0,[[]],[[]],0,[[2,12],8],[[]],0,[[],7],[[]],[[7,13],14],[7],0,0,[[],14],[[],14],[[],15],[[2,16,2,2,12,3,3,[6,[4,5]]],[[8,[3]]]],0,0,[[]],[[]],[[17,17],3],[[],3],[[],3],[[]],[[]],[[]],[[5,18],[[8,[19]]]],[[5,18],8],[[]],[[],14],[[],14],[[],15],0,0,[[1,2,18],8],[[2,3],8],[[1,7,2],20],0,0,0,0,0,0,0,0,0,[21,[[11,[22]]]],[21,[[11,[22]]]],0,[[]],[[]],[[]],[[]],[23,[[14,[21]]]],[[21,23],21],[[21,23],21],[21,24],[21,24],[25,24],[[]],[[]],[[21,26],27],[[21,26],27],[[25,26],27],[[25,26],27],[24,21],[25,21],[28,21],[29,21],[4,21],[30,21],[31,21],[[]],[4,25],[[]],[21,25],[24,25],[[],21],[25,21],[[]],[[]],[21,32],[21,32],[21],[21,25],[33],[[]],[[]],[21,[[11,[34]]]],[[],4],[[],4],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[[35,[34]],[36,[25]]],21],[[[0,[34,37]],36],21],[[[0,[34,37]],[36,[25]]],21],0,[[1,3,5,7,[6,[4,5]]],[[8,[38]]]],[[1,3,2,7,[6,[4,5]]],[[8,[16]]]],[[],24]],"c":[],"p":[[3,"FlowDefinition"],[3,"Path"],[15,"bool"],[3,"String"],[3,"Url"],[3,"BTreeMap"],[3,"CompilerTables"],[6,"Result"],[3,"Route"],[3,"Connection"],[4,"Option"],[3,"FunctionDefinition"],[8,"Serializer"],[4,"Result"],[3,"TypeId"],[3,"PathBuf"],[4,"LibType"],[8,"Provider"],[4,"Process"],[6,"Result"],[3,"Error"],[3,"Backtrace"],[8,"FnOnce"],[15,"str"],[4,"ErrorKind"],[3,"Formatter"],[6,"Result"],[4,"ParseError"],[3,"Error"],[3,"WalkError"],[3,"Error"],[3,"Iter"],[3,"Demand"],[8,"Error"],[3,"Box"],[8,"Into"],[8,"Send"],[3,"FlowManifest"],[8,"ResultExt"]]},\
"flowrex":{"doc":"<code>flowrex</code> is the minimal executor of flow jobs. It loads a …","t":"FAFFFFFDENNNGINNLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["discover_service","errors","get_matches","main","num_threads","run","start_executors","Error","ErrorKind","FlowCore","Io","Msg","Result","ResultExt","Runtime","Url","backtrace","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","description","description","description","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","into","into","iter","iter","kind","kind","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_boxed_chain","with_chain","with_chain"],"q":[[0,"flowrex"],[7,"flowrex::errors"]],"d":["Try to discover a server offering a particular service by …","We’ll put our errors in an <code>errors</code> module, and other …","","Main for flowrex binary - call <code>run()</code> and print any error …","","","","The Error type.","The kind of an error.","","","A convenient variant for String.","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","","Returns the backtrace associated with this error.","","Exits a function early with an error","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","Extends the error chain with a new entry.","","A short description of the error. This method is identical …","","A string describing the error kind.","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Constructs an error from a kind, and generates a backtrace.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates over the error chain.","Returns the kind of the error.","","","","","","","","","","","","Construct a chained error from another boxed error and a …","","Constructs a chained error from another error and a kind, …"],"i":[0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,12,7,7,0,7,12,7,12,26,7,7,7,7,12,7,7,12,12,7,7,7,7,7,7,7,7,12,12,12,12,7,7,7,12,7,7,7,7,7,7,7,12,7,12,7,12,7,12,7,7,7],"f":[[[1,2],[[4,[3]]]],0,[[],5],[[]],[5,6],[[],4],[6,4],0,0,0,0,0,0,0,0,0,[7,[[9,[8]]]],[7,[[9,[8]]]],0,[[]],[[]],[[]],[[]],[10,[[11,[7]]]],[[7,10],7],[[7,10],7],[7,2],[7,2],[12,2],[[7,13],14],[[7,13],14],[[12,13],14],[[12,13],14],[3,7],[12,7],[[]],[15,7],[2,7],[16,7],[17,7],[18,7],[7,12],[[]],[2,12],[3,12],[[],7],[12,7],[[]],[[]],[7,19],[7,19],[7,12],[7],[20],[7,[[9,[21]]]],[[],3],[[],3],[[],11],[[],11],[[],11],[[],11],[[],22],[[],22],[[[23,[21]],[24,[12]]],7],[[[0,[21,25]],24],7],[[[0,[21,25]],[24,[12]]],7]],"c":[],"p":[[15,"u16"],[15,"str"],[3,"String"],[6,"Result"],[3,"ArgMatches"],[15,"usize"],[3,"Error"],[3,"Backtrace"],[4,"Option"],[8,"FnOnce"],[4,"Result"],[4,"ErrorKind"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Error"],[4,"ParseError"],[3,"Error"],[3,"Iter"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[3,"Box"],[8,"Into"],[8,"Send"],[8,"ResultExt"]]},\
"flowrgui":{"doc":"<code>flowrgui</code> is a GUI flow runner for running <code>flow</code> programs.","t":"NNNDENNDEHNDNNNDNMLLLLLLMMLLLLLLLLLLLLLLLLLLAAMMLLLLLLLLLLLLMLLLLLLLLLLLLALMMMLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLMFMLLMMLLMLMLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLAAFAAADLLLLLLLLLLLLLMLLLLLLAADLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLLMLLLLLLADLLLLLLLLLLLLLMLLLLLLAAAADLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLLMLLLLLLNENNNLLLFLLLLLFFFLLLLFFLLLLLLDENNNNGINNLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAAAAADLLLLLFLLLLLLLLLMLLLLLLLNNNENNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDRHRLLLLLLLFLLLLLLLMLLLLLLLLNNEDNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLDRRLLLMLLLLLLMLLLLLLLLLMLMLLLLLLLLLLLDLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNENNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLLLLLLL","n":["Connected","CoordinatorDisconnected","CoordinatorSent","CoordinatorSettings","CoordinatorState","Disconnected","FlowArgsChanged","FlowrGui","Message","STDOUT_SCROLLABLE_ID","StdioAutoScrollTogglerChanged","SubmissionSettings","SubmitFlow","Submitted","TabSelected","UiSettings","UrlChanged","active_tab","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","auto","auto_scroll_stdout","auto_submit","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command_row","context","coordinator","coordinator_settings","debug_this_flow","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","display_metrics","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","errors","flow_arg_vec","flow_args","flow_manifest_url","flow_settings","flow_url","fmt","from","from","from","from","from","from","gui","gui_coordinator","image_buffers","init","init","init","init","init","init","initial_settings","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","lib_search_path","lib_search_path","main","native_flowstdlib","new","num_threads","num_threads","parallel_jobs_limit","parse_cli_args","process_coordinator_message","running","send","stderr","stdio","stdio_area","stdout","submit","submitted","subscription","title","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","ui_settings","upcast","upcast","upcast","upcast","upcast","upcast","update","view","vzip","vzip","vzip","vzip","vzip","vzip","args","file","get_manifest","image","stdio","get","Get","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_color","into_color_unclamped","run","server_connection","try_from","try_into","try_into_color","type_id","upcast","vzip","file_read","file_write","FileRead","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_color","into_color_unclamped","run","server_connection","try_from","try_into","try_into_color","type_id","upcast","vzip","FileWrite","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_color","into_color_unclamped","run","server_connection","try_from","try_into","try_into_color","type_id","upcast","vzip","image_buffer","ImageBuffer","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_color","into_color_unclamped","run","server_connection","try_from","try_into","try_into_color","type_id","upcast","vzip","readline","stderr","stdin","stdout","Readline","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_color","into_color_unclamped","run","server_connection","try_from","try_into","try_into_color","type_id","upcast","vzip","Stderr","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_color","into_color_unclamped","run","server_connection","try_from","try_into","try_into_color","type_id","upcast","vzip","Stdin","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_color","into_color_unclamped","run","server_connection","try_from","try_into","try_into_color","type_id","upcast","vzip","Stdout","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_color","into_color_unclamped","run","server_connection","try_from","try_into","try_into_color","type_id","upcast","vzip","Connected","CoordinatorState","Disconnected","FlowSubmitted","None","adapt_into_using","borrow","borrow_mut","coordinator","deref","deref_mut","downcast","drop","from","get_bind_addresses","get_connect_addresses","get_four_ports","init","into","into_color","into_color_unclamped","start","subscribe","try_from","try_into","try_into_color","type_id","upcast","vzip","Error","ErrorKind","FlowCore","Iced","Io","Msg","Result","ResultExt","Runtime","Url","adapt_into_using","adapt_into_using","backtrace","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","deref","deref","deref_mut","deref_mut","description","description","description","downcast","downcast","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","init","init","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","iter","iter","kind","kind","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","upcast","upcast","vzip","vzip","with_boxed_chain","with_chain","with_chain","client_connection","client_message","coordinator_connection","coordinator_message","debug_client","debug_handler","debug_message","submission_handler","test_helper","ClientConnection","adapt_into_using","borrow","borrow_mut","deref","deref_mut","discover_service","downcast","drop","from","init","into","into_color","into_color_unclamped","new","receive","requester","send","try_from","try_into","try_into_color","type_id","upcast","vzip","Ack","Args","ClientExiting","ClientMessage","ClientSubmission","EnterDebugger","Error","FileContents","GetLineEof","GetStdinEof","Invalid","Line","Stdin","adapt_into_using","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","downcast","drop","fmt","fmt","from","from","init","into","into_color","into_color_unclamped","into_resettable","serialize","to_owned","to_string","try_from","try_into","try_into_color","type_id","upcast","vzip","COORDINATOR_SERVICE_NAME","CoordinatorConnection","DEBUG_SERVICE_NAME","DONT_WAIT","WAIT","adapt_into_using","borrow","borrow_mut","deref","deref_mut","downcast","drop","enable_service_discovery","from","init","into","into_color","into_color_unclamped","new","receive","responder","send","send_and_receive_response","try_from","try_into","try_into_color","type_id","upcast","vzip","Connected","CoordinatorExiting","CoordinatorMessage","FileMetaData","FlowEnd","FlowStart","GetArgs","GetLine","GetStdin","Invalid","PixelWrite","Read","Stderr","StderrEof","Stdout","StdoutEof","Write","adapt_into_using","adapt_into_using","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","init","init","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","into_resettable","is_dir","is_file","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","upcast","upcast","vzip","vzip","DebugClient","FLOWR_HISTORY_FILENAME","HELP_STRING","adapt_into_using","borrow","borrow_mut","connection","debug_client_loop","deref","deref_mut","display_state","downcast","drop","editor","from","function_list","get_server_command","get_user_command","help","init","into","into_color","into_color_unclamped","last_command","new","override_args","parse_breakpoint_spec","parse_command","parse_inspect_spec","parse_optional_int","process_server_message","try_from","try_into","try_into_color","type_id","upcast","vzip","CliDebugHandler","adapt_into_using","block_breakpoint","blocks","borrow","borrow_mut","debug_server_connection","debugger_error","debugger_exiting","debugger_resetting","deref","deref_mut","downcast","drop","execution_ended","execution_starting","flow_unblock_breakpoint","from","function_list","function_states","get_command","init","input","into","into_color","into_color_unclamped","job_breakpoint","job_completed","job_error","message","outputs","panic","run_state","send_breakpoint","start","try_from","try_into","try_into_color","type_id","upcast","vzip","BlockBreakpoint","BlockState","DataBreakpoint","Deadlock","DebugServerMessage","EnteringDebugger","Error","ExecutionEnded","ExecutionStarted","ExitingDebugger","FlowUnblockBreakpoint","FunctionStates","Functions","InputState","Invalid","JobCompleted","JobError","Message","OutputState","OverallState","Panic","PriorToSendingJob","Resetting","SendingValue","WaitingForCommand","adapt_into_using","borrow","borrow_mut","deref","deref_mut","deserialize","downcast","drop","fmt","from","from","init","into","into_color","into_color_unclamped","into_resettable","serialize","to_string","try_from","try_into","try_into_color","type_id","upcast","vzip","CLISubmissionHandler","adapt_into_using","borrow","borrow_mut","coordinator_connection","coordinator_is_exiting","deref","deref_mut","downcast","drop","flow_execution_ended","flow_execution_starting","from","init","into","into_color","into_color_unclamped","new","should_enter_debugger","try_from","try_into","try_into_color","type_id","upcast","vzip","wait_for_submission"],"q":[[0,"flowrgui"],[175,"flowrgui::context"],[180,"flowrgui::context::args"],[181,"flowrgui::context::args::get"],[202,"flowrgui::context::file"],[204,"flowrgui::context::file::file_read"],[225,"flowrgui::context::file::file_write"],[246,"flowrgui::context::image"],[247,"flowrgui::context::image::image_buffer"],[268,"flowrgui::context::stdio"],[272,"flowrgui::context::stdio::readline"],[293,"flowrgui::context::stdio::stderr"],[314,"flowrgui::context::stdio::stdin"],[335,"flowrgui::context::stdio::stdout"],[356,"flowrgui::coordinator"],[385,"flowrgui::errors"],[468,"flowrgui::gui"],[477,"flowrgui::gui::client_connection"],[501,"flowrgui::gui::client_message"],[542,"flowrgui::gui::coordinator_connection"],[571,"flowrgui::gui::coordinator_message"],[646,"flowrgui::gui::debug_client"],[683,"flowrgui::gui::debug_handler"],[724,"flowrgui::gui::debug_message"],[773,"flowrgui::gui::submission_handler"]],"d":["","We lost contact with the coordinator","The Coordinator sent to the client/App a Coordinator …","CoordinatorSettings captures the parameters to be used …","","","The arguments to send to the flow when executed have been …","","Message enum captures all the types of messages that are …","","The toggle to auto-scroll to bottom of STDIO has changed","","The UI has requested to submit the flow to the Coordinator …","ddd","A different tab of stdio has been selected","","The Url of the flow to run has been edited by the UI","","","","","","","","","","","","","","","","","","","","","","","","","","","","Include the module that implements the context functions","module that runs a coordinator in background","","","","","","","","","","","","","","","","","","","","","","","","","","","","provides Error that other modules in this crate will …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","provides the <code>context functions</code> for interacting with the …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The path to search for libs when a lib reference is found","Main for flowrgui binary - call <code>run()</code> and print any error …","Should the coordinator use the natively linked flowstdlib …","Create the FlowIde app and populate fields with options …","","How many executor threads should be used","","Parse the command line arguments using clap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a <code>LibraryManifest</code> for the context functions","","","The <code>get</code> module to get the flows command line arguments","<code>Implementation</code> struct for the <code>get</code> function","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","It holds a reference to the runtime client in order to Get …","","","","","","","the <code>file_read</code> module to take care of reading files for a …","the <code>file_write</code> module to take care of writing files for a …","<code>Implementation</code> struct for the <code>file_read</code> function","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","It holds a reference to the runtime client in order to get …","","","","","","","<code>Implementation</code> struct for the <code>file_write</code> function","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","It holds a reference to the runtime client in order to get …","","","","","","","A module with functions for writing images","<code>Implementation</code> struct for the <code>image_buffer</code> function","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","It holds a reference to the runtime client in order to …","","","","","","","the <code>readline</code> module to allow a flow to read lines from …","the <code>stderr</code> module to allow a flow to send to the stderr …","the <code>stdin</code> module to allow a flow to get from the stdin …","the <code>stdout</code> module to allow a flow to send to the stdout …","<code>Implementation</code> struct for the <code>readline</code> function","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","It holds a reference to the runtime client in order to …","","","","","","","<code>Implementation</code> struct for the <code>Stderr</code> function","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","It holds a reference to the runtime client in order to …","","","","","","","<code>Implementation</code> struct for the <code>Stdin</code> function","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","It holds a reference to the runtime client in order to …","","","","","","","<code>Implementation</code> struct for the <code>Stdout</code> function","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","It holds a reference to the runtime client in order to …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","The Error type.","The kind of an error.","","","","A convenient variant for String.","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","","","","","Returns the backtrace associated with this error.","Exits a function early with an error","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","","Extends the error chain with a new entry.","","","","","A short description of the error. This method is identical …","","A string describing the error kind.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Constructs an error from a kind, and generates a backtrace.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Iterates over the error chain.","Returns the kind of the error.","","","","","","","","","","","","","","","","","","Construct a chained error from another boxed error and a …","Constructs a chained error from another error and a kind, …","","","","","","","","","","","<code>ClientConnection</code> stores information related to the …","","","","","","Try to discover a particular service by name","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Create a new connection between client and Coordinator","Receive a CoordinatorMessage from the Coordinator","","Send a ClientMessage to the Coordinator","","","","","","","** These messages are used to implement the context …","A Vector of Strings that are the flow’s arguments from …","** This message is just internal to the client and not …","A Message from the a client to the Coordinator","** These messages are used to implement the …","Client requests that server enters the ddebugger at the …","An Error occurred in the runtime_client","Contents read from a file","EOF was detected on input reading Stdin using Readline","EOF was detected on input reading using Stdin","Invalid - used when deserialization goes wrong","A line of text read from Stdin using readline from Stdin …","A String read from Stdin on Client, sent to the Server","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Use this to discover the coordinator service by name","CoordinatorConnection store information about the …","Use this to discover the debug service by name","Do NOT WAIT for a message to arrive when performing a …","WAIT for a message to arrive when performing a receive()","","","","","","","","Start a background thread that sends out beacons for …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Create a new Coordinator side of the client/coordinator …","Receive a Message sent from the client to the Coordinator","","Send a Message from the Coordinator to the Client but don…","Send a Message from the Coordinator to the Client and wait …","","","","","","","** These messages are used to communicate to the app the …","Coordinator is exiting, with a result (OK, or Err)","An Message sent from the runtime server to a runtime_client","A simple struct with File MetaData for passing from Client …","A flow has stopped executing","** These messages are used to implement the …","A Request to get the arguments for the flow","A Request to read a line of characters from Stdin, with a …","A Request to read from Stdin","Invalid - used when deserialization goes wrong","A Request to write a pixel to an ImageBuffer","A Request to read bytes from a file","A String of contents was sent to stderr","A Request to snd EOF to Stderr","** These messages are used to implement the context …","A Request to snd EOF to Stdout","A Request to write a series of bytes to a file","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Was the Path inspected a directory or not","Was the Path inspected a file or not","","","","","","","","","","","","","","","","","","","","","","","","","Main debug client loop where events are received, …","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","Create a new debug client accepting the debug connection","","","","","","","","","","","","","A debug handler for interacting between the CLI client and …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","A breakpoint on a <code>Block</code> between two functions was …","One or more Blocks","A breakpoint on a <code>Value</code> being sent between two functions …","A check has detected that there is a deadlock between …","A Message sent from the debugger to a debug_client","Entering the debugger","An error was detected - includes: A string describing the …","Execution of the flow has ended","Execution of the flow has started","The debugger/run-time is exiting","A breakpoint on a <code>Flow</code> that was busy going idle (and …","The state of a function","A list of all functions","The state of an Input - optional values on it","Invalid - used when deserialization goes wrong","A <code>Job</code> ran to completion by a function","There was an error executing the Job","A message for display to the user of the debug_client","The state of an Output - list of connections","The overall state","A panic occurred executing a <code>Flows</code> <code>Job</code> -  includes the …","The run-time is about to send a <code>Job</code> for execution","The run-time is resetting the status back to the initial …","A value is being sent from the output of one function to …","Debugger is blocked waiting for a command before proceeding","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A SubmissionHandler to allow submitting flows for …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Create a new Submission handler using the connection …","","","","","","","",""],"i":[81,2,2,0,0,81,2,0,0,0,2,0,2,2,2,0,2,4,81,82,83,4,2,3,83,4,4,81,82,83,4,2,3,81,82,83,4,2,3,2,3,2,3,4,0,0,4,82,81,82,83,4,2,3,81,82,83,4,2,3,82,81,82,83,4,2,3,81,82,83,4,2,3,0,4,82,82,4,4,2,81,82,83,4,2,3,0,4,4,81,82,83,4,2,3,4,81,82,83,4,2,3,81,82,83,4,2,3,81,82,83,4,2,3,4,3,0,3,4,4,3,82,4,4,4,4,4,4,4,4,4,4,4,4,2,3,81,82,83,4,2,3,81,82,83,4,2,3,81,82,83,4,2,3,81,82,83,4,2,3,4,81,82,83,4,2,3,4,4,81,82,83,4,2,3,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,84,0,84,84,84,84,84,84,0,84,84,84,84,84,0,0,0,84,84,84,84,0,0,84,84,84,84,84,84,0,0,45,45,45,45,0,0,45,45,15,45,15,15,0,15,45,15,45,85,15,15,15,45,15,45,15,15,45,15,45,15,45,15,15,45,45,15,15,15,15,15,15,15,15,15,45,45,45,45,15,15,15,45,15,45,15,45,15,45,15,15,15,15,15,15,15,45,15,45,15,45,15,45,15,45,15,45,15,45,15,15,15,0,0,0,0,0,0,0,0,0,0,58,58,58,58,58,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,21,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,29,29,29,29,29,29,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,19,19,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,65,19,65,19,65,19,65,19,65,19,65,19,65,19,65,19,65,19,65,65,65,65,65,19,19,65,19,19,65,19,65,19,65,19,65,19,65,19,65,65,19,65,19,65,19,19,65,19,65,19,65,19,65,19,65,19,65,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,71,71,71,71,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[4,[[5,[2]]]],0,0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],0,[4,[[8,[7]]]],0,0,0,[4,[[10,[9]]]],[[2,11],12],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[7]]],[[16,[14,15]]]],0,[[],17],0,[[]],[18,6],0,0,[[],18],[[4,19],[[20,[2]]]],0,[[4,21]],0,[4,[[5,[2]]]],[[[13,[7]],22],[[5,[2]]]],0,[[[23,[21]],9,[24,[6]],25]],0,[4,[[26,[2]]]],[4,7],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],[[16,[27]]]],[[],[[16,[27]]]],[[],[[16,[27]]]],[[],[[16,[27]]]],[[],[[16,[27]]]],[[],[[16,[27]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[4,2],[[20,[2]]]],[4,[[5,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[31,[[30,[29]]]]],[[10,[32]]]],0,0,0,0,[1],[[]],[[]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[[33,[13,[34]]],10],0,[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,0,[1],[[]],[[]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[[35,[13,[34]]],10],0,[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,[1],[[]],[[]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[[36,[13,[34]]],10],0,[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,[1],[[]],[[]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[[37,[13,[34]]],10],0,[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,0,0,0,[1],[[]],[[]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[[38,[13,[34]]],10],0,[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,[1],[[]],[[]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[[39,[13,[34]]],10],0,[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,[1],[[]],[[]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[[40,[13,[34]]],10],0,[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,[1],[[]],[[]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[[41,[13,[34]]],10],0,[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,0,0,0,[1],[[]],[[]],[[3,29,29,25],[[16,[15]]]],[6],[6],[[]],[6],[[]],[[]],[[]],[[],[[16,[15]]]],[[],6],[[]],[[]],[[]],[3],[3,[[26,[19]]]],[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[15,[[24,[42]]]],[15,[[24,[42]]]],0,[[]],[[]],[[]],[[]],[43,[[16,[15]]]],[[15,43],15],[[15,43],15],[6],[6],[6],[6],[15,44],[15,44],[45,44],[[]],[[]],[6],[6],[[15,11],12],[[15,11],12],[[45,11],12],[[45,11],12],[7,15],[46,15],[47,15],[48,15],[49,15],[[]],[44,15],[50,15],[45,15],[15,45],[7,45],[[]],[44,45],[45,15],[[],15],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[15,51],[15,51],[15,45],[15],[52],[15,[[24,[53]]]],[[],7],[[],7],[[],16],[[],16],[[],16],[[],16],[[],[[16,[27]]]],[[],[[16,[27]]]],[[],28],[[],28],[[],24],[[],24],[[]],[[]],[[[54,[53]],[55,[45]]],15],[[[0,[53,56]],[55,[45]]],15],[[[0,[53,56]],55],15],0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[6],[6],[[57,44],[[10,[7]]]],[[]],[6],[[]],[[],6],[[]],[[]],[[]],[44,[[10,[58]]]],[58,[[10,[[0,[[59,[7]],60]]]]]],0,[[58,[0,[[55,[7]],60]]],10],[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[21,21],[[]],[6],[6],[61,[[16,[21]]]],[[]],[6],[[21,11],12],[[21,11],12],[[]],[7,21],[[],6],[[]],[[]],[[]],[[],[[62,[7]]]],[[21,63],16],[[]],[[],7],[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,0,0,0,[1],[[]],[[]],[6],[6],[[]],[6],[[57,44,57],10],[[]],[[],6],[[]],[[]],[[]],[[44,57],[[10,[29]]]],[[29,64],[[10,[[0,[[59,[7]],60]]]]]],0,[[29,[0,[[55,[7]],60]]],10],[[29,[0,[[55,[7]],60]]],[[10,[[0,[[59,[7]],60]]]]]],[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[19,19],[65,65],[[]],[[]],[6],[6],[6],[6],[61,[[16,[19]]]],[61,[[16,[65]]]],[[]],[[]],[6],[6],[[65,65],25],[[],25],[[],25],[[],25],[[19,11],12],[[19,11],12],[[65,11],12],[[]],[7,19],[[]],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[62,[7]]]],0,0,[[19,63],16],[[65,63],16],[[]],[[]],[[],7],[[],16],[[],16],[[],16],[[],16],[[],[[16,[27]]]],[[],[[16,[27]]]],[[],28],[[],28],[[],24],[[],24],[[]],[[]],0,0,0,[1],[[]],[[]],0,[66],[6],[6],[67],[[]],[6],0,[[]],[[[8,[68]]]],[[66,44,[24,[[8,[7]]]]],[[24,[69]]]],[[66,6],[[10,[69]]]],[[]],[[],6],[[]],[[]],[[]],0,[[58,[31,[[30,[[8,[7]]]]]]],66],0,[[[24,[[8,[7]]]]],[[24,[70]]]],[[66,7],10],[[[24,[[8,[7]]]]],[[24,[69]]]],[[[24,[[8,[7]]]]],[[24,[6]]]],[[66,71],[[10,[69]]]],[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,[1],[[72,73]],[[72,[8,[73]]]],[[]],[[]],0,[[72,7]],[72],[72],[6],[6],[[]],[6],[72],[72],[[72,6]],[[]],[[72,[13,[68]]]],[[72,68,[8,[74]]]],[[72,67],[[10,[69]]]],[[],6],[[72,75]],[[]],[[]],[[]],[[72,76,68,[8,[74]]]],[[72,76]],[[72,76]],[[72,7]],[[72,[8,[77]]]],[[72,67,7]],[[72,67]],[[72,44,6,44,34,6,44,44,6]],[72],[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[6],[6],[61,[[16,[71]]]],[[]],[6],[[71,11],12],[7,71],[[]],[[],6],[[]],[[]],[[]],[[],[[62,[7]]]],[[71,63],16],[[],7],[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],0,[1],[[]],[[]],0,[[78,10],10],[6],[6],[[]],[6],[[78,67,79],10],[78,10],[[]],[[],6],[[]],[[]],[[]],[[[31,[[30,[29]]]]],78],[78,[[10,[25]]]],[[],16],[[],16],[[],[[16,[27]]]],[[],28],[[],24],[[]],[78,[[10,[[24,[80]]]]]]],"c":[],"p":[[8,"TransformMatrix"],[4,"Message"],[3,"CoordinatorSettings"],[3,"FlowrGui"],[6,"Element"],[15,"usize"],[3,"String"],[3,"Vec"],[3,"Url"],[6,"Result"],[3,"Formatter"],[6,"Result"],[15,"slice"],[3,"Simpath"],[3,"Error"],[4,"Result"],[6,"Result"],[3,"ArgMatches"],[4,"CoordinatorMessage"],[3,"Command"],[4,"ClientMessage"],[3,"Id"],[3,"Sender"],[4,"Option"],[15,"bool"],[6,"Subscription"],[3,"OutOfBounds"],[3,"TypeId"],[3,"CoordinatorConnection"],[3,"Mutex"],[3,"Arc"],[3,"LibraryManifest"],[3,"Get"],[4,"Value"],[3,"FileRead"],[3,"FileWrite"],[3,"ImageBuffer"],[3,"Readline"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Backtrace"],[8,"FnOnce"],[15,"str"],[4,"ErrorKind"],[3,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[4,"ParseError"],[3,"Iter"],[3,"Demand"],[8,"Error"],[3,"Box"],[8,"Into"],[8,"Send"],[15,"u16"],[3,"ClientConnection"],[8,"From"],[8,"Display"],[8,"Deserializer"],[4,"Resettable"],[8,"Serializer"],[15,"i32"],[3,"FileMetaData"],[3,"DebugClient"],[3,"RunState"],[3,"RuntimeFunction"],[4,"DebugCommand"],[4,"BreakpointSpec"],[4,"DebugServerMessage"],[3,"CliDebugHandler"],[3,"Block"],[4,"State"],[3,"Input"],[3,"Job"],[3,"OutputConnection"],[3,"CLISubmissionHandler"],[3,"Metrics"],[3,"Submission"],[4,"CoordinatorState"],[3,"SubmissionSettings"],[3,"UiSettings"],[4,"CoordinatorState"],[8,"ResultExt"]]},\
"flowrlib":{"doc":"<code>flowrlib</code> is the runtime library for flow execution. This …","t":"AAAAAAAAAAAADMMMMMLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLNNNNENNENNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKKKKKKKKKKKKKKKKKKKKKDLLLLLLLLLLDENNNGINNLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLFDDLLLLLLLLMLLMLLLLMMMLLMMMLLLLLLLLLLLLNNNDNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRIKKKKK","n":["block","coordinator","debug_command","debugger_handler","dispatcher","errors","executor","info","job","run_state","services","submission_handler","Block","blocked_flow_id","blocked_function_id","blocking_flow_id","blocking_function_id","blocking_io_number","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","get_hash","hash","into","new","serialize","to_owned","to_string","try_from","try_into","type_id","Coordinator","borrow","borrow_mut","execute_flow","from","into","new","submission_loop","try_from","try_into","type_id","Ack","All","Block","Breakpoint","BreakpointSpec","Continue","DebugClientStarting","DebugCommand","Delete","Error","ExitDebugger","FunctionList","Input","Inspect","InspectBlock","InspectFunction","InspectInput","InspectOutput","Invalid","List","Modify","Numeric","Output","RunReset","Step","Validate","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","serialize","serialize","to_string","try_from","try_from","try_into","try_into","type_id","type_id","DebuggerHandler","block_breakpoint","blocks","debugger_error","debugger_exiting","debugger_resetting","execution_ended","execution_starting","flow_unblock_breakpoint","function_list","function_states","get_command","input","job_breakpoint","job_completed","job_error","message","outputs","panic","run_state","send_breakpoint","start","Dispatcher","borrow","borrow_mut","drop","from","into","new","send_done","try_from","try_into","type_id","Error","ErrorKind","FlowrCore","Io","Msg","Result","ResultExt","Serde","Url","backtrace","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","description","description","description","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_kind","into","into","iter","iter","kind","kind","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_boxed_chain","with_chain","with_chain","Executor","add_lib","borrow","borrow_mut","from","into","new","start","try_from","try_into","type_id","wait","version","Job","JobPayload","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connections","deserialize","deserialize","flow_id","fmt","fmt","from","from","function_id","implementation_url","input_set","into","into","job_id","payload","result","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Blocked","Completed","Ready","RunState","Running","State","Waiting","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get_blocked","get_blocks","get_busy_flows","get_completed","get_flow_blocks","get_function","get_function_states","get_input_blockers","get_number_of_jobs_created","get_output_blockers","get_running","into","into","new","num_functions","number_jobs_ready","number_jobs_running","serialize","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","CONTROL_SERVICE_NAME","JOB_QUEUES_DISCOVERY_PORT","JOB_SERVICE_NAME","RESULTS_JOB_SERVICE_NAME","SubmissionHandler","coordinator_is_exiting","flow_execution_ended","flow_execution_starting","should_enter_debugger","wait_for_submission"],"q":[[0,"flowrlib"],[12,"flowrlib::block"],[40,"flowrlib::coordinator"],[51,"flowrlib::debug_command"],[108,"flowrlib::debugger_handler"],[130,"flowrlib::dispatcher"],[141,"flowrlib::errors"],[200,"flowrlib::executor"],[212,"flowrlib::info"],[213,"flowrlib::job"],[251,"flowrlib::run_state"],[301,"flowrlib::services"],[305,"flowrlib::submission_handler"]],"d":["Provides Block that represents a block imposed on a …","Provides Coordinator responsible for coordinating the …","Provides the DebugCommand enum for commands from debug …","The DebuggerHandler trait defines methods a a client must …","Provides Dispatcher used by the Coordinator to dispatch …","Holds all Error types, and other modules in this crate …","Provides Executor that receives jobs for execution, …","Provides methods to get information about this library","Provides Job that holds jobs before and after their …","Provides RunState that tracks the current runtime state, …","Provides well-known service names used across multiple …","The SubmissionHandler trait defines  methods a client must …","blocks: (blocking_id, blocking_io_number, blocked_id, …","The id of the flow where the blocked function resides","The id of the function that would like to send to the …","The id of the flow where the blocking function reside","The id of the blocking function (destination with input …","The number of the io in the blocking function that is full …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Create a new <code>Block</code>","","","","","","","The <code>Coordinator</code> is responsible for coordinating the …","","","Execute a flow by looping while there are jobs to be …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>coordinator</code> with <code>num_threads</code> local executor …","Enter a loop - waiting for a submission from the client, …","","","","Acknowledge event processed correctly","All existing breakpoints","A description of a “block” (when one function is …","Set a <code>breakpoint</code> - with an optional parameter","Types of <code>Params</code> used in communications between the …","<code>continue</code> execution of the flow","Debug client is starting","A Command sent by the debug_client to the debugger","<code>delete</code> an existing breakpoint - with an optional parameter","An error on the client side","<code>exit</code> the debugger and runtime","List of all functions","A descriptor for the <code>Inout</code> of a <code>Function</code> was specified","Inspect overall state","Inspect a Block (optional source function_id, optional …","<code>inspect</code> a function","Inspect an Input (function_id, input_number)","Inspect an Output (function_id, sub-path)","Invalid - used when deserialization goes wrong","<code>list</code> existing breakpoints","<code>modify</code> a debugger or runtime state value e.g. jobs=1 to …","A positive integer was specified - could be a function or …","A descriptor for the <code>Output</code> of a <code>Function</code> was specified","<code>reset</code> flow execution back to the initial state, or run the …","<code>step</code> forward in flow execution by executing one (default) …","<code>validate</code> the current state","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Programs that wish to offer a debugger user interface …","A breakpoint set on creation of a <code>Block</code> matching <code>block</code> has …","returns a set of blocks","An error occurred in the debugger","the debugger is exiting","The debugger is resetting the runtime state","Execution of the flow fn execution_ended(&amp;mut self, state: …","execution of the flow is starting","A breakpoint set on the unblocking of a flow has been hit","lists all functions","returns the state of a function","Get a command for the debugger to perform","returns an inputs state","a breakpoint has been hit on a Job being created","A specific job completed","A job error occurred during execution of the flow","a string message from the Debugger","returns an output’s connections","a panic occurred during execution","returns the global run state","A breakpoint on sending a value from a specific function …","Start the debugger - which swallows the first message to …","<code>Dispatcher</code> structure holds information required to send …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>Dispatcher</code> of <code>Job</code>s using three addresses of …","Send a “DONE”“ message to subscribed executors on …","","","","The Error type.","The kind of an error.","","","A convenient variant for String.","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","","Returns the backtrace associated with this error.","","Exits a function early with an error","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","Extends the error chain with a new entry.","","A short description of the error. This method is identical …","","A string describing the error kind.","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","Constructs an error from a kind, and generates a backtrace.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates over the error chain.","","Returns the kind of the error.","","","","","","","","","","","Construct a chained error from another boxed error and a …","Constructs a chained error from another error and a kind, …","","An <code>Executor</code> struct is used to receive jobs, execute them …","Add a library manifest so that it can be used later on to …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new executor that receives jobs, executes them …","Start executing jobs, specifying:","","","","Wait until all threads end","Return the version number of the <code>flowrlib</code> library","A <code>Job</code> contains the information necessary to manage the …","Conatins the minimum amount of information required to …","","","","","","","","","The destinations (other function’s inputs) where any …","","","The <code>id</code> of the nested flow (from root flow on down) there …","","","Returns the argument unchanged.","Returns the argument unchanged.","The <code>id</code> of the function in the <code>RunState</code>’s list of …","The url of the implementation to be run for this job","The set of input values to be used by the function when …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Each <code>Job</code> has a unique id that increments as jobs are …","the payload required to execute the job","The result of the execution with the job_id, the optional …","","","","","","","","","","","","","Blocked   - Function is in Blocked state when there is at …","Completed - Function has indicated that it no longer wants …","Ready     - Function will be in Ready state when all of it…","<code>RunState</code> is a structure that maintains the state of all …","Running   - Function is in Running state when it has been …","<code>State</code> represents the possible states it is possible for a …","Waiting   - Function is in Blocked state when at least one …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the list of blocked function ids","Get the HashSet of blocked function ids","Return the list of busy flows and what functions in each …","Get the list of completed function ids","Return the list of pending unblocks","Get a reference to the function with <code>id</code>","Return the states a function is in","An input blocker is another function that is the only …","get the number of jobs created to date in the flow’s …","Get the set of (blocking_function_id, function’s IO …","Get a Set (job_id) of the currently running jobs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>RunState</code> struct from the list of functions …","Return how many functions exist in this flow being executed","Return how many jobs are ready to be run, but not running …","Return how many jobs are currently running","","","","","","","","","","","<code>CONTROL_SERVICE_NAME</code> is a control PUB/SUB socket used to …","This is the port for announcing and discovering the job …","<code>JOB_SERVICE_NAME</code> can be used to discover the queue serving …","<code>RESULTS_JOB_SERVICE_NAME</code> can be used to discover the queue …","Programs that wish to submit a flow for execution via a …","The Coordinator is about to exit","The Coordinator informs the submitter that the execution …","Execution of the flow is starting","The Coordinator executing the flow periodically will check …","The Coordinator wait for a Submission to be sent for …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,16,16,16,16,16,16,16,16,16,16,23,22,22,23,0,23,23,0,23,23,23,23,22,23,23,23,23,23,23,23,23,22,22,23,23,23,22,23,22,23,22,23,22,23,22,22,22,23,23,23,22,23,23,22,23,23,22,23,22,23,23,22,23,22,23,22,23,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,19,19,19,19,19,19,19,19,19,19,0,0,38,38,38,0,0,38,38,34,34,0,34,38,34,38,59,34,34,34,34,38,34,34,38,38,34,34,34,34,34,34,34,34,38,38,38,38,34,34,34,38,34,34,34,34,34,34,34,38,34,38,34,38,34,38,34,34,34,0,49,49,49,49,49,49,49,49,49,49,49,0,0,0,54,30,54,30,54,30,54,30,30,54,30,30,54,30,54,30,30,54,54,54,30,54,30,30,54,30,54,30,54,30,54,30,54,30,54,30,27,27,27,0,27,0,27,27,28,27,28,28,28,27,28,27,27,27,27,27,28,27,28,28,28,28,28,28,28,28,28,28,28,28,27,28,28,28,28,28,27,28,28,28,27,28,27,28,27,28,0,0,0,0,0,20,20,20,20,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[2,[[3,[1]]]],[[1,1],4],[[],4],[[],4],[[],4],[[1,5],6],[[1,5],6],[[]],[[[0,[7,8]],9],10],[[1,11]],[[]],[[12,12,12,12,12],1],[[1,13],3],[[]],[[],14],[[],3],[[],3],[[],15],0,[[]],[[]],[[16,17],18],[[]],[[]],[[19,20,21],[[18,[16]]]],[[16,4],18],[[],3],[[],3],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[2,[[3,[22]]]],[2,[[3,[23]]]],[[22,22],4],[[23,23],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[22,5],6],[[23,5],6],[[23,5],6],[[]],[14,23],[[]],[[]],[[]],[[22,13],3],[[23,13],3],[[],14],[[],3],[[],3],[[],3],[[],3],[[],15],[[],15],0,[1],[[[24,[1]]]],[14],[[]],[[]],[[]],[[]],[12],[[[26,[25]]]],[[25,[24,[27]]]],[28,[[18,[23]]]],[29],[[30,25,[24,[27]]]],[30],[30],[14],[[[24,[31]]]],[[28,14]],[28],[[32,12,32,33,12,32,32,12]],[[]],0,[[]],[[]],[19],[[]],[[]],[[],[[18,[19]]]],[19,18],[[],3],[[],3],[[],15],0,0,0,0,0,0,0,0,0,[34,[[36,[35]]]],[34,[[36,[35]]]],0,[[]],[[]],[[]],[[]],[37,[[3,[34]]]],[[34,37],34],[[34,37],34],[34,32],[34,32],[38,32],[[34,5],6],[[34,5],6],[[38,5],6],[[38,5],6],[[]],[39,34],[32,34],[40,34],[14,34],[41,34],[38,34],[42,34],[[]],[34,38],[32,38],[14,38],[38,34],[[],34],[[]],[[]],[34,43],[34,43],[34],[34,38],[44],[34,[[36,[45]]]],[[],14],[[],14],[[],3],[[],3],[[],3],[[],3],[[],15],[[],15],[[[46,[45]],[47,[38]]],34],[[[0,[45,48]],[47,[38]]],34],[[[0,[45,48]],47],34],0,[[49,50,51],18],[[]],[[]],[[]],[[]],[[],[[18,[49]]]],[[49,[53,[52]],12,32,32,32]],[[],3],[[],3],[[],15],[49],[[],32],0,0,[[]],[[]],[[]],[[]],[54,54],[30,30],[[]],[[]],0,[2,[[3,[54]]]],[2,[[3,[30]]]],0,[[54,5],6],[[30,5],6],[[]],[[]],0,0,0,[[]],[[]],0,0,0,[[54,13],3],[[30,13],3],[[]],[[]],[[],14],[[],14],[[],3],[[],3],[[],3],[[],3],[[],15],[[],15],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[28,28],[[]],[2,[[3,[27]]]],[2,[[3,[28]]]],[[27,27],4],[[],4],[[],4],[[],4],[[27,5],6],[[28,5],6],[[]],[[]],[28,[[55,[12]]]],[28,[[55,[1]]]],[28,[[56,[12,12]]]],[28,[[55,[12]]]],[28,[[57,[12,[55,[12]]]]]],[[28,12],[[36,[25]]]],[[28,12],[[24,[27]]]],[[28,12],[[18,[[24,[12]]]]]],[28,12],[[28,12],[[24,[12]]]],[28,[[57,[12,30]]]],[[]],[[]],[17,28],[28,12],[28,12],[28,12],[[27,13],3],[[28,13],3],[[]],[[],14],[[],3],[[],3],[[],3],[[],3],[[],15],[[],15],0,0,0,0,0,[18,18],[[28,58],18],[[],18],[[],[[18,[4]]]],[[],[[18,[[36,[17]]]]]]],"c":[],"p":[[3,"Block"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[15,"usize"],[8,"Serializer"],[3,"String"],[3,"TypeId"],[3,"Coordinator"],[3,"Submission"],[6,"Result"],[3,"Dispatcher"],[8,"SubmissionHandler"],[8,"DebuggerHandler"],[4,"BreakpointSpec"],[4,"DebugCommand"],[3,"Vec"],[3,"RuntimeFunction"],[15,"slice"],[4,"State"],[3,"RunState"],[3,"Input"],[3,"Job"],[3,"OutputConnection"],[15,"str"],[4,"Value"],[3,"Error"],[3,"Backtrace"],[4,"Option"],[8,"FnOnce"],[4,"ErrorKind"],[4,"ParseError"],[3,"Error"],[3,"Error"],[3,"Error"],[3,"Iter"],[3,"Demand"],[8,"Error"],[3,"Box"],[8,"Into"],[8,"Send"],[3,"Executor"],[3,"LibraryManifest"],[3,"Url"],[8,"Provider"],[3,"Arc"],[3,"JobPayload"],[3,"HashSet"],[3,"MultiMap"],[3,"HashMap"],[3,"Metrics"],[8,"ResultExt"]]},\
"flowsamples":{"doc":"<code>flowsamples</code> is a set of sample flows, used to test and …","t":"RRRRRFFF","n":["TEST_ARGS_FILENAME","TEST_FILE_FILENAME","TEST_STDERR_FILENAME","TEST_STDIN_FILENAME","TEST_STDOUT_FILENAME","args","main","run_sample"],"q":[[0,"flowsamples"]],"d":["Name of file where flow arguments for a flow sample test …","Name of file used for file output of a sample","Name of file where any Stderr will be written from while …","Name of file where any Stdin will be read from while …","Name of file where any Stdout will be written while …","Read the flow args from a file and return them as a Vector …","Run one or all of the flowsamples by typing <code>flowsamples</code> or …","Run one specific flow sample"],"i":[0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[],4],[[1,1,5,5],4]],"c":[],"p":[[3,"Path"],[3,"String"],[3,"Vec"],[6,"Result"],[15,"bool"]]},\
"flowstdlib":{"doc":"<code>flowstdlib</code> is a library of flows and functions that can be …","t":"AAAAAAAAAAAAADLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLAAAAAAAAAAAAAADLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDENGINLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAADLLLLLLLLLDLLLLLLLLLDLLLLLLLLLFAAAAAAAAADLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLLDLLLLLLLLL","n":["control","data","errors","fmt","manifest","math","compare_switch","index","index_f","join","route","select","tap","CompareSwitch","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Index","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Join","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Route","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Select","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Tap","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","accumulate","append","count","duplicate","duplicate_rows","enumerate","info","multiply_row","ordered_split","remove","sort","split","transpose","zip","Accumulate","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Append","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Count","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Duplicate","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","DuplicateRows","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Enumerate","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Info","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","MultiplyRow","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","OrderedSplit","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Remove","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Sort","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Split","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Transpose","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Zip","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Error","ErrorKind","Msg","Result","ResultExt","Url","backtrace","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","description","description","description","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_kind","from_kind","into","into","iter","iter","kind","kind","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_boxed_chain","with_chain","with_chain","reverse","to_json","to_string","Reverse","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","ToJson","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","ToString","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","get_manifest","add","compare","divide","multiply","range","range_split","sequence","sqrt","subtract","Add","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Compare","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Divide","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Multiply","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","RangeSplit","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Sqrt","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id","Subtract","borrow","borrow_mut","fmt","from","into","run","try_from","try_into","type_id"],"q":[[0,"flowstdlib"],[6,"flowstdlib::control"],[13,"flowstdlib::control::compare_switch"],[23,"flowstdlib::control::index"],[33,"flowstdlib::control::join"],[43,"flowstdlib::control::route"],[53,"flowstdlib::control::select"],[63,"flowstdlib::control::tap"],[73,"flowstdlib::data"],[87,"flowstdlib::data::accumulate"],[97,"flowstdlib::data::append"],[107,"flowstdlib::data::count"],[117,"flowstdlib::data::duplicate"],[127,"flowstdlib::data::duplicate_rows"],[137,"flowstdlib::data::enumerate"],[147,"flowstdlib::data::info"],[157,"flowstdlib::data::multiply_row"],[167,"flowstdlib::data::ordered_split"],[177,"flowstdlib::data::remove"],[187,"flowstdlib::data::sort"],[197,"flowstdlib::data::split"],[207,"flowstdlib::data::transpose"],[217,"flowstdlib::data::zip"],[227,"flowstdlib::errors"],[280,"flowstdlib::fmt"],[283,"flowstdlib::fmt::reverse"],[293,"flowstdlib::fmt::to_json"],[303,"flowstdlib::fmt::to_string"],[313,"flowstdlib::manifest"],[314,"flowstdlib::math"],[323,"flowstdlib::math::add"],[333,"flowstdlib::math::compare"],[343,"flowstdlib::math::divide"],[353,"flowstdlib::math::multiply"],[363,"flowstdlib::math::range_split"],[373,"flowstdlib::math::sqrt"],[383,"flowstdlib::math::subtract"]],"d":["Functions and flows to control the flow of data in a flow …","Some generic processes that act on data. functions for …","provides Error that other modules in this crate will …","Functions for the formatting of values and conversion from …","Use manifest::get_manifest to get the natively/statically …","Math Functions and flows functions for maths operations on …","A module with functions to compare data elements and …","A function to select a value to pass based on index","A flow wrapper for the Index function to simplify its use …","A function for joining data","A function to route data based on a control value","A function to select data on output on a control value","A function to control the flow of data based on a control …","CompareSwitch (//flowstdlib/control/compare_switch)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Index (//flowstdlib/control/index)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Join (//flowstdlib/control/join)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Route (//flowstdlib/control/route)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Select (//flowstdlib/control/select)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Tap (//flowstdlib/control/tap)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A module that implements accumulating an array from a …","A module that implements String concatenation","A module that counts data passed thru it","A module that duplicates objects into an array of them","A module that duplicates the rows in an array","A module that enumerates entries of an array","A module with a function to get info about a Value","A module that does matrix row multiplication","A module that splits a String into an array of strings","A module that removes elements from an array","A module with a function to sort values into an ordered …","A module that splits a String into an array of strings","A module with a function for transposing a Matrix","A module that zips two sets of data into a set of tuples …","Accumulate (//flowstdlib/data/accumulate)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Append (//flowstdlib/data/append)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Count (//flowstdlib/data/count)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Duplicate (//flowstdlib/data/duplicate)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","DuplicateRows (//flowstdlib/data/duplicate_rows)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Enumerate (//flowstdlib/data/enumerate)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Info (//flowstdlib/data/info)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","MultiplyRow (//flowstdlib/data/multiply_row)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","OrderedSplit (//flowstdlib/data/ordered_split)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Remove (//flowstdlib/data/remove)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Sort (//flowstdlib/data/sort)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Split (//flowstdlib/data/split)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Transpose (//flowstdlib/data/transpose)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Zip (//flowstdlib/data/zip)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","The Error type.","The kind of an error.","A convenient variant for String.","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","","Returns the backtrace associated with this error.","","Exits a function early with an error","","","","","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","Extends the error chain with a new entry.","","","A short description of the error. This method is identical …","A string describing the error kind.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Constructs an error from a kind, and generates a backtrace.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates over the error chain.","Returns the kind of the error.","","","","","","","","","","","","Construct a chained error from another boxed error and a …","Constructs a chained error from another error and a kind, …","","A module to reverse a <code>String</code>","A module to convert a <code>String</code> to its <code>Json</code> representation","A module to convert a <code>Json</code> value to a <code>String</code>","Reverse (//flowstdlib/fmt/reverse)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","ToJson (//flowstdlib/fmt/to_json)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","ToString (//flowstdlib/fmt/to_string)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Return the LibraryManifest for this library","A module with a function to add two <code>Numbers</code>","A module with functions to compare data elements","A module with a function to divide two <code>Numbers</code>","A module with a function to multiply two <code>Numbers</code>","A flow to generate numbers within a range","A module with a function to split a range of <code>Numbers</code>, into …","A flow to generate a sequence of numbers","A module with a function to calculate the square root of a …","A module with a function to subtract two <code>Numbers</code>","Add (//flowstdlib/math/add)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Compare (//flowstdlib/math/compare)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Divide (//flowstdlib/math/divide)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Multiply (//flowstdlib/math/multiply)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Range (//flowstdlib/math/range_split)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Sqrt (//flowstdlib/math/sqrt)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Subtract (//flowstdlib/math/subtract)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,0,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,0,21,21,21,21,21,21,21,21,21,0,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,0,0,33,0,0,33,28,28,0,28,33,28,33,54,28,28,28,28,33,28,28,33,33,28,28,28,28,28,33,33,33,33,28,28,28,33,28,28,28,28,28,28,28,33,28,33,28,33,28,33,28,28,28,0,0,0,0,42,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,43,43,43,0,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,47,47,47,47,47,47,47,47,47,0,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,51,0,52,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[1,2],3],[[]],[[]],[[1,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[9,2],3],[[]],[[]],[[9,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[10,2],3],[[]],[[]],[[10,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[11,2],3],[[]],[[]],[[11,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[12,2],3],[[]],[[]],[[12,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[13,2],3],[[]],[[]],[[13,[5,[4]]],6],[[],7],[[],7],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[14,2],3],[[]],[[]],[[14,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[15,2],3],[[]],[[]],[[15,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[16,2],3],[[]],[[]],[[16,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[17,2],3],[[]],[[]],[[17,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[18,2],3],[[]],[[]],[[18,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[19,2],3],[[]],[[]],[[19,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[20,2],3],[[]],[[]],[[20,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[21,2],3],[[]],[[]],[[21,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[22,2],3],[[]],[[]],[[22,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[23,2],3],[[]],[[]],[[23,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[24,2],3],[[]],[[]],[[24,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[25,2],3],[[]],[[]],[[25,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[26,2],3],[[]],[[]],[[26,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[27,2],3],[[]],[[]],[[27,[5,[4]]],6],[[],7],[[],7],[[],8],0,0,0,0,0,0,[28,[[30,[29]]]],[28,[[30,[29]]]],0,[[]],[[]],[[]],[[]],[31,[[7,[28]]]],[[28,31],28],[[28,31],28],[28,32],[28,32],[33,32],[[28,2],3],[[28,2],3],[[33,2],3],[[33,2],3],[32,28],[33,28],[34,28],[[]],[35,28],[32,33],[[]],[34,33],[28,33],[[],28],[33,28],[[]],[[]],[28,36],[28,36],[28,33],[28],[37],[28,[[30,[38]]]],[[],34],[[],34],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[[39,[38]],[40,[33]]],28],[[[0,[38,41]],[40,[33]]],28],[[[0,[38,41]],40],28],0,0,0,0,[[]],[[]],[[42,2],3],[[]],[[]],[[42,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[43,2],3],[[]],[[]],[[43,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[44,2],3],[[]],[[]],[[44,[5,[4]]],6],[[],7],[[],7],[[],8],[[],[[46,[45]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[47,2],3],[[]],[[]],[[47,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[48,2],3],[[]],[[]],[[48,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[49,2],3],[[]],[[]],[[49,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[50,2],3],[[]],[[]],[[50,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[51,2],3],[[]],[[]],[[51,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[52,2],3],[[]],[[]],[[52,[5,[4]]],6],[[],7],[[],7],[[],8],0,[[]],[[]],[[53,2],3],[[]],[[]],[[53,[5,[4]]],6],[[],7],[[],7],[[],8]],"c":[],"p":[[3,"CompareSwitch"],[3,"Formatter"],[6,"Result"],[4,"Value"],[15,"slice"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"Index"],[3,"Join"],[3,"Route"],[3,"Select"],[3,"Tap"],[3,"Accumulate"],[3,"Append"],[3,"Count"],[3,"Duplicate"],[3,"DuplicateRows"],[3,"Enumerate"],[3,"Info"],[3,"MultiplyRow"],[3,"OrderedSplit"],[3,"Remove"],[3,"Sort"],[3,"Split"],[3,"Transpose"],[3,"Zip"],[3,"Error"],[3,"Backtrace"],[4,"Option"],[8,"FnOnce"],[15,"str"],[4,"ErrorKind"],[3,"String"],[4,"ParseError"],[3,"Iter"],[3,"Demand"],[8,"Error"],[3,"Box"],[8,"Into"],[8,"Send"],[3,"Reverse"],[3,"ToJson"],[3,"ToString"],[3,"LibraryManifest"],[6,"Result"],[3,"Add"],[3,"Compare"],[3,"Divide"],[3,"Multiply"],[3,"RangeSplit"],[3,"Sqrt"],[3,"Subtract"],[8,"ResultExt"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
