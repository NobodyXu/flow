window.SIDEBAR_ITEMS = {"mod":[["block","Provides [Block][block::Block] that represents a block imposed on a function due to destination being busy"],["coordinator","Provides [Coordinator][coordinator::Coordinator] responsible for coordinating the execution of flows submitted to it"],["debug_command","Provides the [DebugCommand][debug_command::DebugCommand] enum for commands from debug client to debug server"],["dispatcher","Provides [Dispatcher][dispatcher::Dispatcher] used by the [Coordinator][coordinator::Coordinator] to dispatch [Jobs][job::Job] for execution by an [Executor][executor::Executor]"],["errors","Holds all [Error][errors::Error] types, and other modules in this crate will `use errors::*;` to get access to everything `error_chain` creates."],["executor","Provides [Executor][executor::Executor] that receives jobs for execution, executes them and returns results"],["info","Provides methods to get information about this library"],["job","Provides [Job][job::Job] that holds jobs before and after their execution"],["protocols","Provides a number of traits that define methods used in protocols between server and clients that a client must implement. Such as [DebuggerProtocol][protocols::DebuggerProtocol] and [SubmissionProtocol][protocols::SubmissionProtocol]"],["run_state","Provides [RunState][run_state::RunState] that tracks the current runtime state, used by [Coordinator][coordinator::Coordinator]"],["services","Provides well-known service names used across multiple binary crates"]]};