flow = "arrays"
version = "0.1.0"
author_name = "Andrew Mackenzie"
author_email = "andrew@mackenzie-serres.net"

# Sample to show the capabilities of the runtime mapping:
#    gathering from an output of type object to an input of type object, of a specified depth : p1 --> p2
#    an output of type array of objects to an input that is of type object                    : p2 --> p3

# P1 - range - generates a stream of outputs of type Number
# P2 - input of type Number of width 2, output of type Array of Number
# P3 - input of type Number and output of type Number, adding 1 in the processb/
# P4 - prints

[[process]]
alias = "p1"
source = "lib://flowstdlib/math/sequence.toml"
input.start = {once = 1}
input.end = {once = 20}

[[connection]]
from = "process/p1/sequence"
to = "process/p2"

[[process]]
alias = "p2"
source = "lib://flowstdlib/data/compose_array.toml"

[[connection]]
from = "process/p2"
to = "process/p3/i1"

[[process]]
alias = "p3"
source = "lib://flowstdlib/math/add.toml"
input.i2 = {constant = 1}

[[connection]]
from = "process/p3"
to = "process/p4"

[[process]]
alias = "p4"
source = "lib://runtime/stdio/stdout.toml"